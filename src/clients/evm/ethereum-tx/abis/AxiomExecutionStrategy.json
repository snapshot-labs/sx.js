[
  "constructor(address,uint256,address,address,uint256,address,bytes32)",
  "error ArrayLengthMismatch()",
  "error AuthenticatorNotWhitelisted()",
  "error AxiomProposalAlreadyExists(bytes32)",
  "error AxiomProposalExists(uint256)",
  "error AxiomV2QueryAddressIsZero()",
  "error CallerMustBeAxiomV2Query()",
  "error CannotCommitProposalBeforeStartBlock(uint32,uint32)",
  "error DurationMustExceedProvingTimeAllownace(uint32,uint32,uint32)",
  "error EmptyArray()",
  "error ExceedsStrategyLimit()",
  "error ExecutionFailed()",
  "error FailedToPassProposalValidation()",
  "error InvalidCaller()",
  "error InvalidDuration(uint32,uint32)",
  "error InvalidExecutionPayloadHash(bytes32)",
  "error InvalidPayload()",
  "error InvalidProof()",
  "error InvalidProposal()",
  "error InvalidProposalStatus(uint8)",
  "error InvalidSpace()",
  "error InvalidStrategyIndex(uint256)",
  "error NoActiveVotingStrategies()",
  "error NotAxiomProposal(uint256)",
  "error OnlyProver()",
  "error ProposalAlreadyProven(bytes32)",
  "error ProposalFinalized()",
  "error ProposalNotAccepted(uint256)",
  "error ProposalNotCommitted(bytes32)",
  "error ProposalNotProven(bytes32)",
  "error UserAlreadyVoted()",
  "error UserHasNoVotingPower()",
  "error VotingDelayHasPassed()",
  "error VotingPeriodHasEnded()",
  "error VotingPeriodHasNotStarted()",
  "error ZeroAddress()",
  "event AxiomExecutionStrategySetUp(address indexed,uint256,address indexed,uint256,address,bytes32)",
  "event AxiomProposalCreated(uint256,tuple(uint8,bytes32,uint256,uint256,uint256))",
  "event AxiomProposalExecuted(uint256 indexed,uint256 indexed,bytes32)",
  "event AxiomV2Call(uint64 indexed,address,bytes32 indexed,uint256 indexed)",
  "event AxiomV2OffchainCall(uint64 indexed,address,bytes32 indexed,uint256 indexed)",
  "event AxiomVoteVerifierAddressUpdated(address)",
  "event Initialized(uint8)",
  "event OnchainVotesFinalized(uint256 indexed,uint256 indexed,uint256,uint256,uint256,bytes32 indexed)",
  "event OwnershipTransferred(address indexed,address indexed)",
  "event ProvingTimeAllowanceUpdated(uint32)",
  "event QuerySchemaUpdated(bytes32)",
  "event QuorumUpdated(uint256)",
  "event SnapshotAddressUpdated(address)",
  "event SnapshotSlotUpdated(uint256)",
  "event SpaceDisabled(address)",
  "event SpaceEnabled(address)",
  "event TransactionExecuted(tuple(address,uint256,bytes,uint8,uint256))",
  "event WriteOffchainVotes(uint256,uint256,uint256,uint256,uint256)",
  "function axiomProposals(uint256) view returns (uint8, bytes32, uint256, uint256, uint256)",
  "function axiomV2Callback(uint64,address,bytes32,uint256,bytes32[],bytes)",
  "function axiomV2OffchainCallback(uint64,address,bytes32,uint256,bytes32[],bytes)",
  "function axiomV2QueryAddress() view returns (address)",
  "function disableSpace(address)",
  "function enableSpace(address)",
  "function execute(uint256,tuple(address,uint32,address,uint32,uint32,uint8,bytes32,uint256),uint256,uint256,uint256,bytes)",
  "function executeMergedProposal(uint256,bytes)",
  "function getMergedVotes(uint256) view returns (uint256, uint256, uint256)",
  "function getProofStatus(uint256) view returns (uint8)",
  "function getProposalStatus(tuple(address,uint32,address,uint32,uint32,uint8,bytes32,uint256),uint256,uint256,uint256) view returns (uint8)",
  "function getStrategyType() pure returns (string)",
  "function isMergedProposalAccepted(uint256) view returns (bool)",
  "function isSpaceEnabled(address) view returns (uint256)",
  "function owner() view returns (address)",
  "function querySchema() view returns (bytes32)",
  "function quorum() view returns (uint256)",
  "function renounceOwnership()",
  "function setQuerySchema(bytes32)",
  "function setQuorum(uint256)",
  "function setUp(bytes)",
  "function space() view returns (address)",
  "function transferOwnership(address)"
]
