[
  {
    "name": "constructor",
    "type": "function",
    "inputs": [],
    "outputs": [
      {
        "name": "dummy output because starknet requires inputs or outputs on constructor",
        "type": "core::starknet::contract_address::ContractAddress"
      }
    ],
    "state_mutability": "external"
  },
  {
    "name": "sx::utils::types::Strategy",
    "type": "struct",
    "members": [
      {
        "name": "address",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "params",
        "type": "core::array::Array::<core::felt252>"
      }
    ]
  },
  {
    "name": "propose",
    "type": "function",
    "inputs": [
      {
        "name": "author",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "execution_strategy",
        "type": "sx::utils::types::Strategy"
      },
      {
        "name": "user_proposal_validation_params",
        "type": "core::array::Array::<core::felt252>"
      }
    ],
    "outputs": [],
    "state_mutability": "external"
  },
  {
    "name": "sx::utils::types::Choice",
    "type": "enum",
    "variants": [
      {
        "name": "Against",
        "type": "()"
      },
      {
        "name": "For",
        "type": "()"
      },
      {
        "name": "Abstain",
        "type": "()"
      }
    ]
  },
  {
    "name": "sx::utils::types::IndexedStrategy",
    "type": "struct",
    "members": [
      {
        "name": "index",
        "type": "core::integer::u8"
      },
      {
        "name": "params",
        "type": "core::array::Array::<core::felt252>"
      }
    ]
  },
  {
    "name": "vote",
    "type": "function",
    "inputs": [
      {
        "name": "voter",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "proposal_id",
        "type": "core::integer::u256"
      },
      {
        "name": "choice",
        "type": "core::integer::u8"
      },
      {
        "name": "user_voting_strategies",
        "type": "core::array::Array::<sx::utils::types::IndexedStrategy>"
      }
    ],
    "outputs": [],
    "state_mutability": "external"
  },
  {
    "name": "execute",
    "type": "function",
    "inputs": [
      {
        "name": "proposal_id",
        "type": "core::integer::u256"
      },
      {
        "name": "execution_payload",
        "type": "core::array::Array::<core::felt252>"
      }
    ],
    "outputs": [],
    "state_mutability": "external"
  },
  {
    "name": "update_proposal",
    "type": "function",
    "inputs": [
      {
        "name": "author",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "proposal_id",
        "type": "core::integer::u256"
      },
      {
        "name": "execution_strategy",
        "type": "sx::utils::types::Strategy"
      }
    ],
    "outputs": [],
    "state_mutability": "external"
  },
  {
    "name": "cancel_proposal",
    "type": "function",
    "inputs": [
      {
        "name": "proposal_id",
        "type": "core::integer::u256"
      }
    ],
    "outputs": [],
    "state_mutability": "external"
  },
  {
    "name": "owner",
    "type": "function",
    "inputs": [],
    "outputs": [
      {
        "type": "core::starknet::contract_address::ContractAddress"
      }
    ],
    "state_mutability": "view"
  },
  {
    "name": "max_voting_duration",
    "type": "function",
    "inputs": [],
    "outputs": [
      {
        "type": "core::integer::u64"
      }
    ],
    "state_mutability": "view"
  },
  {
    "name": "min_voting_duration",
    "type": "function",
    "inputs": [],
    "outputs": [
      {
        "type": "core::integer::u64"
      }
    ],
    "state_mutability": "view"
  },
  {
    "name": "next_proposal_id",
    "type": "function",
    "inputs": [],
    "outputs": [
      {
        "type": "core::integer::u256"
      }
    ],
    "state_mutability": "view"
  },
  {
    "name": "voting_delay",
    "type": "function",
    "inputs": [],
    "outputs": [
      {
        "type": "core::integer::u64"
      }
    ],
    "state_mutability": "view"
  },
  {
    "name": "authenticators",
    "type": "function",
    "inputs": [
      {
        "name": "account",
        "type": "core::starknet::contract_address::ContractAddress"
      }
    ],
    "outputs": [
      {
        "type": "core::bool"
      }
    ],
    "state_mutability": "view"
  },
  {
    "name": "voting_strategies",
    "type": "function",
    "inputs": [
      {
        "name": "index",
        "type": "core::integer::u8"
      }
    ],
    "outputs": [
      {
        "type": "sx::utils::types::Strategy"
      }
    ],
    "state_mutability": "view"
  },
  {
    "name": "active_voting_strategies",
    "type": "function",
    "inputs": [],
    "outputs": [
      {
        "type": "core::integer::u256"
      }
    ],
    "state_mutability": "view"
  },
  {
    "name": "next_voting_strategy_index",
    "type": "function",
    "inputs": [],
    "outputs": [
      {
        "type": "core::integer::u8"
      }
    ],
    "state_mutability": "view"
  },
  {
    "name": "proposal_validation_strategy",
    "type": "function",
    "inputs": [],
    "outputs": [
      {
        "type": "sx::utils::types::Strategy"
      }
    ],
    "state_mutability": "view"
  },
  {
    "name": "sx::utils::types::Proposal",
    "type": "struct",
    "members": [
      {
        "name": "snapshot_timestamp",
        "type": "core::integer::u64"
      },
      {
        "name": "start_timestamp",
        "type": "core::integer::u64"
      },
      {
        "name": "min_end_timestamp",
        "type": "core::integer::u64"
      },
      {
        "name": "max_end_timestamp",
        "type": "core::integer::u64"
      },
      {
        "name": "execution_payload_hash",
        "type": "core::felt252"
      },
      {
        "name": "execution_strategy",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "author",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "finalization_status",
        "type": "sx::utils::types::FinalizationStatus"
      },
      {
        "name": "active_voting_strategies",
        "type": "core::integer::u256"
      }
    ]
  },
  {
    "name": "proposals",
    "type": "function",
    "inputs": [
      {
        "name": "proposal_id",
        "type": "core::integer::u256"
      }
    ],
    "outputs": [
      {
        "type": "sx::utils::types::Proposal"
      }
    ],
    "state_mutability": "view"
  },
  {
    "name": "set_max_voting_duration",
    "type": "function",
    "inputs": [
      {
        "name": "max_voting_duration",
        "type": "core::integer::u64"
      }
    ],
    "outputs": [],
    "state_mutability": "external"
  },
  {
    "name": "set_min_voting_duration",
    "type": "function",
    "inputs": [
      {
        "name": "min_voting_duration",
        "type": "core::integer::u64"
      }
    ],
    "outputs": [],
    "state_mutability": "external"
  },
  {
    "name": "set_voting_delay",
    "type": "function",
    "inputs": [
      {
        "name": "voting_delay",
        "type": "core::integer::u64"
      }
    ],
    "outputs": [],
    "state_mutability": "external"
  },
  {
    "name": "set_proposal_validation_strategy",
    "type": "function",
    "inputs": [
      {
        "name": "proposal_validation_strategy",
        "type": "sx::utils::types::Strategy"
      }
    ],
    "outputs": [],
    "state_mutability": "external"
  },
  {
    "name": "add_voting_strategies",
    "type": "function",
    "inputs": [
      {
        "name": "voting_strategies",
        "type": "core::array::Array::<sx::utils::types::Strategy>"
      }
    ],
    "outputs": [],
    "state_mutability": "external"
  },
  {
    "name": "remove_voting_strategies",
    "type": "function",
    "inputs": [
      {
        "name": "voting_strategy_indices",
        "type": "core::array::Array::<core::felt252>"
      }
    ],
    "outputs": [],
    "state_mutability": "external"
  },
  {
    "name": "add_authenticators",
    "type": "function",
    "inputs": [
      {
        "name": "authenticators",
        "type": "core::array::Array::<core::starknet::contract_address::ContractAddress>"
      }
    ],
    "outputs": [],
    "state_mutability": "external"
  },
  {
    "name": "remove_authenticators",
    "type": "function",
    "inputs": [
      {
        "name": "authenticators",
        "type": "core::array::Array::<core::starknet::contract_address::ContractAddress>"
      }
    ],
    "outputs": [],
    "state_mutability": "external"
  },
  {
    "name": "transfer_ownership",
    "type": "function",
    "inputs": [
      {
        "name": "new_owner",
        "type": "core::starknet::contract_address::ContractAddress"
      }
    ],
    "outputs": [],
    "state_mutability": "external"
  },
  {
    "name": "renounce_ownership",
    "type": "function",
    "inputs": [],
    "outputs": [],
    "state_mutability": "external"
  },
  {
    "name": "SpaceCreated",
    "type": "event",
    "inputs": [
      {
        "name": "_space",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "_owner",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "_voting_delay",
        "type": "core::integer::u64"
      },
      {
        "name": "_min_voting_duration",
        "type": "core::integer::u64"
      },
      {
        "name": "_max_voting_duration",
        "type": "core::integer::u64"
      },
      {
        "name": "_proposal_validation_strategy",
        "type": "sx::utils::types::Strategy"
      },
      {
        "name": "_voting_strategies",
        "type": "core::array::Array::<sx::utils::types::Strategy>"
      },
      {
        "name": "_authenticators",
        "type": "core::array::Array::<core::starknet::contract_address::ContractAddress>"
      }
    ]
  },
  {
    "name": "ProposalCreated",
    "type": "event",
    "inputs": [
      {
        "name": "_proposal_id",
        "type": "core::integer::u256"
      },
      {
        "name": "_author",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "_proposal",
        "type": "sx::utils::types::Proposal"
      },
      {
        "name": "_payload",
        "type": "core::array::Array::<core::felt252>"
      }
    ]
  },
  {
    "name": "VoteCast",
    "type": "event",
    "inputs": [
      {
        "name": "_proposal_id",
        "type": "core::integer::u256"
      },
      {
        "name": "_voter",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "_choice",
        "type": "sx::utils::types::Choice"
      },
      {
        "name": "_voting_power",
        "type": "core::integer::u256"
      }
    ]
  },
  {
    "name": "ProposalExecuted",
    "type": "event",
    "inputs": [
      {
        "name": "_proposal_id",
        "type": "core::integer::u256"
      }
    ]
  },
  {
    "name": "ProposalUpdated",
    "type": "event",
    "inputs": [
      {
        "name": "_proposal_id",
        "type": "core::integer::u256"
      },
      {
        "name": "_execution_stategy",
        "type": "sx::utils::types::Strategy"
      }
    ]
  },
  {
    "name": "ProposalCancelled",
    "type": "event",
    "inputs": [
      {
        "name": "_proposal_id",
        "type": "core::integer::u256"
      }
    ]
  },
  {
    "name": "VotingStrategiesRemoved",
    "type": "event",
    "inputs": [
      {
        "name": "_voting_strategy_indices",
        "type": "core::array::Array::<core::felt252>"
      }
    ]
  },
  {
    "name": "AuthenticatorsAdded",
    "type": "event",
    "inputs": [
      {
        "name": "_new_authenticators",
        "type": "core::array::Array::<core::starknet::contract_address::ContractAddress>"
      }
    ]
  },
  {
    "name": "AuthenticatorsRemoved",
    "type": "event",
    "inputs": [
      {
        "name": "_authenticators",
        "type": "core::array::Array::<core::starknet::contract_address::ContractAddress>"
      }
    ]
  },
  {
    "name": "MaxVotingDurationUpdated",
    "type": "event",
    "inputs": [
      {
        "name": "_new_max_voting_duration",
        "type": "core::integer::u64"
      }
    ]
  },
  {
    "name": "MinVotingDurationUpdated",
    "type": "event",
    "inputs": [
      {
        "name": "_new_min_voting_duration",
        "type": "core::integer::u64"
      }
    ]
  },
  {
    "name": "ProposalValidationStrategyUpdated",
    "type": "event",
    "inputs": [
      {
        "name": "_new_proposal_validation_strategy",
        "type": "sx::utils::types::Strategy"
      }
    ]
  },
  {
    "name": "VotingDelayUpdated",
    "type": "event",
    "inputs": [
      {
        "name": "_new_voting_delay",
        "type": "core::integer::u64"
      }
    ]
  }
]
