[
  {
    "type": "impl",
    "name": "Space",
    "interface_name": "sx::space::space::ISpace"
  },
  {
    "type": "struct",
    "name": "core::integer::u256",
    "members": [
      {
        "name": "low",
        "type": "core::integer::u128"
      },
      {
        "name": "high",
        "type": "core::integer::u128"
      }
    ]
  },
  {
    "type": "enum",
    "name": "core::bool",
    "variants": [
      {
        "name": "False",
        "type": "()"
      },
      {
        "name": "True",
        "type": "()"
      }
    ]
  },
  {
    "type": "struct",
    "name": "sx::types::strategy::Strategy",
    "members": [
      {
        "name": "address",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "params",
        "type": "core::array::Array::<core::felt252>"
      }
    ]
  },
  {
    "type": "struct",
    "name": "core::starknet::eth_address::EthAddress",
    "members": [
      {
        "name": "address",
        "type": "core::felt252"
      }
    ]
  },
  {
    "type": "enum",
    "name": "sx::types::user_address::UserAddress",
    "variants": [
      {
        "name": "Starknet",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "Ethereum",
        "type": "core::starknet::eth_address::EthAddress"
      },
      {
        "name": "Custom",
        "type": "core::integer::u256"
      }
    ]
  },
  {
    "type": "enum",
    "name": "sx::types::finalization_status::FinalizationStatus",
    "variants": [
      {
        "name": "Pending",
        "type": "()"
      },
      {
        "name": "Executed",
        "type": "()"
      },
      {
        "name": "Cancelled",
        "type": "()"
      }
    ]
  },
  {
    "type": "struct",
    "name": "sx::types::proposal::Proposal",
    "members": [
      {
        "name": "start_block_number",
        "type": "core::integer::u32"
      },
      {
        "name": "min_end_block_number",
        "type": "core::integer::u32"
      },
      {
        "name": "max_end_block_number",
        "type": "core::integer::u32"
      },
      {
        "name": "execution_payload_hash",
        "type": "core::felt252"
      },
      {
        "name": "execution_strategy",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "author",
        "type": "sx::types::user_address::UserAddress"
      },
      {
        "name": "finalization_status",
        "type": "sx::types::finalization_status::FinalizationStatus"
      },
      {
        "name": "active_voting_strategies",
        "type": "core::integer::u256"
      }
    ]
  },
  {
    "type": "struct",
    "name": "sx::types::update_settings_calldata::UpdateSettingsCalldata",
    "members": [
      {
        "name": "min_voting_duration",
        "type": "core::integer::u32"
      },
      {
        "name": "max_voting_duration",
        "type": "core::integer::u32"
      },
      {
        "name": "voting_delay",
        "type": "core::integer::u32"
      },
      {
        "name": "metadata_URI",
        "type": "core::array::Array::<core::felt252>"
      },
      {
        "name": "dao_URI",
        "type": "core::array::Array::<core::felt252>"
      },
      {
        "name": "proposal_validation_strategy",
        "type": "sx::types::strategy::Strategy"
      },
      {
        "name": "proposal_validation_strategy_metadata_URI",
        "type": "core::array::Array::<core::felt252>"
      },
      {
        "name": "authenticators_to_add",
        "type": "core::array::Array::<core::starknet::contract_address::ContractAddress>"
      },
      {
        "name": "authenticators_to_remove",
        "type": "core::array::Array::<core::starknet::contract_address::ContractAddress>"
      },
      {
        "name": "voting_strategies_to_add",
        "type": "core::array::Array::<sx::types::strategy::Strategy>"
      },
      {
        "name": "voting_strategies_metadata_URIs_to_add",
        "type": "core::array::Array::<core::array::Array::<core::felt252>>"
      },
      {
        "name": "voting_strategies_to_remove",
        "type": "core::array::Array::<core::integer::u8>"
      }
    ]
  },
  {
    "type": "enum",
    "name": "sx::types::choice::Choice",
    "variants": [
      {
        "name": "Against",
        "type": "()"
      },
      {
        "name": "For",
        "type": "()"
      },
      {
        "name": "Abstain",
        "type": "()"
      }
    ]
  },
  {
    "type": "struct",
    "name": "sx::types::indexed_strategy::IndexedStrategy",
    "members": [
      {
        "name": "index",
        "type": "core::integer::u8"
      },
      {
        "name": "params",
        "type": "core::array::Array::<core::felt252>"
      }
    ]
  },
  {
    "type": "interface",
    "name": "sx::space::space::ISpace",
    "items": [
      {
        "type": "function",
        "name": "owner",
        "inputs": [],
        "outputs": [
          {
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "max_voting_duration",
        "inputs": [],
        "outputs": [
          {
            "type": "core::integer::u32"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "min_voting_duration",
        "inputs": [],
        "outputs": [
          {
            "type": "core::integer::u32"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "next_proposal_id",
        "inputs": [],
        "outputs": [
          {
            "type": "core::integer::u256"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "voting_delay",
        "inputs": [],
        "outputs": [
          {
            "type": "core::integer::u32"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "authenticators",
        "inputs": [
          {
            "name": "account",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [
          {
            "type": "core::bool"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "voting_strategies",
        "inputs": [
          {
            "name": "index",
            "type": "core::integer::u8"
          }
        ],
        "outputs": [
          {
            "type": "sx::types::strategy::Strategy"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "active_voting_strategies",
        "inputs": [],
        "outputs": [
          {
            "type": "core::integer::u256"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "next_voting_strategy_index",
        "inputs": [],
        "outputs": [
          {
            "type": "core::integer::u8"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "proposal_validation_strategy",
        "inputs": [],
        "outputs": [
          {
            "type": "sx::types::strategy::Strategy"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "proposals",
        "inputs": [
          {
            "name": "proposal_id",
            "type": "core::integer::u256"
          }
        ],
        "outputs": [
          {
            "type": "sx::types::proposal::Proposal"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "update_settings",
        "inputs": [
          {
            "name": "input",
            "type": "sx::types::update_settings_calldata::UpdateSettingsCalldata"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "transfer_ownership",
        "inputs": [
          {
            "name": "new_owner",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "renounce_ownership",
        "inputs": [],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "propose",
        "inputs": [
          {
            "name": "author",
            "type": "sx::types::user_address::UserAddress"
          },
          {
            "name": "execution_strategy",
            "type": "sx::types::strategy::Strategy"
          },
          {
            "name": "user_proposal_validation_params",
            "type": "core::array::Array::<core::felt252>"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "vote",
        "inputs": [
          {
            "name": "voter",
            "type": "sx::types::user_address::UserAddress"
          },
          {
            "name": "proposal_id",
            "type": "core::integer::u256"
          },
          {
            "name": "choice",
            "type": "sx::types::choice::Choice"
          },
          {
            "name": "user_voting_strategies",
            "type": "core::array::Array::<sx::types::indexed_strategy::IndexedStrategy>"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "execute",
        "inputs": [
          {
            "name": "proposal_id",
            "type": "core::integer::u256"
          },
          {
            "name": "execution_payload",
            "type": "core::array::Array::<core::felt252>"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "update_proposal",
        "inputs": [
          {
            "name": "author",
            "type": "sx::types::user_address::UserAddress"
          },
          {
            "name": "proposal_id",
            "type": "core::integer::u256"
          },
          {
            "name": "execution_strategy",
            "type": "sx::types::strategy::Strategy"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "cancel_proposal",
        "inputs": [
          {
            "name": "proposal_id",
            "type": "core::integer::u256"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "upgrade",
        "inputs": [
          {
            "name": "class_hash",
            "type": "core::starknet::class_hash::ClassHash"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      }
    ]
  },
  {
    "type": "constructor",
    "name": "constructor",
    "inputs": [
      {
        "name": "_owner",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "_max_voting_duration",
        "type": "core::integer::u32"
      },
      {
        "name": "_min_voting_duration",
        "type": "core::integer::u32"
      },
      {
        "name": "_voting_delay",
        "type": "core::integer::u32"
      },
      {
        "name": "_proposal_validation_strategy",
        "type": "sx::types::strategy::Strategy"
      },
      {
        "name": "_voting_strategies",
        "type": "core::array::Array::<sx::types::strategy::Strategy>"
      },
      {
        "name": "_authenticators",
        "type": "core::array::Array::<core::starknet::contract_address::ContractAddress>"
      }
    ]
  },
  {
    "type": "event",
    "name": "sx::space::space::Space::Event",
    "kind": "enum",
    "variants": []
  }
]
