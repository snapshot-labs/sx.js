{
  "abi": [
    {
      "inputs": [],
      "name": "ExecutionFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidPayload",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "enum ProposalStatus",
          "name": "status",
          "type": "uint8"
        }
      ],
      "name": "InvalidProposalStatus",
      "type": "error"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "snapshotTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "startTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "minEndTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "maxEndTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "bytes32",
              "name": "executionPayloadHash",
              "type": "bytes32"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "addy",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "params",
                  "type": "bytes"
                }
              ],
              "internalType": "struct Strategy",
              "name": "executionStrategy",
              "type": "tuple"
            },
            {
              "internalType": "address",
              "name": "author",
              "type": "address"
            },
            {
              "internalType": "enum FinalizationStatus",
              "name": "finalizationStatus",
              "type": "uint8"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "addy",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "params",
                  "type": "bytes"
                }
              ],
              "internalType": "struct Strategy[]",
              "name": "votingStrategies",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct Proposal",
          "name": "proposal",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "votesFor",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "votesAgainst",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "votesAbstain",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "payload",
          "type": "bytes"
        }
      ],
      "name": "execute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "snapshotTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "startTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "minEndTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "maxEndTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "bytes32",
              "name": "executionPayloadHash",
              "type": "bytes32"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "addy",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "params",
                  "type": "bytes"
                }
              ],
              "internalType": "struct Strategy",
              "name": "executionStrategy",
              "type": "tuple"
            },
            {
              "internalType": "address",
              "name": "author",
              "type": "address"
            },
            {
              "internalType": "enum FinalizationStatus",
              "name": "finalizationStatus",
              "type": "uint8"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "addy",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "params",
                  "type": "bytes"
                }
              ],
              "internalType": "struct Strategy[]",
              "name": "votingStrategies",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct Proposal",
          "name": "proposal",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "votesFor",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "votesAgainst",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "votesAbstain",
          "type": "uint256"
        }
      ],
      "name": "getProposalStatus",
      "outputs": [
        {
          "internalType": "enum ProposalStatus",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "snapshotTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "startTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "minEndTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "maxEndTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "bytes32",
              "name": "executionPayloadHash",
              "type": "bytes32"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "addy",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "params",
                  "type": "bytes"
                }
              ],
              "internalType": "struct Strategy",
              "name": "executionStrategy",
              "type": "tuple"
            },
            {
              "internalType": "address",
              "name": "author",
              "type": "address"
            },
            {
              "internalType": "enum FinalizationStatus",
              "name": "finalizationStatus",
              "type": "uint8"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "addy",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "params",
                  "type": "bytes"
                }
              ],
              "internalType": "struct Strategy[]",
              "name": "votingStrategies",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct Proposal",
          "name": "proposal",
          "type": "tuple"
        }
      ],
      "name": "getQuorum",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getStrategyType",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60808060405234610016576107fc908161001c8239f35b600080fdfe6040608081526004908136101561001557600080fd5b600090813560e01c80630b26b029146103705780630eb9b15a1461026757806353a1394e146101ec57638601320b1461004d57600080fd5b346101e85760a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101e85767ffffffffffffffff83358181116101e45761009b9036908601610559565b906084359081116101e4576100b39036908601610491565b906100c6606435604435602435846106d9565b60078110156101b8576003811415806101ad575b61017657506080015190602081519101200361014e575080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461012257600101815580f35b5060116024927f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b9050517f7c6953f9000000000000000000000000000000000000000000000000000000008152fd5b856101a985519283927fe6ace38e0000000000000000000000000000000000000000000000000000000084528301610697565b0390fd5b5060028114156100da565b6024856021887f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b8380fd5b5080fd5b5082346102635760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102635780359067ffffffffffffffff82116101e45761024060a091602093369101610559565b015101519160208380518101031261026057506020809201519051908152f35b80fd5b8280fd5b50823461026357827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610263578151908282019082821067ffffffffffffffff83111761034457508252601381526020907f53696d706c6551756f72756d56616e696c6c61000000000000000000000000008282015282519382859384528251928382860152825b84811061032e57505050828201840152601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168101030190f35b81810183015188820188015287955082016102f2565b8460416024927f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b5090346102605760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102605782359067ffffffffffffffff821161026057506103c76103e3936103d892369101610559565b6064359060443590602435906106d9565b905191829182610697565b0390f35b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f604051930116820182811067ffffffffffffffff82111761042b57604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b359063ffffffff8216820361046b57565b600080fd5b359073ffffffffffffffffffffffffffffffffffffffff8216820361046b57565b81601f8201121561046b5780359067ffffffffffffffff821161042b576104df60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f850116016103e7565b928284526020838301011161046b57816000926020809301838601378301015290565b91909160408184031261046b57604080519167ffffffffffffffff9183018281118482101761042b57604052829461053982610470565b8452602082013592831161046b576020926105549201610491565b910152565b91909161012090818185031261046b5760405167ffffffffffffffff9281018381118282101761042b5760405280946105918361045a565b82526020906105a182850161045a565b828401526105b16040850161045a565b60408401526105c26060850161045a565b60608401526080840135608084015260a084013585811161046b57816105e9918601610502565b60a08401526105fa60c08501610470565b60c084015260e0840135600381101561046b5760e084015261010093848101359086821161046b570181601f8201121561046b5780359580871161042b578660051b90848061064a8185016103e7565b809a815201928401019380851161046b57858401925b85841061067257505050505050500152565b833583811161046b57879161068c848480948a0101610502565b815201930192610660565b9190602083019260078210156106aa5752565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b919092602060a0840151015160208180518101031261046b57602061070a9101519161070584876107b3565b6107b3565b101592836107a9575b505060e08101805160038110156106aa5760020361073357505050600690565b5160038110156106aa5760010361074b575050600490565b63ffffffff9081602082015116421060001461076957505050600090565b6040810151821642101561077f57505050600190565b606001511642101561079a571561079557600290565b600190565b156107a457600390565b600590565b1191503880610713565b919082018092116107c057565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea164736f6c6343000812000a",
    "sourceMap": "106:933:51:-:0;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6040608081526004908136101561001557600080fd5b600090813560e01c80630b26b029146103705780630eb9b15a1461026757806353a1394e146101ec57638601320b1461004d57600080fd5b346101e85760a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101e85767ffffffffffffffff83358181116101e45761009b9036908601610559565b906084359081116101e4576100b39036908601610491565b906100c6606435604435602435846106d9565b60078110156101b8576003811415806101ad575b61017657506080015190602081519101200361014e575080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461012257600101815580f35b5060116024927f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b9050517f7c6953f9000000000000000000000000000000000000000000000000000000008152fd5b856101a985519283927fe6ace38e0000000000000000000000000000000000000000000000000000000084528301610697565b0390fd5b5060028114156100da565b6024856021887f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b8380fd5b5080fd5b5082346102635760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102635780359067ffffffffffffffff82116101e45761024060a091602093369101610559565b015101519160208380518101031261026057506020809201519051908152f35b80fd5b8280fd5b50823461026357827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610263578151908282019082821067ffffffffffffffff83111761034457508252601381526020907f53696d706c6551756f72756d56616e696c6c61000000000000000000000000008282015282519382859384528251928382860152825b84811061032e57505050828201840152601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168101030190f35b81810183015188820188015287955082016102f2565b8460416024927f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b5090346102605760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102605782359067ffffffffffffffff821161026057506103c76103e3936103d892369101610559565b6064359060443590602435906106d9565b905191829182610697565b0390f35b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f604051930116820182811067ffffffffffffffff82111761042b57604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b359063ffffffff8216820361046b57565b600080fd5b359073ffffffffffffffffffffffffffffffffffffffff8216820361046b57565b81601f8201121561046b5780359067ffffffffffffffff821161042b576104df60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f850116016103e7565b928284526020838301011161046b57816000926020809301838601378301015290565b91909160408184031261046b57604080519167ffffffffffffffff9183018281118482101761042b57604052829461053982610470565b8452602082013592831161046b576020926105549201610491565b910152565b91909161012090818185031261046b5760405167ffffffffffffffff9281018381118282101761042b5760405280946105918361045a565b82526020906105a182850161045a565b828401526105b16040850161045a565b60408401526105c26060850161045a565b60608401526080840135608084015260a084013585811161046b57816105e9918601610502565b60a08401526105fa60c08501610470565b60c084015260e0840135600381101561046b5760e084015261010093848101359086821161046b570181601f8201121561046b5780359580871161042b578660051b90848061064a8185016103e7565b809a815201928401019380851161046b57858401925b85841061067257505050505050500152565b833583811161046b57879161068c848480948a0101610502565b815201930192610660565b9190602083019260078210156106aa5752565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b919092602060a0840151015160208180518101031261046b57602061070a9101519161070584876107b3565b6107b3565b101592836107a9575b505060e08101805160038110156106aa5760020361073357505050600690565b5160038110156106aa5760010361074b575050600490565b63ffffffff9081602082015116421060001461076957505050600090565b6040810151821642101561077f57505050600190565b606001511642101561079a571561079557600290565b600190565b156107a457600390565b600590565b1191503880610713565b919082018092116107c057565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea164736f6c6343000812000a",
    "sourceMap": "106:933:51:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;438:65;106:933;;;;;;438:65;;:::i;:::-;106:933;;;;;;536:23;518:41;;;517:102;;;106:933;513:177;;806:29;106:933;806:29;106:933;;;;;;;839:18;806:51;802:80;;106:933;;;;;;;;;;;;;;;;;;;;;;;;802:80;106:933;;;866:16;;;;513:177;106:933;642:37;106:933;;642:37;;;;;;;;;:::i;:::-;;;;517:102;565:53;583:35;565:53;;;517:102;;106:933;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1864:26:50;106:933:51;;;;;;;:::i;:::-;1864:26:50;;:33;;106:933:51;;;;;1853:56:50;;106:933:51;;;;1853:56:50;106:933:51;1853:56:50;;;106:933:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;106:933:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;106:933:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;106:933:51;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;106:933:51;;;;;-1:-1:-1;106:933:51;388:1356:50;;;;701:33;:26;;;;:33;;;106:933:51;;;690:56:50;;106:933:51;;;;701:33:50;2126:41;690:56;;106:933:51;2126:25:50;;;;;:::i;:::-;:41;:::i;:::-;2184:21;;772:110;;;;388:1356;896:27;;;;;106:933:51;;;;;;;;927:28:50;896:59;927:28;;971:31;;;978:24;971:31;:::o;892:846::-;106:933:51;;;;;;;;1023:58:50;106:933:51;;1097:30:50;;1104:23;1097:30;:::o;1019:719::-;106:933:51;1166:23:50;;701:33;1166:23;;106:933:51;;1148:15:50;:41;1144:594;106:933:51;;;1205:33:50;;;-1:-1:-1;1205:33:50;:::o;1144:594::-;1277:24;;;106:933:51;;;1148:15:50;1259:42;106:933:51;;;1317:34:50;;;106:933:51;1317:34:50;:::o;1255:483::-;1390:24;;106:933:51;;1148:15:50;1372:42;106:933:51;;;1430:162:50;;;927:28;1462:42;:::o;1430:162::-;106:933:51;1543:34:50;:::o;1368:370::-;1608:130;;;106:933:51;1636:30:50;:::o;1608:130::-;1704:23;1697:30;:::o;772:110::-;2326:25;;-1:-1:-1;772:110:50;;;;106:933:51;;;;;;;;;;:::o;:::-;;;;;;;;;",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "execute((uint32,uint32,uint32,uint32,bytes32,(address,bytes),address,uint8,(address,bytes)[]),uint256,uint256,uint256,bytes)": "8601320b",
    "getProposalStatus((uint32,uint32,uint32,uint32,bytes32,(address,bytes),address,uint8,(address,bytes)[]),uint256,uint256,uint256)": "0b26b029",
    "getQuorum((uint32,uint32,uint32,uint32,bytes32,(address,bytes),address,uint8,(address,bytes)[]))": "53a1394e",
    "getStrategyType()": "0eb9b15a"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ExecutionFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPayload\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"enum ProposalStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"name\":\"InvalidProposalStatus\",\"type\":\"error\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"snapshotTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"startTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"minEndTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"maxEndTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"executionPayloadHash\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"addy\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"internalType\":\"struct Strategy\",\"name\":\"executionStrategy\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"enum FinalizationStatus\",\"name\":\"finalizationStatus\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"addy\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"internalType\":\"struct Strategy[]\",\"name\":\"votingStrategies\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Proposal\",\"name\":\"proposal\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"votesFor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votesAgainst\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votesAbstain\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"snapshotTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"startTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"minEndTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"maxEndTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"executionPayloadHash\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"addy\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"internalType\":\"struct Strategy\",\"name\":\"executionStrategy\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"enum FinalizationStatus\",\"name\":\"finalizationStatus\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"addy\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"internalType\":\"struct Strategy[]\",\"name\":\"votingStrategies\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Proposal\",\"name\":\"proposal\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"votesFor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votesAgainst\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votesAbstain\",\"type\":\"uint256\"}],\"name\":\"getProposalStatus\",\"outputs\":[{\"internalType\":\"enum ProposalStatus\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"snapshotTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"startTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"minEndTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"maxEndTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"executionPayloadHash\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"addy\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"internalType\":\"struct Strategy\",\"name\":\"executionStrategy\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"enum FinalizationStatus\",\"name\":\"finalizationStatus\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"addy\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"internalType\":\"struct Strategy[]\",\"name\":\"votingStrategies\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Proposal\",\"name\":\"proposal\",\"type\":\"tuple\"}],\"name\":\"getQuorum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStrategyType\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"InvalidProposalStatus(uint8)\":[{\"params\":{\"status\":\"The current status of the proposal.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"errors\":{\"ExecutionFailed()\":[{\"notice\":\"Thrown when the execution of a proposal fails.\"}],\"InvalidPayload()\":[{\"notice\":\"Thrown when the execution payload supplied to the execution strategy is not equal to the payload supplied when the proposal was created.\"}],\"InvalidProposalStatus(uint8)\":[{\"notice\":\"Thrown when the current status of a proposal does not allow the desired action.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/execution-strategies/VanillaExecutionStrategy.sol\":\"VanillaExecutionStrategy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[\":@gnosis.pm/safe-contracts/=lib/safe-contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@prb/test/=lib/prb-test/src/\",\":@zodiac/=lib/zodiac/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":prb-test/=lib/prb-test/src/\",\":safe-contracts/=lib/safe-contracts/contracts/\",\":zodiac/=lib/zodiac/contracts/\"],\"viaIR\":true},\"sources\":{\"lib/safe-contracts/contracts/common/Enum.sol\":{\"keccak256\":\"0x473e45b1a5cc47be494b0e123c9127f0c11c1e0992a321ae5a644c0bfdb2c14f\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://948e6d5a8bd7377f7795b6e28584eab9be5c0a8db240bf5e606744a175238c3d\",\"dweb:/ipfs/QmQQaUmQfpuejV41jbxKSTgEBYYCcVTjCsDMgf2htgz6ej\"]},\"src/execution-strategies/SimpleQuorumExecutionStrategy.sol\":{\"keccak256\":\"0xeea7fe3373731c07893cb97e360c91e89a2f564479888927f746107574b4b8cb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a0d0d01d19b967e0027993ba9ed92ea52a14e2ef7ee4a85768802e7a513bbfd\",\"dweb:/ipfs/QmPfjpMH4VoR2VEwFRTzC4LmC6soaQ7GHjvoErMWN4JAyd\"]},\"src/execution-strategies/VanillaExecutionStrategy.sol\":{\"keccak256\":\"0x716cb73fe4e3268410a4de601c0399d74a0bc4789d33b0f136af47123686d06c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ae9c4959ae5b7b0ab924ada513923998aa33d08e2e6b2cf45512dad1e338103\",\"dweb:/ipfs/QmUzZGogN4esFqZjMwRy6mVgxcV86oNe2YT9QB3LZBVJnt\"]},\"src/interfaces/IExecutionStrategy.sol\":{\"keccak256\":\"0xd92eb63c242c1996d7c566d332cef3f9f708135d7e0ef4e67b46e1443eeea971\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a97572753821529b390adff41ccf33c8635b6ea2339b5b6f8f0867785f62b520\",\"dweb:/ipfs/QmStvwzAqcnhHTVfHq1CRGXsf8AxkLJAKW9WvRvH8Rtcfp\"]},\"src/interfaces/execution-strategies/IExecutionStrategyErrors.sol\":{\"keccak256\":\"0x2bbc78fc6012de21f1222e48abfa18bb5e2de221cccd12190fe6f355a236c226\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b483879705b2b1a0dd3c38de4f349656593ff9d268dd63e2f952012f0c932b15\",\"dweb:/ipfs/QmYEWLmqa6x9fMgcrPdyFWpEL4SfSfAaYdzfnb1ZdokV7A\"]},\"src/types.sol\":{\"keccak256\":\"0x5d104c56bf4e06ee32bfb49fbf94b5123b50904b050be2f1a660c13c4bed1ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://73cd8c4297cd9bc62e0c91b276493163e5e1cf0fea15d124a1d1c6b68f63710a\",\"dweb:/ipfs/QmeaxsSWyrWauUENnHEw6pAEyFR2y3CLqBm7XdH3ATjYuv\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.18+commit.87f61d96"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "ExecutionFailed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidPayload"
        },
        {
          "inputs": [
            {
              "internalType": "enum ProposalStatus",
              "name": "status",
              "type": "uint8"
            }
          ],
          "type": "error",
          "name": "InvalidProposalStatus"
        },
        {
          "inputs": [
            {
              "internalType": "struct Proposal",
              "name": "proposal",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "snapshotTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "startTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "minEndTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "maxEndTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "bytes32",
                  "name": "executionPayloadHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "struct Strategy",
                  "name": "executionStrategy",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "addy",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "params",
                      "type": "bytes"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "author",
                  "type": "address"
                },
                {
                  "internalType": "enum FinalizationStatus",
                  "name": "finalizationStatus",
                  "type": "uint8"
                },
                {
                  "internalType": "struct Strategy[]",
                  "name": "votingStrategies",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "addy",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "params",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "votesFor",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "votesAgainst",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "votesAbstain",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "payload",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "execute"
        },
        {
          "inputs": [
            {
              "internalType": "struct Proposal",
              "name": "proposal",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "snapshotTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "startTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "minEndTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "maxEndTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "bytes32",
                  "name": "executionPayloadHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "struct Strategy",
                  "name": "executionStrategy",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "addy",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "params",
                      "type": "bytes"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "author",
                  "type": "address"
                },
                {
                  "internalType": "enum FinalizationStatus",
                  "name": "finalizationStatus",
                  "type": "uint8"
                },
                {
                  "internalType": "struct Strategy[]",
                  "name": "votingStrategies",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "addy",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "params",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "votesFor",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "votesAgainst",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "votesAbstain",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getProposalStatus",
          "outputs": [
            {
              "internalType": "enum ProposalStatus",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Proposal",
              "name": "proposal",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "snapshotTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "startTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "minEndTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "maxEndTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "bytes32",
                  "name": "executionPayloadHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "struct Strategy",
                  "name": "executionStrategy",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "addy",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "params",
                      "type": "bytes"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "author",
                  "type": "address"
                },
                {
                  "internalType": "enum FinalizationStatus",
                  "name": "finalizationStatus",
                  "type": "uint8"
                },
                {
                  "internalType": "struct Strategy[]",
                  "name": "votingStrategies",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "addy",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "params",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "getQuorum",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "getStrategyType",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@gnosis.pm/safe-contracts/=lib/safe-contracts/",
        ":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        ":@prb/test/=lib/prb-test/src/",
        ":@zodiac/=lib/zodiac/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-gas-snapshot/=lib/forge-gas-snapshot/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":prb-test/=lib/prb-test/src/",
        ":safe-contracts/=lib/safe-contracts/contracts/",
        ":zodiac/=lib/zodiac/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 10000
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "src/execution-strategies/VanillaExecutionStrategy.sol": "VanillaExecutionStrategy"
      },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "lib/safe-contracts/contracts/common/Enum.sol": {
        "keccak256": "0x473e45b1a5cc47be494b0e123c9127f0c11c1e0992a321ae5a644c0bfdb2c14f",
        "urls": [
          "bzz-raw://948e6d5a8bd7377f7795b6e28584eab9be5c0a8db240bf5e606744a175238c3d",
          "dweb:/ipfs/QmQQaUmQfpuejV41jbxKSTgEBYYCcVTjCsDMgf2htgz6ej"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/execution-strategies/SimpleQuorumExecutionStrategy.sol": {
        "keccak256": "0xeea7fe3373731c07893cb97e360c91e89a2f564479888927f746107574b4b8cb",
        "urls": [
          "bzz-raw://5a0d0d01d19b967e0027993ba9ed92ea52a14e2ef7ee4a85768802e7a513bbfd",
          "dweb:/ipfs/QmPfjpMH4VoR2VEwFRTzC4LmC6soaQ7GHjvoErMWN4JAyd"
        ],
        "license": "MIT"
      },
      "src/execution-strategies/VanillaExecutionStrategy.sol": {
        "keccak256": "0x716cb73fe4e3268410a4de601c0399d74a0bc4789d33b0f136af47123686d06c",
        "urls": [
          "bzz-raw://7ae9c4959ae5b7b0ab924ada513923998aa33d08e2e6b2cf45512dad1e338103",
          "dweb:/ipfs/QmUzZGogN4esFqZjMwRy6mVgxcV86oNe2YT9QB3LZBVJnt"
        ],
        "license": "MIT"
      },
      "src/interfaces/IExecutionStrategy.sol": {
        "keccak256": "0xd92eb63c242c1996d7c566d332cef3f9f708135d7e0ef4e67b46e1443eeea971",
        "urls": [
          "bzz-raw://a97572753821529b390adff41ccf33c8635b6ea2339b5b6f8f0867785f62b520",
          "dweb:/ipfs/QmStvwzAqcnhHTVfHq1CRGXsf8AxkLJAKW9WvRvH8Rtcfp"
        ],
        "license": "MIT"
      },
      "src/interfaces/execution-strategies/IExecutionStrategyErrors.sol": {
        "keccak256": "0x2bbc78fc6012de21f1222e48abfa18bb5e2de221cccd12190fe6f355a236c226",
        "urls": [
          "bzz-raw://b483879705b2b1a0dd3c38de4f349656593ff9d268dd63e2f952012f0c932b15",
          "dweb:/ipfs/QmYEWLmqa6x9fMgcrPdyFWpEL4SfSfAaYdzfnb1ZdokV7A"
        ],
        "license": "MIT"
      },
      "src/types.sol": {
        "keccak256": "0x5d104c56bf4e06ee32bfb49fbf94b5123b50904b050be2f1a660c13c4bed1ed1",
        "urls": [
          "bzz-raw://73cd8c4297cd9bc62e0c91b276493163e5e1cf0fea15d124a1d1c6b68f63710a",
          "dweb:/ipfs/QmeaxsSWyrWauUENnHEw6pAEyFR2y3CLqBm7XdH3ATjYuv"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/execution-strategies/VanillaExecutionStrategy.sol",
    "id": 33959,
    "exportedSymbols": {
      "Choice": [34567],
      "Enum": [30820],
      "FinalizationStatus": [34555],
      "IExecutionStrategy": [34019],
      "IExecutionStrategyErrors": [34112],
      "IndexedStrategy": [34551],
      "MetaTransaction": [34583],
      "Proposal": [34541],
      "ProposalStatus": [34563],
      "SimpleQuorumExecutionStrategy": [33885],
      "Strategy": [34546],
      "VanillaExecutionStrategy": [33958],
      "Vote": [34573]
    },
    "nodeType": "SourceUnit",
    "src": "33:1007:51",
    "nodes": [
      {
        "id": 33887,
        "nodeType": "PragmaDirective",
        "src": "33:24:51",
        "nodes": [],
        "literals": ["solidity", "^", "0.8", ".18"]
      },
      {
        "id": 33888,
        "nodeType": "ImportDirective",
        "src": "59:45:51",
        "nodes": [],
        "absolutePath": "src/execution-strategies/SimpleQuorumExecutionStrategy.sol",
        "file": "./SimpleQuorumExecutionStrategy.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33959,
        "sourceUnit": 33886,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 33958,
        "nodeType": "ContractDefinition",
        "src": "106:933:51",
        "nodes": [
          {
            "id": 33892,
            "nodeType": "VariableDeclaration",
            "src": "179:19:51",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "numExecuted",
            "nameLocation": "187:11:51",
            "scope": 33958,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 33891,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "179:7:51",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 33948,
            "nodeType": "FunctionDefinition",
            "src": "205:707:51",
            "nodes": [],
            "body": {
              "id": 33947,
              "nodeType": "Block",
              "src": "396:516:51",
              "nodes": [],
              "statements": [
                {
                  "assignments": [33909],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33909,
                      "mutability": "mutable",
                      "name": "proposalStatus",
                      "nameLocation": "421:14:51",
                      "nodeType": "VariableDeclaration",
                      "scope": 33947,
                      "src": "406:29:51",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProposalStatus_$34563",
                        "typeString": "enum ProposalStatus"
                      },
                      "typeName": {
                        "id": 33908,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 33907,
                          "name": "ProposalStatus",
                          "nameLocations": ["406:14:51"],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 34563,
                          "src": "406:14:51"
                        },
                        "referencedDeclaration": 34563,
                        "src": "406:14:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ProposalStatus_$34563",
                          "typeString": "enum ProposalStatus"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33916,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 33911,
                        "name": "proposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33895,
                        "src": "456:8:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$34541_memory_ptr",
                          "typeString": "struct Proposal memory"
                        }
                      },
                      {
                        "id": 33912,
                        "name": "votesFor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33897,
                        "src": "466:8:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 33913,
                        "name": "votesAgainst",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33899,
                        "src": "476:12:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 33914,
                        "name": "votesAbstain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33901,
                        "src": "490:12:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Proposal_$34541_memory_ptr",
                          "typeString": "struct Proposal memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 33910,
                      "name": "getProposalStatus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33818,
                      "src": "438:17:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Proposal_$34541_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_enum$_ProposalStatus_$34563_$",
                        "typeString": "function (struct Proposal memory,uint256,uint256,uint256) view returns (enum ProposalStatus)"
                      }
                    },
                    "id": 33915,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "438:65:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProposalStatus_$34563",
                      "typeString": "enum ProposalStatus"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "406:97:51"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 33927,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_enum$_ProposalStatus_$34563",
                            "typeString": "enum ProposalStatus"
                          },
                          "id": 33920,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 33917,
                            "name": "proposalStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33909,
                            "src": "518:14:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ProposalStatus_$34563",
                              "typeString": "enum ProposalStatus"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "expression": {
                              "id": 33918,
                              "name": "ProposalStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34563,
                              "src": "536:14:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_ProposalStatus_$34563_$",
                                "typeString": "type(enum ProposalStatus)"
                              }
                            },
                            "id": 33919,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "551:8:51",
                            "memberName": "Accepted",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 34559,
                            "src": "536:23:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ProposalStatus_$34563",
                              "typeString": "enum ProposalStatus"
                            }
                          },
                          "src": "518:41:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 33921,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "517:43:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_enum$_ProposalStatus_$34563",
                            "typeString": "enum ProposalStatus"
                          },
                          "id": 33925,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 33922,
                            "name": "proposalStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33909,
                            "src": "565:14:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ProposalStatus_$34563",
                              "typeString": "enum ProposalStatus"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "expression": {
                              "id": 33923,
                              "name": "ProposalStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34563,
                              "src": "583:14:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_ProposalStatus_$34563_$",
                                "typeString": "type(enum ProposalStatus)"
                              }
                            },
                            "id": 33924,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "598:20:51",
                            "memberName": "VotingPeriodAccepted",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 34558,
                            "src": "583:35:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ProposalStatus_$34563",
                              "typeString": "enum ProposalStatus"
                            }
                          },
                          "src": "565:53:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 33926,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "564:55:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "517:102:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 33933,
                  "nodeType": "IfStatement",
                  "src": "513:177:51",
                  "trueBody": {
                    "id": 33932,
                    "nodeType": "Block",
                    "src": "621:69:51",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 33929,
                              "name": "proposalStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33909,
                              "src": "664:14:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ProposalStatus_$34563",
                                "typeString": "enum ProposalStatus"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_ProposalStatus_$34563",
                                "typeString": "enum ProposalStatus"
                              }
                            ],
                            "id": 33928,
                            "name": "InvalidProposalStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34105,
                            "src": "642:21:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_enum$_ProposalStatus_$34563_$returns$__$",
                              "typeString": "function (enum ProposalStatus) pure"
                            }
                          },
                          "id": 33930,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "642:37:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33931,
                        "nodeType": "RevertStatement",
                        "src": "635:44:51"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 33939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 33934,
                        "name": "proposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33895,
                        "src": "806:8:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$34541_memory_ptr",
                          "typeString": "struct Proposal memory"
                        }
                      },
                      "id": 33935,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "815:20:51",
                      "memberName": "executionPayloadHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 34528,
                      "src": "806:29:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 33937,
                          "name": "payload",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33903,
                          "src": "849:7:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 33936,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "839:9:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 33938,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "839:18:51",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "806:51:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 33943,
                  "nodeType": "IfStatement",
                  "src": "802:80:51",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 33940,
                        "name": "InvalidPayload",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34111,
                        "src": "866:14:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 33941,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "866:16:51",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 33942,
                    "nodeType": "RevertStatement",
                    "src": "859:23:51"
                  }
                },
                {
                  "expression": {
                    "id": 33945,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "892:13:51",
                    "subExpression": {
                      "id": 33944,
                      "name": "numExecuted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33892,
                      "src": "892:11:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 33946,
                  "nodeType": "ExpressionStatement",
                  "src": "892:13:51"
                }
              ]
            },
            "baseFunctions": [33708],
            "functionSelector": "8601320b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "execute",
            "nameLocation": "214:7:51",
            "overrides": {
              "id": 33905,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "387:8:51"
            },
            "parameters": {
              "id": 33904,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33895,
                  "mutability": "mutable",
                  "name": "proposal",
                  "nameLocation": "247:8:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 33948,
                  "src": "231:24:51",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Proposal_$34541_memory_ptr",
                    "typeString": "struct Proposal"
                  },
                  "typeName": {
                    "id": 33894,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 33893,
                      "name": "Proposal",
                      "nameLocations": ["231:8:51"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 34541,
                      "src": "231:8:51"
                    },
                    "referencedDeclaration": 34541,
                    "src": "231:8:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proposal_$34541_storage_ptr",
                      "typeString": "struct Proposal"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33897,
                  "mutability": "mutable",
                  "name": "votesFor",
                  "nameLocation": "273:8:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 33948,
                  "src": "265:16:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33896,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "265:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33899,
                  "mutability": "mutable",
                  "name": "votesAgainst",
                  "nameLocation": "299:12:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 33948,
                  "src": "291:20:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33898,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "291:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33901,
                  "mutability": "mutable",
                  "name": "votesAbstain",
                  "nameLocation": "329:12:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 33948,
                  "src": "321:20:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33900,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "321:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33903,
                  "mutability": "mutable",
                  "name": "payload",
                  "nameLocation": "364:7:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 33948,
                  "src": "351:20:51",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 33902,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "351:5:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "221:156:51"
            },
            "returnParameters": {
              "id": 33906,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "396:0:51"
            },
            "scope": 33958,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 33957,
            "nodeType": "FunctionDefinition",
            "src": "918:119:51",
            "nodes": [],
            "body": {
              "id": 33956,
              "nodeType": "Block",
              "src": "992:45:51",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "hexValue": "53696d706c6551756f72756d56616e696c6c61",
                    "id": 33954,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1009:21:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_9285ab5787abb09a519b6daf114f8552dfd21196bf817acc82bb5b376cc48115",
                      "typeString": "literal_string \"SimpleQuorumVanilla\""
                    },
                    "value": "SimpleQuorumVanilla"
                  },
                  "functionReturnParameters": 33953,
                  "id": 33955,
                  "nodeType": "Return",
                  "src": "1002:28:51"
                }
              ]
            },
            "baseFunctions": [33884],
            "functionSelector": "0eb9b15a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStrategyType",
            "nameLocation": "927:15:51",
            "overrides": {
              "id": 33950,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "959:8:51"
            },
            "parameters": {
              "id": 33949,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "942:2:51"
            },
            "returnParameters": {
              "id": 33953,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33952,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 33957,
                  "src": "977:13:51",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 33951,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "977:6:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "976:15:51"
            },
            "scope": 33958,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 33889,
              "name": "SimpleQuorumExecutionStrategy",
              "nameLocations": ["143:29:51"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 33885,
              "src": "143:29:51"
            },
            "id": 33890,
            "nodeType": "InheritanceSpecifier",
            "src": "143:29:51"
          }
        ],
        "canonicalName": "VanillaExecutionStrategy",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [33958, 33885, 34019, 34112],
        "name": "VanillaExecutionStrategy",
        "nameLocation": "115:24:51",
        "scope": 33959,
        "usedErrors": [34105, 34108, 34111]
      }
    ],
    "license": "MIT"
  },
  "id": 51
}
