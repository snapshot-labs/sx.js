{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_quorum",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "ExecutionFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidPayload",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "enum ProposalStatus",
          "name": "status",
          "type": "uint8"
        }
      ],
      "name": "InvalidProposalStatus",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidSpace",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "space",
          "type": "address"
        }
      ],
      "name": "SpaceDisabled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "space",
          "type": "address"
        }
      ],
      "name": "SpaceEnabled",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "space",
          "type": "address"
        }
      ],
      "name": "disableSpace",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "space",
          "type": "address"
        }
      ],
      "name": "enableSpace",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "snapshotTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "startTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "minEndTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "maxEndTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "bytes32",
              "name": "executionPayloadHash",
              "type": "bytes32"
            },
            {
              "internalType": "contract IExecutionStrategy",
              "name": "executionStrategy",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "author",
              "type": "address"
            },
            {
              "internalType": "enum FinalizationStatus",
              "name": "finalizationStatus",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "activeVotingStrategies",
              "type": "uint256"
            }
          ],
          "internalType": "struct Proposal",
          "name": "proposal",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "votesFor",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "votesAgainst",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "votesAbstain",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "payload",
          "type": "bytes"
        }
      ],
      "name": "execute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "snapshotTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "startTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "minEndTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "maxEndTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "bytes32",
              "name": "executionPayloadHash",
              "type": "bytes32"
            },
            {
              "internalType": "contract IExecutionStrategy",
              "name": "executionStrategy",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "author",
              "type": "address"
            },
            {
              "internalType": "enum FinalizationStatus",
              "name": "finalizationStatus",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "activeVotingStrategies",
              "type": "uint256"
            }
          ],
          "internalType": "struct Proposal",
          "name": "proposal",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "votesFor",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "votesAgainst",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "votesAbstain",
          "type": "uint256"
        }
      ],
      "name": "getProposalStatus",
      "outputs": [
        {
          "internalType": "enum ProposalStatus",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getStrategyType",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "space",
          "type": "address"
        }
      ],
      "name": "isSpaceEnabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "quorum",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60803461005157601f610b2a38819003918201601f19168301916001600160401b03831184841017610056578084926020946040528339810103126100515751606655604051610abd908161006d8239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe6040608081526004908136101561001557600080fd5b600091823560e01c806301fe2212146105915780630eb9b15a146104a75780631703a018146104885780636efd971c1461043f578063715018a6146103bc5780638da5cb5b146103875780639e33d811146102db578063b3d8ecdf14610290578063d92d4ea0146101ac5763f2fde38b1461008f57600080fd5b346101a85760206003193601126101a8576100a86107cc565b906100b1610933565b73ffffffffffffffffffffffffffffffffffffffff809216928315610125575050603354827fffffffffffffffffffffffff0000000000000000000000000000000000000000821617603355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b90602060849251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b8280fd5b5090346101a85760206003193601126101a85773ffffffffffffffffffffffffffffffffffffffff6101dc6107cc565b6101e4610933565b16918215801561027b575b6102545750816020917fc3dc08a46232e8d0a95510120799f1e68e0aa28c88730b8b0127d5ff4565b4b09385526065835280852060017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0082541617905551908152a180f35b90517fc3b48cf1000000000000000000000000000000000000000000000000000000008152fd5b50828452606560205260ff82852054166101ef565b5050346102d7576101806003193601126102d7576102d3906102c86102b4366107f4565b6101643590610144359061012435906109b2565b9051918291826108f1565b0390f35b5080fd5b5090346101a85760206003193601126101a85773ffffffffffffffffffffffffffffffffffffffff61030b6107cc565b610313610933565b1691828452606560205260ff8285205416156102545750816020917f665604bfe8ee87044ba1f1fd2fb47fe92983c9e187acbb442debf97d3e581921938552606583528085207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00815416905551908152a180f35b5050346102d757816003193601126102d75760209073ffffffffffffffffffffffffffffffffffffffff603354169051908152f35b833461043c578060031936011261043c576103d5610933565b8073ffffffffffffffffffffffffffffffffffffffff6033547fffffffffffffffffffffffff00000000000000000000000000000000000000008116603355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b5050346102d75760206003193601126102d75760ff8160209373ffffffffffffffffffffffffffffffffffffffff6104756107cc565b1681526065855220541690519015158152f35b5050346102d757816003193601126102d7576020906066549051908152f35b50346101a857826003193601126101a8578151908282019082821067ffffffffffffffff83111761056557508252601381526020907f53696d706c6551756f72756d56616e696c6c61000000000000000000000000008282015282519382859384528251928382860152825b84811061054f57505050828201840152601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168101030190f35b8181018301518882018801528795508201610513565b8460416024927f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b509190346102d7576101a06003193601126102d7576105af366107f4565b6101843567ffffffffffffffff918282116107c857366023830112156107c8578186013583811161079c578451937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f81601f8501160116850190858210908211176107705785528084526020840192366024838301011161076c57818792602460209301863785010152610650610164356101443561012435846109b2565b600781101561074057600381141580610735575b6106fe57506080015191519020036106d657506067547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146106aa5760010160675580f35b5060116024927f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b9050517f7c6953f9000000000000000000000000000000000000000000000000000000008152fd5b8661073186519283927fe6ace38e00000000000000000000000000000000000000000000000000000000845283016108f1565b0390fd5b506002811415610664565b6024866021897f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b8680fd5b60248760418a7f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b6024866041897f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b8480fd5b6004359073ffffffffffffffffffffffffffffffffffffffff821682036107ef57565b600080fd5b61012091906003190182136107ef5760405191820182811067ffffffffffffffff8211176108c2576040528163ffffffff60043581811681036107ef57825260243581811681036107ef57602083015260443581811681036107ef57604083015260643590811681036107ef576060820152608435608082015273ffffffffffffffffffffffffffffffffffffffff60a43581811681036107ef5760a083015260c43590811681036107ef5760c082015260e43560038110156107ef5760e082015261010061010435910152565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b9190602083019260078210156109045752565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff60335416330361095457565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b9190926109cb606654916109c68487610a74565b610a74565b10159283610a6a575b505060e0810180516003811015610904576002036109f457505050600690565b51600381101561090457600103610a0c575050600490565b63ffffffff90816020820151164210600014610a2a57505050600090565b60408101518216421015610a4057505050600190565b6060015116421015610a5b5715610a5657600290565b600190565b15610a6557600390565b600590565b11915038806109d4565b91908201809211610a8157565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea164736f6c6343000812000a",
    "sourceMap": "240:1010:78:-:0;;;;;;;;;;;;;-1:-1:-1;;240:1010:78;;;;-1:-1:-1;;;;;240:1010:78;;;;;;;;;;;;;;;;;;;;;;;;387:16;240:1010;;;;;;;;;;;-1:-1:-1;240:1010:78;;;;;;-1:-1:-1;240:1010:78;;;;;-1:-1:-1;240:1010:78",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6040608081526004908136101561001557600080fd5b600091823560e01c806301fe2212146105915780630eb9b15a146104a75780631703a018146104885780636efd971c1461043f578063715018a6146103bc5780638da5cb5b146103875780639e33d811146102db578063b3d8ecdf14610290578063d92d4ea0146101ac5763f2fde38b1461008f57600080fd5b346101a85760206003193601126101a8576100a86107cc565b906100b1610933565b73ffffffffffffffffffffffffffffffffffffffff809216928315610125575050603354827fffffffffffffffffffffffff0000000000000000000000000000000000000000821617603355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b90602060849251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b8280fd5b5090346101a85760206003193601126101a85773ffffffffffffffffffffffffffffffffffffffff6101dc6107cc565b6101e4610933565b16918215801561027b575b6102545750816020917fc3dc08a46232e8d0a95510120799f1e68e0aa28c88730b8b0127d5ff4565b4b09385526065835280852060017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0082541617905551908152a180f35b90517fc3b48cf1000000000000000000000000000000000000000000000000000000008152fd5b50828452606560205260ff82852054166101ef565b5050346102d7576101806003193601126102d7576102d3906102c86102b4366107f4565b6101643590610144359061012435906109b2565b9051918291826108f1565b0390f35b5080fd5b5090346101a85760206003193601126101a85773ffffffffffffffffffffffffffffffffffffffff61030b6107cc565b610313610933565b1691828452606560205260ff8285205416156102545750816020917f665604bfe8ee87044ba1f1fd2fb47fe92983c9e187acbb442debf97d3e581921938552606583528085207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00815416905551908152a180f35b5050346102d757816003193601126102d75760209073ffffffffffffffffffffffffffffffffffffffff603354169051908152f35b833461043c578060031936011261043c576103d5610933565b8073ffffffffffffffffffffffffffffffffffffffff6033547fffffffffffffffffffffffff00000000000000000000000000000000000000008116603355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b5050346102d75760206003193601126102d75760ff8160209373ffffffffffffffffffffffffffffffffffffffff6104756107cc565b1681526065855220541690519015158152f35b5050346102d757816003193601126102d7576020906066549051908152f35b50346101a857826003193601126101a8578151908282019082821067ffffffffffffffff83111761056557508252601381526020907f53696d706c6551756f72756d56616e696c6c61000000000000000000000000008282015282519382859384528251928382860152825b84811061054f57505050828201840152601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168101030190f35b8181018301518882018801528795508201610513565b8460416024927f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b509190346102d7576101a06003193601126102d7576105af366107f4565b6101843567ffffffffffffffff918282116107c857366023830112156107c8578186013583811161079c578451937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f81601f8501160116850190858210908211176107705785528084526020840192366024838301011161076c57818792602460209301863785010152610650610164356101443561012435846109b2565b600781101561074057600381141580610735575b6106fe57506080015191519020036106d657506067547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146106aa5760010160675580f35b5060116024927f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b9050517f7c6953f9000000000000000000000000000000000000000000000000000000008152fd5b8661073186519283927fe6ace38e00000000000000000000000000000000000000000000000000000000845283016108f1565b0390fd5b506002811415610664565b6024866021897f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b8680fd5b60248760418a7f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b6024866041897f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b8480fd5b6004359073ffffffffffffffffffffffffffffffffffffffff821682036107ef57565b600080fd5b61012091906003190182136107ef5760405191820182811067ffffffffffffffff8211176108c2576040528163ffffffff60043581811681036107ef57825260243581811681036107ef57602083015260443581811681036107ef57604083015260643590811681036107ef576060820152608435608082015273ffffffffffffffffffffffffffffffffffffffff60a43581811681036107ef5760a083015260c43590811681036107ef5760c082015260e43560038110156107ef5760e082015261010061010435910152565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b9190602083019260078210156109045752565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff60335416330361095457565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b9190926109cb606654916109c68487610a74565b610a74565b10159283610a6a575b505060e0810180516003811015610904576002036109f457505050600690565b51600381101561090457600103610a0c575050600490565b63ffffffff90816020820151164210600014610a2a57505050600090565b60408101518216421015610a4057505050600190565b6060015116421015610a5b5715610a5657600290565b600190565b15610a6557600390565b600590565b11915038806109d4565b91908201809211610a8157565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea164736f6c6343000812000a",
    "sourceMap": "240:1010:78:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;240:1010:78;;;;;;;:::i;:::-;1303:62:17;;;:::i;:::-;240:1010:78;;;;2409:22:17;;;240:1010:78;;;;2765:6:17;240:1010:78;;;;;;2765:6:17;240:1010:78;;2813:40:17;;;;240:1010:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;240:1010:78;;;;;;;;:::i;:::-;1303:62:17;;:::i;:::-;240:1010:78;1186:19:106;;;:44;;;;240:1010:78;1182:71:106;;240:1010:78;;;;1298:19:106;240:1010:78;;;1263:6:106;240:1010:78;;;;;1279:4:106;240:1010:78;;;;;;;;;;;1298:19:106;240:1010:78;;1182:71:106;240:1010:78;;1239:14:106;;;;1186:44;240:1010:78;;;;1812:6:106;240:1010:78;;;;;;;;1186:44:106;;240:1010:78;;;;;;;-1:-1:-1;;240:1010:78;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;240:1010:78;;;;;;;;:::i;:::-;1303:62:17;;:::i;:::-;240:1010:78;;;;;1475:6:106;240:1010:78;;;;;;;;1474:14:106;1470:41;;240:1010:78;;;;1557:20:106;240:1010:78;;;1475:6:106;240:1010:78;;;;;;;;;;;;;;;1557:20:106;240:1010:78;;;;;;;;;-1:-1:-1;;240:1010:78;;;;;;;;1513:6:17;240:1010:78;;;;;;;;;;;;;;-1:-1:-1;;240:1010:78;;;;;1303:62:17;;:::i;:::-;240:1010:78;;2765:6:17;240:1010:78;;;;2765:6:17;240:1010:78;;2813:40:17;;;;240:1010:78;;;;;;;;;;;;-1:-1:-1;;240:1010:78;;;;;;;;;;;;:::i;:::-;;;;1812:6:106;240:1010:78;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;240:1010:78;;;;;;;488:21:76;240:1010:78;;;;;;;;;;;;;-1:-1:-1;;240:1010:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;240:1010:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;240:1010:78;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;240:1010:78;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;649:65;240:1010;;;;;;649:65;;:::i;:::-;240:1010;;;;;;747:23;729:41;;;728:102;;;240:1010;724:177;;1017:29;;;240:1010;;;1050:18;;1017:51;1013:80;;240:1010;1103:13;240:1010;;;;;;;;1103:13;240:1010;;;;;;;;;;;;;1013:80;240:1010;;;1077:16;;;;724:177;240:1010;853:37;240:1010;;853:37;;;;;;;;;:::i;:::-;;;;728:102;776:53;794:35;776:53;;;728:102;;240:1010;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;240:1010:78;;-1:-1:-1;240:1010:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;240:1010:78;;;;;-1:-1:-1;240:1010:78;;;;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;240:1010:78;;;;;-1:-1:-1;240:1010:78;1599:130:17;240:1010:78;1513:6:17;240:1010:78;;929:10:24;1662:23:17;240:1010:78;;1599:130:17:o;240:1010:78:-;;;;;;;;;;;;;;;;;;;;;;;1420:1197:76;;;;2827:41;1660:6;240:1010:78;2827:25:76;;;;;:::i;:::-;:41;:::i;:::-;2885:21;;1645:110;;;;1420:1197;1769:27;;;;;240:1010:78;;;;;;;;1800:28:76;1769:59;1800:28;;1844:31;;;1851:24;1844:31;:::o;1765:846::-;240:1010:78;;;;;;;;1896:58:76;240:1010:78;;1970:30:76;;1977:23;1970:30;:::o;1892:719::-;240:1010:78;2039:23:76;;;;;240:1010:78;;2021:15:76;:41;2017:594;240:1010:78;;;2078:33:76;;;-1:-1:-1;2078:33:76;:::o;2017:594::-;2150:24;;;240:1010:78;;;2021:15:76;2132:42;240:1010:78;;;2190:34:76;;;240:1010:78;2190:34:76;:::o;2128:483::-;2263:24;;240:1010:78;;2021:15:76;2245:42;240:1010:78;;;2303:162:76;;;1800:28;2335:42;:::o;2303:162::-;240:1010:78;2416:34:76;:::o;2241:370::-;2481:130;;;240:1010:78;2509:30:76;:::o;2481:130::-;2577:23;2570:30;:::o;1645:110::-;3027:25;;-1:-1:-1;1645:110:76;;;;240:1010:78;;;;;;;;;;:::o;:::-;;;;;;;;;",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "disableSpace(address)": "9e33d811",
    "enableSpace(address)": "d92d4ea0",
    "execute((uint32,uint32,uint32,uint32,bytes32,address,address,uint8,uint256),uint256,uint256,uint256,bytes)": "01fe2212",
    "getProposalStatus((uint32,uint32,uint32,uint32,bytes32,address,address,uint8,uint256),uint256,uint256,uint256)": "b3d8ecdf",
    "getStrategyType()": "0eb9b15a",
    "isSpaceEnabled(address)": "6efd971c",
    "owner()": "8da5cb5b",
    "quorum()": "1703a018",
    "renounceOwnership()": "715018a6",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_quorum\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ExecutionFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPayload\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"enum ProposalStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"name\":\"InvalidProposalStatus\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSpace\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"space\",\"type\":\"address\"}],\"name\":\"SpaceDisabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"space\",\"type\":\"address\"}],\"name\":\"SpaceEnabled\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"space\",\"type\":\"address\"}],\"name\":\"disableSpace\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"space\",\"type\":\"address\"}],\"name\":\"enableSpace\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"snapshotTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"startTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"minEndTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"maxEndTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"executionPayloadHash\",\"type\":\"bytes32\"},{\"internalType\":\"contract IExecutionStrategy\",\"name\":\"executionStrategy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"enum FinalizationStatus\",\"name\":\"finalizationStatus\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"activeVotingStrategies\",\"type\":\"uint256\"}],\"internalType\":\"struct Proposal\",\"name\":\"proposal\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"votesFor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votesAgainst\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votesAbstain\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"snapshotTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"startTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"minEndTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"maxEndTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"executionPayloadHash\",\"type\":\"bytes32\"},{\"internalType\":\"contract IExecutionStrategy\",\"name\":\"executionStrategy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"enum FinalizationStatus\",\"name\":\"finalizationStatus\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"activeVotingStrategies\",\"type\":\"uint256\"}],\"internalType\":\"struct Proposal\",\"name\":\"proposal\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"votesFor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votesAgainst\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votesAbstain\",\"type\":\"uint256\"}],\"name\":\"getProposalStatus\",\"outputs\":[{\"internalType\":\"enum ProposalStatus\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStrategyType\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"space\",\"type\":\"address\"}],\"name\":\"isSpaceEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quorum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"InvalidProposalStatus(uint8)\":[{\"params\":{\"status\":\"The current status of the proposal.\"}}]},\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"disableSpace(address)\":{\"params\":{\"space\":\"Address of the space.\"}},\"enableSpace(address)\":{\"params\":{\"space\":\"Address of the space.\"}},\"getProposalStatus((uint32,uint32,uint32,uint32,bytes32,address,address,uint8,uint256),uint256,uint256,uint256)\":{\"params\":{\"proposal\":\"The proposal struct.\",\"votesAbstain\":\"The number of votes abstaining from the proposal.\",\"votesAgainst\":\"The number of votes against the proposal.\",\"votesFor\":\"The number of votes for the proposal.\"}},\"isSpaceEnabled(address)\":{\"params\":{\"space\":\"Address of the space.\"},\"returns\":{\"_0\":\"bool whether the space is enabled.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Vanilla Execution Strategy\",\"version\":1},\"userdoc\":{\"errors\":{\"ExecutionFailed()\":[{\"notice\":\"Thrown when the execution of a proposal fails.\"}],\"InvalidPayload()\":[{\"notice\":\"Thrown when the execution payload supplied to the execution strategy is not equal to the payload supplied when the proposal was created.\"}],\"InvalidProposalStatus(uint8)\":[{\"notice\":\"Thrown when the current status of a proposal does not allow the desired action.\"}],\"InvalidSpace()\":[{\"notice\":\"Thrown if a space is not in the whitelist.\"}]},\"events\":{\"SpaceDisabled(address)\":{\"notice\":\"Emitted when a space is disabled.\"},\"SpaceEnabled(address)\":{\"notice\":\"Emitted when a space is enabled.\"}},\"kind\":\"user\",\"methods\":{\"disableSpace(address)\":{\"notice\":\"Disable a space.\"},\"enableSpace(address)\":{\"notice\":\"Enable a space.\"},\"getProposalStatus((uint32,uint32,uint32,uint32,bytes32,address,address,uint8,uint256),uint256,uint256,uint256)\":{\"notice\":\"Returns the status of a proposal that uses a simple quorum.        A proposal is accepted if the for votes exceeds the against votes        and a quorum of total votes (for + against + abstain) is reached.\"},\"isSpaceEnabled(address)\":{\"notice\":\"Check if a space is enabled.\"},\"quorum()\":{\"notice\":\"The quorum required to execute a proposal using this strategy.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/execution-strategies/VanillaExecutionStrategy.sol\":\"VanillaExecutionStrategy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[\":@gnosis.pm/safe-contracts/=lib/safe-contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@prb/test/=lib/prb-test/src/\",\":@zodiac/=lib/zodiac/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":prb-test/=lib/prb-test/src/\",\":safe-contracts/=lib/safe-contracts/contracts/\",\":zodiac/=lib/zodiac/contracts/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xe798cadb41e2da274913e4b3183a80f50fb057a42238fe8467e077268100ec27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://899f850f7df5a270bccfb765d70069959ca1c20d3a7381c1c3bda8a3ffee1935\",\"dweb:/ipfs/QmVdnAqwyX2L3nX2HDA5WKGtVBFyH1nKE9A1k7fZnPBkhP\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/safe-contracts/contracts/common/Enum.sol\":{\"keccak256\":\"0x473e45b1a5cc47be494b0e123c9127f0c11c1e0992a321ae5a644c0bfdb2c14f\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://948e6d5a8bd7377f7795b6e28584eab9be5c0a8db240bf5e606744a175238c3d\",\"dweb:/ipfs/QmQQaUmQfpuejV41jbxKSTgEBYYCcVTjCsDMgf2htgz6ej\"]},\"src/execution-strategies/SimpleQuorumExecutionStrategy.sol\":{\"keccak256\":\"0x6b2b1c5b08bea40355137bcd93872a96f0a3511a3f53a48ea851c2cee51a2f73\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://128effd2ec54a7e196b1565db961799018e259849edc4a7c5b0dc715d313adc7\",\"dweb:/ipfs/QmQhAzrmxSMpRow5VBXAgtLjHBhXdcXZoDnftZHFjzqgcM\"]},\"src/execution-strategies/VanillaExecutionStrategy.sol\":{\"keccak256\":\"0x1478d6fe823ad4f52019464f7bd7731bc1e88e9fde9b93d57943f663ac336d54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b20ca7cbd39fa54d1b2497b0bb8ceb672dbca7ef3abbbe3ce9c0ffbf08812ca2\",\"dweb:/ipfs/QmZxcFMXaWMfqWS3x87MF38jkfLd73VxCJK2p4Q1CNJf9D\"]},\"src/interfaces/IExecutionStrategy.sol\":{\"keccak256\":\"0x8caef430ce09dd42c4b90ff62b18090c12bcb2dcf19294e4316bd2cc2bfffef9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d20584f72310a2607990eb5c6f307e81c606d38b4a95b91d2f9427b068e51050\",\"dweb:/ipfs/QmZaDzFnBq7qXy45YmBbqcay7DQZo8xfvTLriMEKocesK8\"]},\"src/interfaces/execution-strategies/IExecutionStrategyErrors.sol\":{\"keccak256\":\"0x2250c64aab6438d7ab96f46536324753acd4259b4603a93487cf45c668653136\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://27889cd728427bfcd7ddca916ac99a8e03dec3a643dd964f4f2c6ebb3020daa6\",\"dweb:/ipfs/QmXPKHv7PaCwr8nVuCmSdWSVjCXciNURB5Ev6AXR7C957R\"]},\"src/types.sol\":{\"keccak256\":\"0xf72554d9fd3670d3d89308f0076df1e4189a580c09f073ffc781c359590c3ba5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8085b0c07e7e9e039d90de08a05394368cc7ed512c25ea58b265bd46d4eb4d48\",\"dweb:/ipfs/QmXwFUsZ199WYKKDMo8RbX4JBvttTw9iqyCtYj2XB3G54R\"]},\"src/utils/SpaceManager.sol\":{\"keccak256\":\"0xb2bf9466fa00b760a21313843fa692456fed7bd2e18691e603273f3ea787cf6e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b6606d863630743ed2c56ce839bceff544b3a68e9ffd27fdc1dd7e9521f7a57\",\"dweb:/ipfs/QmbayMG9dZSRJMryX5bNr435H2JHvVMAGFnqyDZjB7RnjP\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.18+commit.87f61d96"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_quorum",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ExecutionFailed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidPayload"
        },
        {
          "inputs": [
            {
              "internalType": "enum ProposalStatus",
              "name": "status",
              "type": "uint8"
            }
          ],
          "type": "error",
          "name": "InvalidProposalStatus"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidSpace"
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "space",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SpaceDisabled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "space",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SpaceEnabled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "space",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "disableSpace"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "space",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "enableSpace"
        },
        {
          "inputs": [
            {
              "internalType": "struct Proposal",
              "name": "proposal",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "snapshotTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "startTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "minEndTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "maxEndTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "bytes32",
                  "name": "executionPayloadHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "contract IExecutionStrategy",
                  "name": "executionStrategy",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "author",
                  "type": "address"
                },
                {
                  "internalType": "enum FinalizationStatus",
                  "name": "finalizationStatus",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "activeVotingStrategies",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "votesFor",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "votesAgainst",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "votesAbstain",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "payload",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "execute"
        },
        {
          "inputs": [
            {
              "internalType": "struct Proposal",
              "name": "proposal",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "snapshotTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "startTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "minEndTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "maxEndTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "bytes32",
                  "name": "executionPayloadHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "contract IExecutionStrategy",
                  "name": "executionStrategy",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "author",
                  "type": "address"
                },
                {
                  "internalType": "enum FinalizationStatus",
                  "name": "finalizationStatus",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "activeVotingStrategies",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "votesFor",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "votesAgainst",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "votesAbstain",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getProposalStatus",
          "outputs": [
            {
              "internalType": "enum ProposalStatus",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "getStrategyType",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "space",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isSpaceEnabled",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "quorum",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "disableSpace(address)": {
            "params": {
              "space": "Address of the space."
            }
          },
          "enableSpace(address)": {
            "params": {
              "space": "Address of the space."
            }
          },
          "getProposalStatus((uint32,uint32,uint32,uint32,bytes32,address,address,uint8,uint256),uint256,uint256,uint256)": {
            "params": {
              "proposal": "The proposal struct.",
              "votesAbstain": "The number of votes abstaining from the proposal.",
              "votesAgainst": "The number of votes against the proposal.",
              "votesFor": "The number of votes for the proposal."
            }
          },
          "isSpaceEnabled(address)": {
            "params": {
              "space": "Address of the space."
            },
            "returns": {
              "_0": "bool whether the space is enabled."
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "disableSpace(address)": {
            "notice": "Disable a space."
          },
          "enableSpace(address)": {
            "notice": "Enable a space."
          },
          "getProposalStatus((uint32,uint32,uint32,uint32,bytes32,address,address,uint8,uint256),uint256,uint256,uint256)": {
            "notice": "Returns the status of a proposal that uses a simple quorum.        A proposal is accepted if the for votes exceeds the against votes        and a quorum of total votes (for + against + abstain) is reached."
          },
          "isSpaceEnabled(address)": {
            "notice": "Check if a space is enabled."
          },
          "quorum()": {
            "notice": "The quorum required to execute a proposal using this strategy."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@gnosis.pm/safe-contracts/=lib/safe-contracts/",
        ":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        ":@prb/test/=lib/prb-test/src/",
        ":@zodiac/=lib/zodiac/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-gas-snapshot/=lib/forge-gas-snapshot/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":prb-test/=lib/prb-test/src/",
        ":safe-contracts/=lib/safe-contracts/contracts/",
        ":zodiac/=lib/zodiac/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 10000
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "src/execution-strategies/VanillaExecutionStrategy.sol": "VanillaExecutionStrategy"
      },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888",
        "urls": [
          "bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a",
          "dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0xe798cadb41e2da274913e4b3183a80f50fb057a42238fe8467e077268100ec27",
        "urls": [
          "bzz-raw://899f850f7df5a270bccfb765d70069959ca1c20d3a7381c1c3bda8a3ffee1935",
          "dweb:/ipfs/QmVdnAqwyX2L3nX2HDA5WKGtVBFyH1nKE9A1k7fZnPBkhP"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183",
        "urls": [
          "bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06",
          "dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/safe-contracts/contracts/common/Enum.sol": {
        "keccak256": "0x473e45b1a5cc47be494b0e123c9127f0c11c1e0992a321ae5a644c0bfdb2c14f",
        "urls": [
          "bzz-raw://948e6d5a8bd7377f7795b6e28584eab9be5c0a8db240bf5e606744a175238c3d",
          "dweb:/ipfs/QmQQaUmQfpuejV41jbxKSTgEBYYCcVTjCsDMgf2htgz6ej"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/execution-strategies/SimpleQuorumExecutionStrategy.sol": {
        "keccak256": "0x6b2b1c5b08bea40355137bcd93872a96f0a3511a3f53a48ea851c2cee51a2f73",
        "urls": [
          "bzz-raw://128effd2ec54a7e196b1565db961799018e259849edc4a7c5b0dc715d313adc7",
          "dweb:/ipfs/QmQhAzrmxSMpRow5VBXAgtLjHBhXdcXZoDnftZHFjzqgcM"
        ],
        "license": "MIT"
      },
      "src/execution-strategies/VanillaExecutionStrategy.sol": {
        "keccak256": "0x1478d6fe823ad4f52019464f7bd7731bc1e88e9fde9b93d57943f663ac336d54",
        "urls": [
          "bzz-raw://b20ca7cbd39fa54d1b2497b0bb8ceb672dbca7ef3abbbe3ce9c0ffbf08812ca2",
          "dweb:/ipfs/QmZxcFMXaWMfqWS3x87MF38jkfLd73VxCJK2p4Q1CNJf9D"
        ],
        "license": "MIT"
      },
      "src/interfaces/IExecutionStrategy.sol": {
        "keccak256": "0x8caef430ce09dd42c4b90ff62b18090c12bcb2dcf19294e4316bd2cc2bfffef9",
        "urls": [
          "bzz-raw://d20584f72310a2607990eb5c6f307e81c606d38b4a95b91d2f9427b068e51050",
          "dweb:/ipfs/QmZaDzFnBq7qXy45YmBbqcay7DQZo8xfvTLriMEKocesK8"
        ],
        "license": "MIT"
      },
      "src/interfaces/execution-strategies/IExecutionStrategyErrors.sol": {
        "keccak256": "0x2250c64aab6438d7ab96f46536324753acd4259b4603a93487cf45c668653136",
        "urls": [
          "bzz-raw://27889cd728427bfcd7ddca916ac99a8e03dec3a643dd964f4f2c6ebb3020daa6",
          "dweb:/ipfs/QmXPKHv7PaCwr8nVuCmSdWSVjCXciNURB5Ev6AXR7C957R"
        ],
        "license": "MIT"
      },
      "src/types.sol": {
        "keccak256": "0xf72554d9fd3670d3d89308f0076df1e4189a580c09f073ffc781c359590c3ba5",
        "urls": [
          "bzz-raw://8085b0c07e7e9e039d90de08a05394368cc7ed512c25ea58b265bd46d4eb4d48",
          "dweb:/ipfs/QmXwFUsZ199WYKKDMo8RbX4JBvttTw9iqyCtYj2XB3G54R"
        ],
        "license": "MIT"
      },
      "src/utils/SpaceManager.sol": {
        "keccak256": "0xb2bf9466fa00b760a21313843fa692456fed7bd2e18691e603273f3ea787cf6e",
        "urls": [
          "bzz-raw://9b6606d863630743ed2c56ce839bceff544b3a68e9ffd27fdc1dd7e9521f7a57",
          "dweb:/ipfs/QmbayMG9dZSRJMryX5bNr435H2JHvVMAGFnqyDZjB7RnjP"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/execution-strategies/VanillaExecutionStrategy.sol",
    "id": 39312,
    "exportedSymbols": {
      "Proposal": [40295],
      "ProposalStatus": [40317],
      "SimpleQuorumExecutionStrategy": [38626],
      "VanillaExecutionStrategy": [39311]
    },
    "nodeType": "SourceUnit",
    "src": "33:1218:78",
    "nodes": [
      {
        "id": 39225,
        "nodeType": "PragmaDirective",
        "src": "33:24:78",
        "nodes": [],
        "literals": ["solidity", "^", "0.8", ".18"]
      },
      {
        "id": 39227,
        "nodeType": "ImportDirective",
        "src": "59:84:78",
        "nodes": [],
        "absolutePath": "src/execution-strategies/SimpleQuorumExecutionStrategy.sol",
        "file": "./SimpleQuorumExecutionStrategy.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 39312,
        "sourceUnit": 38627,
        "symbolAliases": [
          {
            "foreign": {
              "id": 39226,
              "name": "SimpleQuorumExecutionStrategy",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 38626,
              "src": "68:29:78",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 39230,
        "nodeType": "ImportDirective",
        "src": "144:56:78",
        "nodes": [],
        "absolutePath": "src/types.sol",
        "file": "../types.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 39312,
        "sourceUnit": 40366,
        "symbolAliases": [
          {
            "foreign": {
              "id": 39228,
              "name": "Proposal",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 40295,
              "src": "153:8:78",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 39229,
              "name": "ProposalStatus",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 40317,
              "src": "163:14:78",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 39311,
        "nodeType": "ContractDefinition",
        "src": "240:1010:78",
        "nodes": [
          {
            "id": 39235,
            "nodeType": "VariableDeclaration",
            "src": "313:28:78",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "numExecuted",
            "nameLocation": "330:11:78",
            "scope": 39311,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 39234,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "313:7:78",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 39245,
            "nodeType": "FunctionDefinition",
            "src": "348:62:78",
            "nodes": [],
            "body": {
              "id": 39244,
              "nodeType": "Block",
              "src": "377:33:78",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 39242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 39240,
                      "name": "quorum",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38452,
                      "src": "387:6:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 39241,
                      "name": "_quorum",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39237,
                      "src": "396:7:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "387:16:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 39243,
                  "nodeType": "ExpressionStatement",
                  "src": "387:16:78"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 39238,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39237,
                  "mutability": "mutable",
                  "name": "_quorum",
                  "nameLocation": "368:7:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 39245,
                  "src": "360:15:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39236,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "360:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "359:17:78"
            },
            "returnParameters": {
              "id": 39239,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "377:0:78"
            },
            "scope": 39311,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 39301,
            "nodeType": "FunctionDefinition",
            "src": "416:707:78",
            "nodes": [],
            "body": {
              "id": 39300,
              "nodeType": "Block",
              "src": "607:516:78",
              "nodes": [],
              "statements": [
                {
                  "assignments": [39262],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 39262,
                      "mutability": "mutable",
                      "name": "proposalStatus",
                      "nameLocation": "632:14:78",
                      "nodeType": "VariableDeclaration",
                      "scope": 39300,
                      "src": "617:29:78",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProposalStatus_$40317",
                        "typeString": "enum ProposalStatus"
                      },
                      "typeName": {
                        "id": 39261,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 39260,
                          "name": "ProposalStatus",
                          "nameLocations": ["617:14:78"],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 40317,
                          "src": "617:14:78"
                        },
                        "referencedDeclaration": 40317,
                        "src": "617:14:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ProposalStatus_$40317",
                          "typeString": "enum ProposalStatus"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 39269,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 39264,
                        "name": "proposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39248,
                        "src": "667:8:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$40295_memory_ptr",
                          "typeString": "struct Proposal memory"
                        }
                      },
                      {
                        "id": 39265,
                        "name": "votesFor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39250,
                        "src": "677:8:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 39266,
                        "name": "votesAgainst",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39252,
                        "src": "687:12:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 39267,
                        "name": "votesAbstain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39254,
                        "src": "701:12:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Proposal_$40295_memory_ptr",
                          "typeString": "struct Proposal memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 39263,
                      "name": "getProposalStatus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38579,
                      "src": "649:17:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Proposal_$40295_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_enum$_ProposalStatus_$40317_$",
                        "typeString": "function (struct Proposal memory,uint256,uint256,uint256) view returns (enum ProposalStatus)"
                      }
                    },
                    "id": 39268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "649:65:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProposalStatus_$40317",
                      "typeString": "enum ProposalStatus"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "617:97:78"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 39280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_enum$_ProposalStatus_$40317",
                            "typeString": "enum ProposalStatus"
                          },
                          "id": 39273,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 39270,
                            "name": "proposalStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39262,
                            "src": "729:14:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ProposalStatus_$40317",
                              "typeString": "enum ProposalStatus"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "expression": {
                              "id": 39271,
                              "name": "ProposalStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40317,
                              "src": "747:14:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_ProposalStatus_$40317_$",
                                "typeString": "type(enum ProposalStatus)"
                              }
                            },
                            "id": 39272,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "762:8:78",
                            "memberName": "Accepted",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 40313,
                            "src": "747:23:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ProposalStatus_$40317",
                              "typeString": "enum ProposalStatus"
                            }
                          },
                          "src": "729:41:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 39274,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "728:43:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_enum$_ProposalStatus_$40317",
                            "typeString": "enum ProposalStatus"
                          },
                          "id": 39278,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 39275,
                            "name": "proposalStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39262,
                            "src": "776:14:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ProposalStatus_$40317",
                              "typeString": "enum ProposalStatus"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "expression": {
                              "id": 39276,
                              "name": "ProposalStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40317,
                              "src": "794:14:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_ProposalStatus_$40317_$",
                                "typeString": "type(enum ProposalStatus)"
                              }
                            },
                            "id": 39277,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "809:20:78",
                            "memberName": "VotingPeriodAccepted",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 40312,
                            "src": "794:35:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ProposalStatus_$40317",
                              "typeString": "enum ProposalStatus"
                            }
                          },
                          "src": "776:53:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 39279,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "775:55:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "728:102:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 39286,
                  "nodeType": "IfStatement",
                  "src": "724:177:78",
                  "trueBody": {
                    "id": 39285,
                    "nodeType": "Block",
                    "src": "832:69:78",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 39282,
                              "name": "proposalStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39262,
                              "src": "875:14:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ProposalStatus_$40317",
                                "typeString": "enum ProposalStatus"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_ProposalStatus_$40317",
                                "typeString": "enum ProposalStatus"
                              }
                            ],
                            "id": 39281,
                            "name": "InvalidProposalStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39556,
                            "src": "853:21:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_enum$_ProposalStatus_$40317_$returns$__$",
                              "typeString": "function (enum ProposalStatus) pure"
                            }
                          },
                          "id": 39283,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "853:37:78",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 39284,
                        "nodeType": "RevertStatement",
                        "src": "846:44:78"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 39292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 39287,
                        "name": "proposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39248,
                        "src": "1017:8:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$40295_memory_ptr",
                          "typeString": "struct Proposal memory"
                        }
                      },
                      "id": 39288,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1026:20:78",
                      "memberName": "executionPayloadHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40284,
                      "src": "1017:29:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 39290,
                          "name": "payload",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39256,
                          "src": "1060:7:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 39289,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "1050:9:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 39291,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1050:18:78",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1017:51:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 39296,
                  "nodeType": "IfStatement",
                  "src": "1013:80:78",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 39293,
                        "name": "InvalidPayload",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39562,
                        "src": "1077:14:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 39294,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1077:16:78",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 39295,
                    "nodeType": "RevertStatement",
                    "src": "1070:23:78"
                  }
                },
                {
                  "expression": {
                    "id": 39298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1103:13:78",
                    "subExpression": {
                      "id": 39297,
                      "name": "numExecuted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39235,
                      "src": "1103:11:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 39299,
                  "nodeType": "ExpressionStatement",
                  "src": "1103:13:78"
                }
              ]
            },
            "baseFunctions": [38480],
            "functionSelector": "01fe2212",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "execute",
            "nameLocation": "425:7:78",
            "overrides": {
              "id": 39258,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "598:8:78"
            },
            "parameters": {
              "id": 39257,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39248,
                  "mutability": "mutable",
                  "name": "proposal",
                  "nameLocation": "458:8:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 39301,
                  "src": "442:24:78",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Proposal_$40295_memory_ptr",
                    "typeString": "struct Proposal"
                  },
                  "typeName": {
                    "id": 39247,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 39246,
                      "name": "Proposal",
                      "nameLocations": ["442:8:78"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 40295,
                      "src": "442:8:78"
                    },
                    "referencedDeclaration": 40295,
                    "src": "442:8:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proposal_$40295_storage_ptr",
                      "typeString": "struct Proposal"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39250,
                  "mutability": "mutable",
                  "name": "votesFor",
                  "nameLocation": "484:8:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 39301,
                  "src": "476:16:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39249,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "476:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39252,
                  "mutability": "mutable",
                  "name": "votesAgainst",
                  "nameLocation": "510:12:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 39301,
                  "src": "502:20:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39251,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "502:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39254,
                  "mutability": "mutable",
                  "name": "votesAbstain",
                  "nameLocation": "540:12:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 39301,
                  "src": "532:20:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39253,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "532:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39256,
                  "mutability": "mutable",
                  "name": "payload",
                  "nameLocation": "575:7:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 39301,
                  "src": "562:20:78",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 39255,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "562:5:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "432:156:78"
            },
            "returnParameters": {
              "id": 39259,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "607:0:78"
            },
            "scope": 39311,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 39310,
            "nodeType": "FunctionDefinition",
            "src": "1129:119:78",
            "nodes": [],
            "body": {
              "id": 39309,
              "nodeType": "Block",
              "src": "1203:45:78",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "hexValue": "53696d706c6551756f72756d56616e696c6c61",
                    "id": 39307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1220:21:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_9285ab5787abb09a519b6daf114f8552dfd21196bf817acc82bb5b376cc48115",
                      "typeString": "literal_string \"SimpleQuorumVanilla\""
                    },
                    "value": "SimpleQuorumVanilla"
                  },
                  "functionReturnParameters": 39306,
                  "id": 39308,
                  "nodeType": "Return",
                  "src": "1213:28:78"
                }
              ]
            },
            "baseFunctions": [38625],
            "functionSelector": "0eb9b15a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStrategyType",
            "nameLocation": "1138:15:78",
            "overrides": {
              "id": 39303,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1170:8:78"
            },
            "parameters": {
              "id": 39302,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1153:2:78"
            },
            "returnParameters": {
              "id": 39306,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39305,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 39310,
                  "src": "1188:13:78",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 39304,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1188:6:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1187:15:78"
            },
            "scope": 39311,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 39232,
              "name": "SimpleQuorumExecutionStrategy",
              "nameLocations": ["277:29:78"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 38626,
              "src": "277:29:78"
            },
            "id": 39233,
            "nodeType": "InheritanceSpecifier",
            "src": "277:29:78"
          }
        ],
        "canonicalName": "VanillaExecutionStrategy",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 39231,
          "nodeType": "StructuredDocumentation",
          "src": "202:38:78",
          "text": "@title Vanilla Execution Strategy"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [39311, 38626, 41350, 25214, 26234, 25772, 39457, 39563],
        "name": "VanillaExecutionStrategy",
        "nameLocation": "249:24:78",
        "scope": 39312,
        "usedErrors": [39556, 39559, 39562, 41218]
      }
    ],
    "license": "MIT"
  },
  "id": 78
}
