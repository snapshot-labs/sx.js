{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_quorum",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "ExecutionFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidPayload",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "enum ProposalStatus",
          "name": "status",
          "type": "uint8"
        }
      ],
      "name": "InvalidProposalStatus",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidSpace",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "space",
          "type": "address"
        }
      ],
      "name": "SpaceDisabled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "space",
          "type": "address"
        }
      ],
      "name": "SpaceEnabled",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "space",
          "type": "address"
        }
      ],
      "name": "disableSpace",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "space",
          "type": "address"
        }
      ],
      "name": "enableSpace",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "snapshotTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "startTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "minEndTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "maxEndTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "bytes32",
              "name": "executionPayloadHash",
              "type": "bytes32"
            },
            {
              "internalType": "contract IExecutionStrategy",
              "name": "executionStrategy",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "author",
              "type": "address"
            },
            {
              "internalType": "enum FinalizationStatus",
              "name": "finalizationStatus",
              "type": "uint8"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "addy",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "params",
                  "type": "bytes"
                }
              ],
              "internalType": "struct Strategy[]",
              "name": "votingStrategies",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct Proposal",
          "name": "proposal",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "votesFor",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "votesAgainst",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "votesAbstain",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "payload",
          "type": "bytes"
        }
      ],
      "name": "execute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "snapshotTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "startTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "minEndTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "maxEndTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "bytes32",
              "name": "executionPayloadHash",
              "type": "bytes32"
            },
            {
              "internalType": "contract IExecutionStrategy",
              "name": "executionStrategy",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "author",
              "type": "address"
            },
            {
              "internalType": "enum FinalizationStatus",
              "name": "finalizationStatus",
              "type": "uint8"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "addy",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "params",
                  "type": "bytes"
                }
              ],
              "internalType": "struct Strategy[]",
              "name": "votingStrategies",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct Proposal",
          "name": "proposal",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "votesFor",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "votesAgainst",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "votesAbstain",
          "type": "uint256"
        }
      ],
      "name": "getProposalStatus",
      "outputs": [
        {
          "internalType": "enum ProposalStatus",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getStrategyType",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "space",
          "type": "address"
        }
      ],
      "name": "isSpaceEnabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "quorum",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60803461005157601f610c7438819003918201601f19168301916001600160401b03831184841017610056578084926020946040528339810103126100515751606655604051610c07908161006d8239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604081815260048036101561001557600080fd5b600092833560e01c9081630eb9b15a1461063d5750806312eadade146105e45780631703a018146105c55780636b12e4c4146104435780636efd971c146103fa578063715018a6146103775780638da5cb5b1461033e5780639e33d81114610292578063d92d4ea0146101ae5763f2fde38b1461009157600080fd5b346101aa5760206003193601126101aa576100aa6107af565b906100b3610a7d565b73ffffffffffffffffffffffffffffffffffffffff809216928315610127575050603354827fffffffffffffffffffffffff0000000000000000000000000000000000000000821617603355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b90602060849251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b8280fd5b5090346101aa5760206003193601126101aa5773ffffffffffffffffffffffffffffffffffffffff6101de6107af565b6101e6610a7d565b16918215801561027d575b6102565750816020917fc3dc08a46232e8d0a95510120799f1e68e0aa28c88730b8b0127d5ff4565b4b09385526065835280852060017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0082541617905551908152a180f35b90517fc3b48cf1000000000000000000000000000000000000000000000000000000008152fd5b50828452606560205260ff82852054166101f1565b5090346101aa5760206003193601126101aa5773ffffffffffffffffffffffffffffffffffffffff6102c26107af565b6102ca610a7d565b1691828452606560205260ff8285205416156102565750816020917f665604bfe8ee87044ba1f1fd2fb47fe92983c9e187acbb442debf97d3e581921938552606583528085207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00815416905551908152a180f35b50503461037357816003193601126103735760209073ffffffffffffffffffffffffffffffffffffffff603354169051908152f35b5080fd5b83346103f757806003193601126103f757610390610a7d565b8073ffffffffffffffffffffffffffffffffffffffff6033547fffffffffffffffffffffffff00000000000000000000000000000000000000008116603355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b5050346103735760206003193601126103735760ff8160209373ffffffffffffffffffffffffffffffffffffffff6104306107af565b1681526065855220541690519015158152f35b509190346103735760a06003193601126103735767ffffffffffffffff83358181116105c1576104769036908601610864565b906084359081116105c15761048e90369086016107f3565b906104a160643560443560243584610afc565b60078110156105955760038114158061058a575b61055357506080015190602081519101200361052b57506067547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146104ff5760010160675580f35b5060116024927f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b9050517f7c6953f9000000000000000000000000000000000000000000000000000000008152fd5b8561058685519283927fe6ace38e0000000000000000000000000000000000000000000000000000000084528301610a3b565b0390fd5b5060028114156104b5565b6024856021887f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b8380fd5b5050346103735781600319360112610373576020906066549051908152f35b5091346103f75760806003193601126103f75782359067ffffffffffffffff82116103f7575061061d6106399361062e92369101610864565b606435906044359060243590610afc565b905191829182610a3b565b0390f35b919050346105c157836003193601126105c1578282019082821067ffffffffffffffff8311176106fa57508252601381526020907f53696d706c6551756f72756d56616e696c6c61000000000000000000000000008282015282519382859384528251928382860152825b8481106106e457505050828201840152601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168101030190f35b81810183015188820188015287955082016106a8565b8460416024927f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f604051930116820182811067ffffffffffffffff82111761076a57604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b359063ffffffff821682036107aa57565b600080fd5b6004359073ffffffffffffffffffffffffffffffffffffffff821682036107aa57565b359073ffffffffffffffffffffffffffffffffffffffff821682036107aa57565b81601f820112156107aa5780359067ffffffffffffffff821161076a5761084160207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f85011601610726565b92828452602083830101116107aa57816000926020809301838601378301015290565b9190916101209081818503126107aa5760409182519081019467ffffffffffffffff958281108782111761076a578452819561089f84610799565b83526020916108af838601610799565b838501526108be868601610799565b868501526108ce60608601610799565b60608501526080850135608085015260a085013573ffffffffffffffffffffffffffffffffffffffff811681036107aa5760a085015261091060c086016107d2565b60c085015260e085013560038110156107aa5760e08501526101009485810135908382116107aa57019181601f840112156107aa5782359681881161076a578760051b918580610961818601610726565b809b81520193860101948486116107aa57868101935b86851061098a5750505050505050500152565b84358381116107aa57820190847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe083890301126107aa5784519085820182811086821117610a0d5786526109df8a84016107d2565b825285830135918583116107aa576109fe898c809695819601016107f3565b83820152815201940193610977565b602460007f4e487b710000000000000000000000000000000000000000000000000000000081526041600452fd5b919060208301926007821015610a4e5752565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff603354163303610a9e57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b919092610b1560665491610b108487610bbe565b610bbe565b10159283610bb4575b505060e0810180516003811015610a4e57600203610b3e57505050600690565b516003811015610a4e57600103610b56575050600490565b63ffffffff90816020820151164210600014610b7457505050600090565b60408101518216421015610b8a57505050600190565b6060015116421015610ba55715610ba057600290565b600190565b15610baf57600390565b600590565b1191503880610b1e565b91908201809211610bcb57565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea164736f6c6343000812000a",
    "sourceMap": "202:1010:64:-:0;;;;;;;;;;;;;-1:-1:-1;;202:1010:64;;;;-1:-1:-1;;;;;202:1010:64;;;;;;;;;;;;;;;;;;;;;;;;349:16;202:1010;;;;;;;;;;;-1:-1:-1;202:1010:64;;;;;;-1:-1:-1;202:1010:64;;;;;-1:-1:-1;202:1010:64",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604081815260048036101561001557600080fd5b600092833560e01c9081630eb9b15a1461063d5750806312eadade146105e45780631703a018146105c55780636b12e4c4146104435780636efd971c146103fa578063715018a6146103775780638da5cb5b1461033e5780639e33d81114610292578063d92d4ea0146101ae5763f2fde38b1461009157600080fd5b346101aa5760206003193601126101aa576100aa6107af565b906100b3610a7d565b73ffffffffffffffffffffffffffffffffffffffff809216928315610127575050603354827fffffffffffffffffffffffff0000000000000000000000000000000000000000821617603355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b90602060849251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b8280fd5b5090346101aa5760206003193601126101aa5773ffffffffffffffffffffffffffffffffffffffff6101de6107af565b6101e6610a7d565b16918215801561027d575b6102565750816020917fc3dc08a46232e8d0a95510120799f1e68e0aa28c88730b8b0127d5ff4565b4b09385526065835280852060017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0082541617905551908152a180f35b90517fc3b48cf1000000000000000000000000000000000000000000000000000000008152fd5b50828452606560205260ff82852054166101f1565b5090346101aa5760206003193601126101aa5773ffffffffffffffffffffffffffffffffffffffff6102c26107af565b6102ca610a7d565b1691828452606560205260ff8285205416156102565750816020917f665604bfe8ee87044ba1f1fd2fb47fe92983c9e187acbb442debf97d3e581921938552606583528085207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00815416905551908152a180f35b50503461037357816003193601126103735760209073ffffffffffffffffffffffffffffffffffffffff603354169051908152f35b5080fd5b83346103f757806003193601126103f757610390610a7d565b8073ffffffffffffffffffffffffffffffffffffffff6033547fffffffffffffffffffffffff00000000000000000000000000000000000000008116603355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b5050346103735760206003193601126103735760ff8160209373ffffffffffffffffffffffffffffffffffffffff6104306107af565b1681526065855220541690519015158152f35b509190346103735760a06003193601126103735767ffffffffffffffff83358181116105c1576104769036908601610864565b906084359081116105c15761048e90369086016107f3565b906104a160643560443560243584610afc565b60078110156105955760038114158061058a575b61055357506080015190602081519101200361052b57506067547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146104ff5760010160675580f35b5060116024927f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b9050517f7c6953f9000000000000000000000000000000000000000000000000000000008152fd5b8561058685519283927fe6ace38e0000000000000000000000000000000000000000000000000000000084528301610a3b565b0390fd5b5060028114156104b5565b6024856021887f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b8380fd5b5050346103735781600319360112610373576020906066549051908152f35b5091346103f75760806003193601126103f75782359067ffffffffffffffff82116103f7575061061d6106399361062e92369101610864565b606435906044359060243590610afc565b905191829182610a3b565b0390f35b919050346105c157836003193601126105c1578282019082821067ffffffffffffffff8311176106fa57508252601381526020907f53696d706c6551756f72756d56616e696c6c61000000000000000000000000008282015282519382859384528251928382860152825b8481106106e457505050828201840152601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168101030190f35b81810183015188820188015287955082016106a8565b8460416024927f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f604051930116820182811067ffffffffffffffff82111761076a57604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b359063ffffffff821682036107aa57565b600080fd5b6004359073ffffffffffffffffffffffffffffffffffffffff821682036107aa57565b359073ffffffffffffffffffffffffffffffffffffffff821682036107aa57565b81601f820112156107aa5780359067ffffffffffffffff821161076a5761084160207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f85011601610726565b92828452602083830101116107aa57816000926020809301838601378301015290565b9190916101209081818503126107aa5760409182519081019467ffffffffffffffff958281108782111761076a578452819561089f84610799565b83526020916108af838601610799565b838501526108be868601610799565b868501526108ce60608601610799565b60608501526080850135608085015260a085013573ffffffffffffffffffffffffffffffffffffffff811681036107aa5760a085015261091060c086016107d2565b60c085015260e085013560038110156107aa5760e08501526101009485810135908382116107aa57019181601f840112156107aa5782359681881161076a578760051b918580610961818601610726565b809b81520193860101948486116107aa57868101935b86851061098a5750505050505050500152565b84358381116107aa57820190847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe083890301126107aa5784519085820182811086821117610a0d5786526109df8a84016107d2565b825285830135918583116107aa576109fe898c809695819601016107f3565b83820152815201940193610977565b602460007f4e487b710000000000000000000000000000000000000000000000000000000081526041600452fd5b919060208301926007821015610a4e5752565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff603354163303610a9e57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b919092610b1560665491610b108487610bbe565b610bbe565b10159283610bb4575b505060e0810180516003811015610a4e57600203610b3e57505050600690565b516003811015610a4e57600103610b56575050600490565b63ffffffff90816020820151164210600014610b7457505050600090565b60408101518216421015610b8a57505050600190565b6060015116421015610ba55715610ba057600290565b600190565b15610baf57600390565b600590565b1191503880610b1e565b91908201809211610bcb57565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea164736f6c6343000812000a",
    "sourceMap": "202:1010:64:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;202:1010:64;;;;;;;:::i;:::-;1303:62:17;;;:::i;:::-;202:1010:64;;;;2409:22:17;;;202:1010:64;;;;2765:6:17;202:1010:64;;;;;;2765:6:17;202:1010:64;;2813:40:17;;;;202:1010:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;202:1010:64;;;;;;;;:::i;:::-;1303:62:17;;:::i;:::-;202:1010:64;1137:19:85;;;:44;;;;202:1010:64;1133:71:85;;202:1010:64;;;;1249:19:85;202:1010:64;;;1214:6:85;202:1010:64;;;;;1230:4:85;202:1010:64;;;;;;;;;;;1249:19:85;202:1010:64;;1133:71:85;202:1010:64;;1190:14:85;;;;1137:44;202:1010:64;;;;1763:6:85;202:1010:64;;;;;;;;1137:44:85;;202:1010:64;;;;;;;-1:-1:-1;;202:1010:64;;;;;;;;:::i;:::-;1303:62:17;;:::i;:::-;202:1010:64;;;;;1426:6:85;202:1010:64;;;;;;;;1425:14:85;1421:41;;202:1010:64;;;;1508:20:85;202:1010:64;;;1426:6:85;202:1010:64;;;;;;;;;;;;;;;1508:20:85;202:1010:64;;;;;;;;;-1:-1:-1;;202:1010:64;;;;;;;;1513:6:17;202:1010:64;;;;;;;;;;;;;;;;;;-1:-1:-1;;202:1010:64;;;;;1303:62:17;;:::i;:::-;202:1010:64;;2765:6:17;202:1010:64;;;;2765:6:17;202:1010:64;;2813:40:17;;;;202:1010:64;;;;;;;;;;;;-1:-1:-1;;202:1010:64;;;;;;;;;;;;:::i;:::-;;;;1763:6:85;202:1010:64;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;202:1010:64;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;611:65;202:1010;;;;;;611:65;;:::i;:::-;202:1010;;;;;;709:23;691:41;;;690:102;;;202:1010;686:177;;979:29;202:1010;979:29;202:1010;;;;;;;1012:18;979:51;975:80;;202:1010;1065:13;202:1010;;;;;;;;1065:13;202:1010;;;;;;;;;;;;;975:80;202:1010;;;1039:16;;;;686:177;202:1010;815:37;202:1010;;815:37;;;;;;;;;:::i;:::-;;;;690:102;738:53;756:35;738:53;;;690:102;;202:1010;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;202:1010:64;;;;;;;360:21:62;202:1010:64;;;;;;;;;;;;;;-1:-1:-1;;202:1010:64;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;202:1010:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;202:1010:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;202:1010:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;202:1010:64;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;202:1010:64;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;202:1010:64;;;;;-1:-1:-1;202:1010:64;1599:130:17;202:1010:64;1513:6:17;202:1010:64;;929:10:24;1662:23:17;202:1010:64;;1599:130:17:o;202:1010:64:-;;;;;;;;;;;;;;;;;;;;;;;774:1197:62;;;;2181:41;1014:6;202:1010:64;2181:25:62;;;;;:::i;:::-;:41;:::i;:::-;2239:21;;999:110;;;;774:1197;1123:27;;;;;202:1010:64;;;;;;;;1154:28:62;1123:59;1154:28;;1198:31;;;1205:24;1198:31;:::o;1119:846::-;202:1010:64;;;;;;;;1250:58:62;202:1010:64;;1324:30:62;;1331:23;1324:30;:::o;1246:719::-;202:1010:64;1393:23:62;;;;;202:1010:64;;1375:15:62;:41;1371:594;202:1010:64;;;1432:33:62;;;-1:-1:-1;1432:33:62;:::o;1371:594::-;1504:24;;;202:1010:64;;;1375:15:62;1486:42;202:1010:64;;;1544:34:62;;;202:1010:64;1544:34:62;:::o;1482:483::-;1617:24;;202:1010:64;;1375:15:62;1599:42;202:1010:64;;;1657:162:62;;;1154:28;1689:42;:::o;1657:162::-;202:1010:64;1770:34:62;:::o;1595:370::-;1835:130;;;202:1010:64;1863:30:62;:::o;1835:130::-;1931:23;1924:30;:::o;999:110::-;2381:25;;-1:-1:-1;999:110:62;;;;202:1010:64;;;;;;;;;;:::o;:::-;;;;;;;;;",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "disableSpace(address)": "9e33d811",
    "enableSpace(address)": "d92d4ea0",
    "execute((uint32,uint32,uint32,uint32,bytes32,address,address,uint8,(address,bytes)[]),uint256,uint256,uint256,bytes)": "6b12e4c4",
    "getProposalStatus((uint32,uint32,uint32,uint32,bytes32,address,address,uint8,(address,bytes)[]),uint256,uint256,uint256)": "12eadade",
    "getStrategyType()": "0eb9b15a",
    "isSpaceEnabled(address)": "6efd971c",
    "owner()": "8da5cb5b",
    "quorum()": "1703a018",
    "renounceOwnership()": "715018a6",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_quorum\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ExecutionFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPayload\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"enum ProposalStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"name\":\"InvalidProposalStatus\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSpace\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"space\",\"type\":\"address\"}],\"name\":\"SpaceDisabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"space\",\"type\":\"address\"}],\"name\":\"SpaceEnabled\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"space\",\"type\":\"address\"}],\"name\":\"disableSpace\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"space\",\"type\":\"address\"}],\"name\":\"enableSpace\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"snapshotTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"startTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"minEndTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"maxEndTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"executionPayloadHash\",\"type\":\"bytes32\"},{\"internalType\":\"contract IExecutionStrategy\",\"name\":\"executionStrategy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"enum FinalizationStatus\",\"name\":\"finalizationStatus\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"addy\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"internalType\":\"struct Strategy[]\",\"name\":\"votingStrategies\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Proposal\",\"name\":\"proposal\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"votesFor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votesAgainst\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votesAbstain\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"snapshotTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"startTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"minEndTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"maxEndTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"executionPayloadHash\",\"type\":\"bytes32\"},{\"internalType\":\"contract IExecutionStrategy\",\"name\":\"executionStrategy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"enum FinalizationStatus\",\"name\":\"finalizationStatus\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"addy\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"internalType\":\"struct Strategy[]\",\"name\":\"votingStrategies\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Proposal\",\"name\":\"proposal\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"votesFor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votesAgainst\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votesAbstain\",\"type\":\"uint256\"}],\"name\":\"getProposalStatus\",\"outputs\":[{\"internalType\":\"enum ProposalStatus\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStrategyType\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"space\",\"type\":\"address\"}],\"name\":\"isSpaceEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quorum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"InvalidProposalStatus(uint8)\":[{\"params\":{\"status\":\"The current status of the proposal.\"}}]},\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"disableSpace(address)\":{\"params\":{\"space\":\"Address of the space.\"}},\"enableSpace(address)\":{\"params\":{\"space\":\"Address of the space.\"}},\"isSpaceEnabled(address)\":{\"params\":{\"space\":\"Address of the space.\"},\"returns\":{\"_0\":\"bool whether the space is enabled.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ExecutionFailed()\":[{\"notice\":\"Thrown when the execution of a proposal fails.\"}],\"InvalidPayload()\":[{\"notice\":\"Thrown when the execution payload supplied to the execution strategy is not equal to the payload supplied when the proposal was created.\"}],\"InvalidProposalStatus(uint8)\":[{\"notice\":\"Thrown when the current status of a proposal does not allow the desired action.\"}]},\"events\":{\"SpaceDisabled(address)\":{\"notice\":\"Emitted when a space is disabled.\"},\"SpaceEnabled(address)\":{\"notice\":\"Emitted when a space is enabled.\"}},\"kind\":\"user\",\"methods\":{\"disableSpace(address)\":{\"notice\":\"Disable a space.\"},\"enableSpace(address)\":{\"notice\":\"Enable a space.\"},\"isSpaceEnabled(address)\":{\"notice\":\"Check if a space is enabled.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/execution-strategies/VanillaExecutionStrategy.sol\":\"VanillaExecutionStrategy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[\":@gnosis.pm/safe-contracts/=lib/safe-contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@prb/test/=lib/prb-test/src/\",\":@zodiac/=lib/zodiac/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":prb-test/=lib/prb-test/src/\",\":safe-contracts/=lib/safe-contracts/contracts/\",\":zodiac/=lib/zodiac/contracts/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xe798cadb41e2da274913e4b3183a80f50fb057a42238fe8467e077268100ec27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://899f850f7df5a270bccfb765d70069959ca1c20d3a7381c1c3bda8a3ffee1935\",\"dweb:/ipfs/QmVdnAqwyX2L3nX2HDA5WKGtVBFyH1nKE9A1k7fZnPBkhP\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/safe-contracts/contracts/common/Enum.sol\":{\"keccak256\":\"0x473e45b1a5cc47be494b0e123c9127f0c11c1e0992a321ae5a644c0bfdb2c14f\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://948e6d5a8bd7377f7795b6e28584eab9be5c0a8db240bf5e606744a175238c3d\",\"dweb:/ipfs/QmQQaUmQfpuejV41jbxKSTgEBYYCcVTjCsDMgf2htgz6ej\"]},\"src/execution-strategies/SimpleQuorumExecutionStrategy.sol\":{\"keccak256\":\"0x7fbbf4f53dbd0a66dfe3eeb3d531a0c1405ae5bfc01eac1fc730dc2aa6c8df15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8601fb8bd397526bb7e9d367d5358168334737435a675bb8b7a031672da3e864\",\"dweb:/ipfs/QmSRgrfodN9FzKbBtawodvfwhDDaomeZkG4VWDAkNuanHo\"]},\"src/execution-strategies/VanillaExecutionStrategy.sol\":{\"keccak256\":\"0x53352eed04432feebc670ddcb00f0108e712b6c27e82a18b49c1a8063f046f14\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a5ccebbfbc8c0e0a9572fb40a42f8b873db4034f41f6ebfc8a4a6497e214d65\",\"dweb:/ipfs/QmQVtAwnjDVqEZMhz39oL6Fer6czb5x3yCgcWfFhPCMuoQ\"]},\"src/interfaces/IExecutionStrategy.sol\":{\"keccak256\":\"0x641b22408afae2225f451724a25536b7237ca0be5bb4eed6fa4049cfdbee4f47\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8de2ce3c2d23b4302594a6584a2b679f574e03182ae63547533cb519a8127ce1\",\"dweb:/ipfs/Qma22mCuJreVqGLY3BPSb1gVkMQ3bzPZRPghUFoeBQrtb1\"]},\"src/interfaces/execution-strategies/IExecutionStrategyErrors.sol\":{\"keccak256\":\"0x50e9d34682598a16c623476385a1d10e62b69c46ac07258d5d4de55a918e2eb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://64f878026d6eba929754257bdf8224ad60dde00b84a33b72609b1b038e2ac62e\",\"dweb:/ipfs/QmYWaLHaUBMfQeiVKyrSAi1GKMYJS9aT3YrvjVsG4uPfYo\"]},\"src/types.sol\":{\"keccak256\":\"0x68fb90d01ef352eba200875809dbbd059eda955f07429a712ce63e398315a9ca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6392acf4168433ed69a3b5a43b5b92e86a1696ed7637ebb06ea97b2658e7b286\",\"dweb:/ipfs/QmSs963TaX8pCNsL1h4L8jYaPgEczqfzbf6epaUYMj4j8x\"]},\"src/utils/SpaceManager.sol\":{\"keccak256\":\"0x3b06201b3925be76066a88016bd38a97e6ef131ba046ff9a677758a31253c14c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e78900425f2e8d3317c0f5a97920312cba9f7e7abb17b88d5d605d08068e8bf2\",\"dweb:/ipfs/QmRxDVNBejXitVkmcsC5dKdkmgp3ADxeX2NJDCbJiZtxGs\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.18+commit.87f61d96"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_quorum",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ExecutionFailed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidPayload"
        },
        {
          "inputs": [
            {
              "internalType": "enum ProposalStatus",
              "name": "status",
              "type": "uint8"
            }
          ],
          "type": "error",
          "name": "InvalidProposalStatus"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidSpace"
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "space",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SpaceDisabled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "space",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SpaceEnabled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "space",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "disableSpace"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "space",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "enableSpace"
        },
        {
          "inputs": [
            {
              "internalType": "struct Proposal",
              "name": "proposal",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "snapshotTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "startTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "minEndTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "maxEndTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "bytes32",
                  "name": "executionPayloadHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "contract IExecutionStrategy",
                  "name": "executionStrategy",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "author",
                  "type": "address"
                },
                {
                  "internalType": "enum FinalizationStatus",
                  "name": "finalizationStatus",
                  "type": "uint8"
                },
                {
                  "internalType": "struct Strategy[]",
                  "name": "votingStrategies",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "addy",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "params",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "votesFor",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "votesAgainst",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "votesAbstain",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "payload",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "execute"
        },
        {
          "inputs": [
            {
              "internalType": "struct Proposal",
              "name": "proposal",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "snapshotTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "startTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "minEndTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "maxEndTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "bytes32",
                  "name": "executionPayloadHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "contract IExecutionStrategy",
                  "name": "executionStrategy",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "author",
                  "type": "address"
                },
                {
                  "internalType": "enum FinalizationStatus",
                  "name": "finalizationStatus",
                  "type": "uint8"
                },
                {
                  "internalType": "struct Strategy[]",
                  "name": "votingStrategies",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "addy",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "params",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "votesFor",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "votesAgainst",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "votesAbstain",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getProposalStatus",
          "outputs": [
            {
              "internalType": "enum ProposalStatus",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "getStrategyType",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "space",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isSpaceEnabled",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "quorum",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "disableSpace(address)": {
            "params": {
              "space": "Address of the space."
            }
          },
          "enableSpace(address)": {
            "params": {
              "space": "Address of the space."
            }
          },
          "isSpaceEnabled(address)": {
            "params": {
              "space": "Address of the space."
            },
            "returns": {
              "_0": "bool whether the space is enabled."
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "disableSpace(address)": {
            "notice": "Disable a space."
          },
          "enableSpace(address)": {
            "notice": "Enable a space."
          },
          "isSpaceEnabled(address)": {
            "notice": "Check if a space is enabled."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@gnosis.pm/safe-contracts/=lib/safe-contracts/",
        ":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        ":@prb/test/=lib/prb-test/src/",
        ":@zodiac/=lib/zodiac/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-gas-snapshot/=lib/forge-gas-snapshot/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":prb-test/=lib/prb-test/src/",
        ":safe-contracts/=lib/safe-contracts/contracts/",
        ":zodiac/=lib/zodiac/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 10000
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "src/execution-strategies/VanillaExecutionStrategy.sol": "VanillaExecutionStrategy"
      },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888",
        "urls": [
          "bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a",
          "dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0xe798cadb41e2da274913e4b3183a80f50fb057a42238fe8467e077268100ec27",
        "urls": [
          "bzz-raw://899f850f7df5a270bccfb765d70069959ca1c20d3a7381c1c3bda8a3ffee1935",
          "dweb:/ipfs/QmVdnAqwyX2L3nX2HDA5WKGtVBFyH1nKE9A1k7fZnPBkhP"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183",
        "urls": [
          "bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06",
          "dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/safe-contracts/contracts/common/Enum.sol": {
        "keccak256": "0x473e45b1a5cc47be494b0e123c9127f0c11c1e0992a321ae5a644c0bfdb2c14f",
        "urls": [
          "bzz-raw://948e6d5a8bd7377f7795b6e28584eab9be5c0a8db240bf5e606744a175238c3d",
          "dweb:/ipfs/QmQQaUmQfpuejV41jbxKSTgEBYYCcVTjCsDMgf2htgz6ej"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/execution-strategies/SimpleQuorumExecutionStrategy.sol": {
        "keccak256": "0x7fbbf4f53dbd0a66dfe3eeb3d531a0c1405ae5bfc01eac1fc730dc2aa6c8df15",
        "urls": [
          "bzz-raw://8601fb8bd397526bb7e9d367d5358168334737435a675bb8b7a031672da3e864",
          "dweb:/ipfs/QmSRgrfodN9FzKbBtawodvfwhDDaomeZkG4VWDAkNuanHo"
        ],
        "license": "MIT"
      },
      "src/execution-strategies/VanillaExecutionStrategy.sol": {
        "keccak256": "0x53352eed04432feebc670ddcb00f0108e712b6c27e82a18b49c1a8063f046f14",
        "urls": [
          "bzz-raw://5a5ccebbfbc8c0e0a9572fb40a42f8b873db4034f41f6ebfc8a4a6497e214d65",
          "dweb:/ipfs/QmQVtAwnjDVqEZMhz39oL6Fer6czb5x3yCgcWfFhPCMuoQ"
        ],
        "license": "MIT"
      },
      "src/interfaces/IExecutionStrategy.sol": {
        "keccak256": "0x641b22408afae2225f451724a25536b7237ca0be5bb4eed6fa4049cfdbee4f47",
        "urls": [
          "bzz-raw://8de2ce3c2d23b4302594a6584a2b679f574e03182ae63547533cb519a8127ce1",
          "dweb:/ipfs/Qma22mCuJreVqGLY3BPSb1gVkMQ3bzPZRPghUFoeBQrtb1"
        ],
        "license": "MIT"
      },
      "src/interfaces/execution-strategies/IExecutionStrategyErrors.sol": {
        "keccak256": "0x50e9d34682598a16c623476385a1d10e62b69c46ac07258d5d4de55a918e2eb2",
        "urls": [
          "bzz-raw://64f878026d6eba929754257bdf8224ad60dde00b84a33b72609b1b038e2ac62e",
          "dweb:/ipfs/QmYWaLHaUBMfQeiVKyrSAi1GKMYJS9aT3YrvjVsG4uPfYo"
        ],
        "license": "MIT"
      },
      "src/types.sol": {
        "keccak256": "0x68fb90d01ef352eba200875809dbbd059eda955f07429a712ce63e398315a9ca",
        "urls": [
          "bzz-raw://6392acf4168433ed69a3b5a43b5b92e86a1696ed7637ebb06ea97b2658e7b286",
          "dweb:/ipfs/QmSs963TaX8pCNsL1h4L8jYaPgEczqfzbf6epaUYMj4j8x"
        ],
        "license": "MIT"
      },
      "src/utils/SpaceManager.sol": {
        "keccak256": "0x3b06201b3925be76066a88016bd38a97e6ef131ba046ff9a677758a31253c14c",
        "urls": [
          "bzz-raw://e78900425f2e8d3317c0f5a97920312cba9f7e7abb17b88d5d605d08068e8bf2",
          "dweb:/ipfs/QmRxDVNBejXitVkmcsC5dKdkmgp3ADxeX2NJDCbJiZtxGs"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/execution-strategies/VanillaExecutionStrategy.sol",
    "id": 35528,
    "exportedSymbols": {
      "Proposal": [36205],
      "ProposalStatus": [36227],
      "SimpleQuorumExecutionStrategy": [34986],
      "VanillaExecutionStrategy": [35527]
    },
    "nodeType": "SourceUnit",
    "src": "33:1180:64",
    "nodes": [
      {
        "id": 35442,
        "nodeType": "PragmaDirective",
        "src": "33:24:64",
        "nodes": [],
        "literals": ["solidity", "^", "0.8", ".18"]
      },
      {
        "id": 35444,
        "nodeType": "ImportDirective",
        "src": "59:84:64",
        "nodes": [],
        "absolutePath": "src/execution-strategies/SimpleQuorumExecutionStrategy.sol",
        "file": "./SimpleQuorumExecutionStrategy.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35528,
        "sourceUnit": 34987,
        "symbolAliases": [
          {
            "foreign": {
              "id": 35443,
              "name": "SimpleQuorumExecutionStrategy",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 34986,
              "src": "68:29:64",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 35447,
        "nodeType": "ImportDirective",
        "src": "144:56:64",
        "nodes": [],
        "absolutePath": "src/types.sol",
        "file": "../types.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35528,
        "sourceUnit": 36244,
        "symbolAliases": [
          {
            "foreign": {
              "id": 35445,
              "name": "Proposal",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36205,
              "src": "153:8:64",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 35446,
              "name": "ProposalStatus",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36227,
              "src": "163:14:64",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 35527,
        "nodeType": "ContractDefinition",
        "src": "202:1010:64",
        "nodes": [
          {
            "id": 35451,
            "nodeType": "VariableDeclaration",
            "src": "275:28:64",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "numExecuted",
            "nameLocation": "292:11:64",
            "scope": 35527,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 35450,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "275:7:64",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 35461,
            "nodeType": "FunctionDefinition",
            "src": "310:62:64",
            "nodes": [],
            "body": {
              "id": 35460,
              "nodeType": "Block",
              "src": "339:33:64",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 35458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 35456,
                      "name": "quorum",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34814,
                      "src": "349:6:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 35457,
                      "name": "_quorum",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35453,
                      "src": "358:7:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "349:16:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 35459,
                  "nodeType": "ExpressionStatement",
                  "src": "349:16:64"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 35454,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35453,
                  "mutability": "mutable",
                  "name": "_quorum",
                  "nameLocation": "330:7:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35461,
                  "src": "322:15:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35452,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "322:7:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "321:17:64"
            },
            "returnParameters": {
              "id": 35455,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "339:0:64"
            },
            "scope": 35527,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 35517,
            "nodeType": "FunctionDefinition",
            "src": "378:707:64",
            "nodes": [],
            "body": {
              "id": 35516,
              "nodeType": "Block",
              "src": "569:516:64",
              "nodes": [],
              "statements": [
                {
                  "assignments": [35478],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 35478,
                      "mutability": "mutable",
                      "name": "proposalStatus",
                      "nameLocation": "594:14:64",
                      "nodeType": "VariableDeclaration",
                      "scope": 35516,
                      "src": "579:29:64",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProposalStatus_$36227",
                        "typeString": "enum ProposalStatus"
                      },
                      "typeName": {
                        "id": 35477,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 35476,
                          "name": "ProposalStatus",
                          "nameLocations": ["579:14:64"],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 36227,
                          "src": "579:14:64"
                        },
                        "referencedDeclaration": 36227,
                        "src": "579:14:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ProposalStatus_$36227",
                          "typeString": "enum ProposalStatus"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 35485,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 35480,
                        "name": "proposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35464,
                        "src": "629:8:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$36205_memory_ptr",
                          "typeString": "struct Proposal memory"
                        }
                      },
                      {
                        "id": 35481,
                        "name": "votesFor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35466,
                        "src": "639:8:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 35482,
                        "name": "votesAgainst",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35468,
                        "src": "649:12:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 35483,
                        "name": "votesAbstain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35470,
                        "src": "663:12:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Proposal_$36205_memory_ptr",
                          "typeString": "struct Proposal memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 35479,
                      "name": "getProposalStatus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34939,
                      "src": "611:17:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Proposal_$36205_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_enum$_ProposalStatus_$36227_$",
                        "typeString": "function (struct Proposal memory,uint256,uint256,uint256) view returns (enum ProposalStatus)"
                      }
                    },
                    "id": 35484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "611:65:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProposalStatus_$36227",
                      "typeString": "enum ProposalStatus"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "579:97:64"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 35496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_enum$_ProposalStatus_$36227",
                            "typeString": "enum ProposalStatus"
                          },
                          "id": 35489,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 35486,
                            "name": "proposalStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35478,
                            "src": "691:14:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ProposalStatus_$36227",
                              "typeString": "enum ProposalStatus"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "expression": {
                              "id": 35487,
                              "name": "ProposalStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 36227,
                              "src": "709:14:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_ProposalStatus_$36227_$",
                                "typeString": "type(enum ProposalStatus)"
                              }
                            },
                            "id": 35488,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "724:8:64",
                            "memberName": "Accepted",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 36223,
                            "src": "709:23:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ProposalStatus_$36227",
                              "typeString": "enum ProposalStatus"
                            }
                          },
                          "src": "691:41:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 35490,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "690:43:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_enum$_ProposalStatus_$36227",
                            "typeString": "enum ProposalStatus"
                          },
                          "id": 35494,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 35491,
                            "name": "proposalStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35478,
                            "src": "738:14:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ProposalStatus_$36227",
                              "typeString": "enum ProposalStatus"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "expression": {
                              "id": 35492,
                              "name": "ProposalStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 36227,
                              "src": "756:14:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_ProposalStatus_$36227_$",
                                "typeString": "type(enum ProposalStatus)"
                              }
                            },
                            "id": 35493,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "771:20:64",
                            "memberName": "VotingPeriodAccepted",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 36222,
                            "src": "756:35:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ProposalStatus_$36227",
                              "typeString": "enum ProposalStatus"
                            }
                          },
                          "src": "738:53:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 35495,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "737:55:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "690:102:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 35502,
                  "nodeType": "IfStatement",
                  "src": "686:177:64",
                  "trueBody": {
                    "id": 35501,
                    "nodeType": "Block",
                    "src": "794:69:64",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 35498,
                              "name": "proposalStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35478,
                              "src": "837:14:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ProposalStatus_$36227",
                                "typeString": "enum ProposalStatus"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_ProposalStatus_$36227",
                                "typeString": "enum ProposalStatus"
                              }
                            ],
                            "id": 35497,
                            "name": "InvalidProposalStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35678,
                            "src": "815:21:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_enum$_ProposalStatus_$36227_$returns$__$",
                              "typeString": "function (enum ProposalStatus) pure"
                            }
                          },
                          "id": 35499,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "815:37:64",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 35500,
                        "nodeType": "RevertStatement",
                        "src": "808:44:64"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 35508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 35503,
                        "name": "proposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35464,
                        "src": "979:8:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$36205_memory_ptr",
                          "typeString": "struct Proposal memory"
                        }
                      },
                      "id": 35504,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "988:20:64",
                      "memberName": "executionPayloadHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36192,
                      "src": "979:29:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 35506,
                          "name": "payload",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35472,
                          "src": "1022:7:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 35505,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "1012:9:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 35507,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1012:18:64",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "979:51:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 35512,
                  "nodeType": "IfStatement",
                  "src": "975:80:64",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 35509,
                        "name": "InvalidPayload",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35684,
                        "src": "1039:14:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 35510,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1039:16:64",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 35511,
                    "nodeType": "RevertStatement",
                    "src": "1032:23:64"
                  }
                },
                {
                  "expression": {
                    "id": 35514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1065:13:64",
                    "subExpression": {
                      "id": 35513,
                      "name": "numExecuted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35451,
                      "src": "1065:11:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 35515,
                  "nodeType": "ExpressionStatement",
                  "src": "1065:13:64"
                }
              ]
            },
            "baseFunctions": [34841],
            "functionSelector": "6b12e4c4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "execute",
            "nameLocation": "387:7:64",
            "overrides": {
              "id": 35474,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "560:8:64"
            },
            "parameters": {
              "id": 35473,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35464,
                  "mutability": "mutable",
                  "name": "proposal",
                  "nameLocation": "420:8:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35517,
                  "src": "404:24:64",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Proposal_$36205_memory_ptr",
                    "typeString": "struct Proposal"
                  },
                  "typeName": {
                    "id": 35463,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 35462,
                      "name": "Proposal",
                      "nameLocations": ["404:8:64"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 36205,
                      "src": "404:8:64"
                    },
                    "referencedDeclaration": 36205,
                    "src": "404:8:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proposal_$36205_storage_ptr",
                      "typeString": "struct Proposal"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35466,
                  "mutability": "mutable",
                  "name": "votesFor",
                  "nameLocation": "446:8:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35517,
                  "src": "438:16:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35465,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "438:7:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35468,
                  "mutability": "mutable",
                  "name": "votesAgainst",
                  "nameLocation": "472:12:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35517,
                  "src": "464:20:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35467,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "464:7:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35470,
                  "mutability": "mutable",
                  "name": "votesAbstain",
                  "nameLocation": "502:12:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35517,
                  "src": "494:20:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35469,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "494:7:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35472,
                  "mutability": "mutable",
                  "name": "payload",
                  "nameLocation": "537:7:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35517,
                  "src": "524:20:64",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 35471,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "524:5:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "394:156:64"
            },
            "returnParameters": {
              "id": 35475,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "569:0:64"
            },
            "scope": 35527,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 35526,
            "nodeType": "FunctionDefinition",
            "src": "1091:119:64",
            "nodes": [],
            "body": {
              "id": 35525,
              "nodeType": "Block",
              "src": "1165:45:64",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "hexValue": "53696d706c6551756f72756d56616e696c6c61",
                    "id": 35523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1182:21:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_9285ab5787abb09a519b6daf114f8552dfd21196bf817acc82bb5b376cc48115",
                      "typeString": "literal_string \"SimpleQuorumVanilla\""
                    },
                    "value": "SimpleQuorumVanilla"
                  },
                  "functionReturnParameters": 35522,
                  "id": 35524,
                  "nodeType": "Return",
                  "src": "1175:28:64"
                }
              ]
            },
            "baseFunctions": [34985],
            "functionSelector": "0eb9b15a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStrategyType",
            "nameLocation": "1100:15:64",
            "overrides": {
              "id": 35519,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1132:8:64"
            },
            "parameters": {
              "id": 35518,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1115:2:64"
            },
            "returnParameters": {
              "id": 35522,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35521,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35526,
                  "src": "1150:13:64",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 35520,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1150:6:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1149:15:64"
            },
            "scope": 35527,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 35448,
              "name": "SimpleQuorumExecutionStrategy",
              "nameLocations": ["239:29:64"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 34986,
              "src": "239:29:64"
            },
            "id": 35449,
            "nodeType": "InheritanceSpecifier",
            "src": "239:29:64"
          }
        ],
        "canonicalName": "VanillaExecutionStrategy",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [35527, 34986, 36986, 25214, 26234, 25772, 35584, 35685],
        "name": "VanillaExecutionStrategy",
        "nameLocation": "211:24:64",
        "scope": 35528,
        "usedErrors": [35678, 35681, 35684, 36853]
      }
    ],
    "license": "MIT"
  },
  "id": 64
}
