{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_quorum",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "ExecutionFailed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "enum ProposalStatus",
          "name": "status",
          "type": "uint8"
        }
      ],
      "name": "InvalidProposalStatus",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidSpace",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newQuorum",
          "type": "uint256"
        }
      ],
      "name": "QuorumUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "space",
          "type": "address"
        }
      ],
      "name": "SpaceDisabled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "space",
          "type": "address"
        }
      ],
      "name": "SpaceEnabled",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "space",
          "type": "address"
        }
      ],
      "name": "disableSpace",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "space",
          "type": "address"
        }
      ],
      "name": "enableSpace",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "author",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "startBlockNumber",
              "type": "uint32"
            },
            {
              "internalType": "contract IExecutionStrategy",
              "name": "executionStrategy",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "minEndBlockNumber",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "maxEndBlockNumber",
              "type": "uint32"
            },
            {
              "internalType": "enum FinalizationStatus",
              "name": "finalizationStatus",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "executionPayloadHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "activeVotingStrategies",
              "type": "uint256"
            }
          ],
          "internalType": "struct Proposal",
          "name": "proposal",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "votesFor",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "votesAgainst",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "votesAbstain",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "payload",
          "type": "bytes"
        }
      ],
      "name": "execute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "author",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "startBlockNumber",
              "type": "uint32"
            },
            {
              "internalType": "contract IExecutionStrategy",
              "name": "executionStrategy",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "minEndBlockNumber",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "maxEndBlockNumber",
              "type": "uint32"
            },
            {
              "internalType": "enum FinalizationStatus",
              "name": "finalizationStatus",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "executionPayloadHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "activeVotingStrategies",
              "type": "uint256"
            }
          ],
          "internalType": "struct Proposal",
          "name": "proposal",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "votesFor",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "votesAgainst",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "votesAbstain",
          "type": "uint256"
        }
      ],
      "name": "getProposalStatus",
      "outputs": [
        {
          "internalType": "enum ProposalStatus",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getStrategyType",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "space",
          "type": "address"
        }
      ],
      "name": "isSpaceEnabled",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "quorum",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_quorum",
          "type": "uint256"
        }
      ],
      "name": "setQuorum",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "initParams",
          "type": "bytes"
        }
      ],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608034620002c75762001112906001600160401b0390601f38849003908101601f191682019083821183831017620002b15780839160409687948552833981010312620002c75780516001600160a01b039283821691829003620002c7576020928301518551808501938452808701918252868152926060840192831184841017620002b157828752600093845460ff8160081c161594858096620002a3575b80156200028a575b1562000233575060ff19811660011786558891908562000221575b508051810103126200021d5751908582168092036200021d575194620000fa60ff855460081c16620000f481620002cc565b620002cc565b62000105336200032d565b33906033541603620001db578015620001885762000123906200032d565b8154936200013760ff8660081c16620002cc565b6066556200014f575b8351610d9b9081620003778239f35b7f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989261ff0019169055825160018152a138808062000140565b855162461bcd60e51b815260048101859052602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b60648487519062461bcd60e51b825280600483015260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b8380fd5b61ffff191661010117865538620000c2565b6084906d191e481a5b9a5d1a585b1a5e995960921b60c4858b62461bcd60e51b85526064820152602e858201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160a48201520152fd5b50303b158015620000a75750600160ff831614620000a7565b50600160ff8316106200009f565b634e487b7160e01b600052604160045260246000fd5b600080fd5b15620002d457565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b603380546001600160a01b039283166001600160a01b0319821681179092559091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a356fe6080604081815260048036101561001557600080fd5b600092833560e01c9081630eb9b15a14610870575080631703a018146108515780632b06df53146107125780636efd971c146106ce578063715018a61461064b5780638da5cb5b146106165780639e33d81114610591578063a4f9edbf146102ce578063c1ba4e5914610281578063d92d4ea0146101c4578063ea8f8c4b146101795763f2fde38b146100a757600080fd5b34610175576020600319360112610175576100c0610959565b916100c9610b2f565b73ffffffffffffffffffffffffffffffffffffffff8316156100f257836100ef84610bae565b80f35b90602060849251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b8280fd5b5050346101c0576101606003193601126101c0576101bc906101b161019d36610981565b610144359061012435906101043590610c1b565b905191829182610aed565b0390f35b5080fd5b5090346101755760206003193601126101755773ffffffffffffffffffffffffffffffffffffffff6101f4610959565b6101fc610b2f565b16918215801561026d575b6102465750816020917fc3dc08a46232e8d0a95510120799f1e68e0aa28c88730b8b0127d5ff4565b4b09385526065835260018186205551908152a180f35b90517fc3b48cf1000000000000000000000000000000000000000000000000000000008152fd5b508284526065602052818420541515610207565b5034610175576020600319360112610175577ff18f88786aae85a652aadb99a82462616489a33370c9bcc7b245906812ef7cd19160209135906102c2610b2f565b8160665551908152a180f35b503461017557602060031936011261017557803567ffffffffffffffff811161058d576102fe9036908301610a6c565b83549060ff8260081c161591828093610580575b8015610569575b156104e6578260017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0083161787556104b8575b5083818051810103126104b45760208101519073ffffffffffffffffffffffffffffffffffffffff82168092036104b0578401519261039a60ff875460081c1661039581610d03565b610d03565b6103a333610bae565b6103ab610b2f565b811561042d57506103bb90610bae565b8354916103cd60ff8460081c16610d03565b6066556103d8578280f35b7f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff6020921684555160018152a138808280f35b60849060208651917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b8580fd5b8480fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000166101011785553861034c565b60848460208751917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152fd5b50303b1580156103195750600160ff821614610319565b50600160ff821610610312565b8380fd5b5090346101755760206003193601126101755773ffffffffffffffffffffffffffffffffffffffff6105c1610959565b6105c9610b2f565b1691828452606560205281842054156102465750816020917f665604bfe8ee87044ba1f1fd2fb47fe92983c9e187acbb442debf97d3e58192193855260658352848181205551908152a180f35b5050346101c057816003193601126101c05760209073ffffffffffffffffffffffffffffffffffffffff603354169051908152f35b83346106cb57806003193601126106cb57610664610b2f565b8073ffffffffffffffffffffffffffffffffffffffff6033547fffffffffffffffffffffffff00000000000000000000000000000000000000008116603355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b5050346101c05760206003193601126101c0578060209273ffffffffffffffffffffffffffffffffffffffff610702610959565b1681526065845220549051908152f35b509190346101c0576101806003193601126101c05761073036610981565b6101643567ffffffffffffffff811161058d57906107546107699236908701610a6c565b50610144359061012435906101043590610c1b565b9060078210156108255760038214158061081a575b6107e35750506067547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107b75760010160675580f35b5060116024927f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b6108168491519283927fe6ace38e0000000000000000000000000000000000000000000000000000000084528301610aed565b0390fd5b50600282141561077e565b6024836021867f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b5050346101c057816003193601126101c0576020906066549051908152f35b9190503461058d578360031936011261058d578282019082821067ffffffffffffffff83111761092d57508252601381526020907f53696d706c6551756f72756d56616e696c6c61000000000000000000000000008282015282519382859384528251928382860152825b84811061091757505050828201840152601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168101030190f35b81810183015188820188015287955082016108db565b8460416024927f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361097c57565b600080fd5b610100919060031901821361097c5760405191820182811067ffffffffffffffff821117610a3d576040528173ffffffffffffffffffffffffffffffffffffffff600435818116810361097c57825263ffffffff90602435828116810361097c576020840152604435908116810361097c576040830152606435818116810361097c576060830152608435908116810361097c57608082015260a435600381101561097c5760a082015260c43560c082015260e060e435910152565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b81601f8201121561097c5780359067ffffffffffffffff92838311610a3d57604051937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f81601f870116011685019085821090821117610a3d576040528284526020838301011161097c57816000926020809301838601378301015290565b919060208301926007821015610b005752565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff603354163303610b5057565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6033549073ffffffffffffffffffffffffffffffffffffffff80911691827fffffffffffffffffffffffff0000000000000000000000000000000000000000821617603355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b919092606654908401808511610cd45710159283610cca575b505060a0810180516003811015610b0057600203610c5457505050600690565b516003811015610b0057600103610c6c575050600490565b63ffffffff90816020820151164310600014610c8a57505050600090565b60608101518216431015610ca057505050600190565b6080015116431015610cbb5715610cb657600290565b600190565b15610cc557600390565b600590565b1191503880610c34565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b15610d0a57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152fdfea164736f6c6343000812000a",
    "sourceMap": "240:1127:78:-:0;;;;;;-1:-1:-1;;;;;240:1127:78;;;;;;;;;-1:-1:-1;;240:1127:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;240:1127:78;;;;;;;;;;;;;;;;;409:27;;;240:1127;;;;;;;;;409:27;;;240:1127;;;;;;;;;;;;;;;;-1:-1:-1;240:1127:78;;;;;;;;3290:14:21;3336:34;;;;;;-1:-1:-1;3335:108:21;;;;-1:-1:-1;240:1127:78;;;-1:-1:-1;;;240:1127:78;;;;;;;;;;3551:65:21;;-1:-1:-1;240:1127:78;;;555:42;;240:1127;;;;;;;;;;;;;;;;5355:69:21;240:1127:78;;;;;;5355:69:21;;;:::i;:::-;;:::i;:::-;1195:12:17;929:10:24;1195:12:17;:::i;:::-;929:10:24;240:1127:78;1513:6:17;240:1127:78;;1662:23:17;240:1127:78;;2409:22:17;;240:1127:78;;2503:8:17;;;:::i;:::-;240:1127:78;;;5355:69:21;240:1127:78;;;;;5355:69:21;:::i;:::-;738:16:77;240:1127:78;3636:99:21;;-1:-1:-1;240:1127:78;;;;;;;;;3636:99:21;3710:14;240:1127:78;;;;;;;;;;;3710:14:21;3636:99;;;;;240:1127:78;;;-1:-1:-1;;;240:1127:78;;;;;;;;;;;;;;;;;;-1:-1:-1;;;240:1127:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3551:65:21;-1:-1:-1;;240:1127:78;;;;;3551:65:21;;;240:1127:78;;;-1:-1:-1;;;240:1127:78;;;;;;;;;;;;;;;;;;;;;;;;;3335:108:21;3415:4;;1476:19:23;:23;3376:66:21;;3335:108;3376:66;240:1127:78;;;;;3425:17:21;3335:108;;3336:34;240:1127:78;;;;;3354:16:21;3336:34;;240:1127:78;;;;;;;;;;;;;-1:-1:-1;240:1127:78;;;;;;:::o;:::-;;;-1:-1:-1;;;240:1127:78;;;;;;;;;;;;;;;;;-1:-1:-1;;;240:1127:78;;;;;;;2673:187:17;2765:6;240:1127:78;;-1:-1:-1;;;;;240:1127:78;;;-1:-1:-1;;;;;;240:1127:78;;;;;;;;;;2813:40:17;-1:-1:-1;;2813:40:17;2673:187::o",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604081815260048036101561001557600080fd5b600092833560e01c9081630eb9b15a14610870575080631703a018146108515780632b06df53146107125780636efd971c146106ce578063715018a61461064b5780638da5cb5b146106165780639e33d81114610591578063a4f9edbf146102ce578063c1ba4e5914610281578063d92d4ea0146101c4578063ea8f8c4b146101795763f2fde38b146100a757600080fd5b34610175576020600319360112610175576100c0610959565b916100c9610b2f565b73ffffffffffffffffffffffffffffffffffffffff8316156100f257836100ef84610bae565b80f35b90602060849251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b8280fd5b5050346101c0576101606003193601126101c0576101bc906101b161019d36610981565b610144359061012435906101043590610c1b565b905191829182610aed565b0390f35b5080fd5b5090346101755760206003193601126101755773ffffffffffffffffffffffffffffffffffffffff6101f4610959565b6101fc610b2f565b16918215801561026d575b6102465750816020917fc3dc08a46232e8d0a95510120799f1e68e0aa28c88730b8b0127d5ff4565b4b09385526065835260018186205551908152a180f35b90517fc3b48cf1000000000000000000000000000000000000000000000000000000008152fd5b508284526065602052818420541515610207565b5034610175576020600319360112610175577ff18f88786aae85a652aadb99a82462616489a33370c9bcc7b245906812ef7cd19160209135906102c2610b2f565b8160665551908152a180f35b503461017557602060031936011261017557803567ffffffffffffffff811161058d576102fe9036908301610a6c565b83549060ff8260081c161591828093610580575b8015610569575b156104e6578260017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0083161787556104b8575b5083818051810103126104b45760208101519073ffffffffffffffffffffffffffffffffffffffff82168092036104b0578401519261039a60ff875460081c1661039581610d03565b610d03565b6103a333610bae565b6103ab610b2f565b811561042d57506103bb90610bae565b8354916103cd60ff8460081c16610d03565b6066556103d8578280f35b7f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff6020921684555160018152a138808280f35b60849060208651917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b8580fd5b8480fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000166101011785553861034c565b60848460208751917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152fd5b50303b1580156103195750600160ff821614610319565b50600160ff821610610312565b8380fd5b5090346101755760206003193601126101755773ffffffffffffffffffffffffffffffffffffffff6105c1610959565b6105c9610b2f565b1691828452606560205281842054156102465750816020917f665604bfe8ee87044ba1f1fd2fb47fe92983c9e187acbb442debf97d3e58192193855260658352848181205551908152a180f35b5050346101c057816003193601126101c05760209073ffffffffffffffffffffffffffffffffffffffff603354169051908152f35b83346106cb57806003193601126106cb57610664610b2f565b8073ffffffffffffffffffffffffffffffffffffffff6033547fffffffffffffffffffffffff00000000000000000000000000000000000000008116603355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b5050346101c05760206003193601126101c0578060209273ffffffffffffffffffffffffffffffffffffffff610702610959565b1681526065845220549051908152f35b509190346101c0576101806003193601126101c05761073036610981565b6101643567ffffffffffffffff811161058d57906107546107699236908701610a6c565b50610144359061012435906101043590610c1b565b9060078210156108255760038214158061081a575b6107e35750506067547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107b75760010160675580f35b5060116024927f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b6108168491519283927fe6ace38e0000000000000000000000000000000000000000000000000000000084528301610aed565b0390fd5b50600282141561077e565b6024836021867f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b5050346101c057816003193601126101c0576020906066549051908152f35b9190503461058d578360031936011261058d578282019082821067ffffffffffffffff83111761092d57508252601381526020907f53696d706c6551756f72756d56616e696c6c61000000000000000000000000008282015282519382859384528251928382860152825b84811061091757505050828201840152601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168101030190f35b81810183015188820188015287955082016108db565b8460416024927f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361097c57565b600080fd5b610100919060031901821361097c5760405191820182811067ffffffffffffffff821117610a3d576040528173ffffffffffffffffffffffffffffffffffffffff600435818116810361097c57825263ffffffff90602435828116810361097c576020840152604435908116810361097c576040830152606435818116810361097c576060830152608435908116810361097c57608082015260a435600381101561097c5760a082015260c43560c082015260e060e435910152565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b81601f8201121561097c5780359067ffffffffffffffff92838311610a3d57604051937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f81601f870116011685019085821090821117610a3d576040528284526020838301011161097c57816000926020809301838601378301015290565b919060208301926007821015610b005752565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff603354163303610b5057565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6033549073ffffffffffffffffffffffffffffffffffffffff80911691827fffffffffffffffffffffffff0000000000000000000000000000000000000000821617603355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b919092606654908401808511610cd45710159283610cca575b505060a0810180516003811015610b0057600203610c5457505050600690565b516003811015610b0057600103610c6c575050600490565b63ffffffff90816020820151164310600014610c8a57505050600090565b60608101518216431015610ca057505050600190565b6080015116431015610cbb5715610cb657600290565b600190565b15610cc557600390565b600590565b1191503880610c34565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b15610d0a57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152fdfea164736f6c6343000812000a",
    "sourceMap": "240:1127:78:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;240:1127:78;;;;;;;:::i;:::-;1303:62:17;;;:::i;:::-;240:1127:78;;;2409:22:17;240:1127:78;;2503:8:17;;;;:::i;:::-;240:1127:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;240:1127:78;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;240:1127:78;;;;;;;;:::i;:::-;1303:62:17;;:::i;:::-;240:1127:78;1235:19:110;;;:47;;;;240:1127:78;1231:74:110;;240:1127:78;;;;1350:19:110;240:1127:78;;;1315:6:110;240:1127:78;;319:1:103;240:1127:78;;;;;;;;1350:19:110;240:1127:78;;1231:74:110;240:1127:78;;1291:14:110;;;;1235:47;240:1127:78;;;;1259:6:110;240:1127:78;;;;;;1259:22:110;;1235:47;;240:1127:78;;;;;;-1:-1:-1;;240:1127:78;;;;;863:22:77;240:1127:78;;;;1303:62:17;;;:::i;:::-;240:1127:78;832:16:77;240:1127:78;;;;;863:22:77;240:1127:78;;;;;;;;-1:-1:-1;;240:1127:78;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;3290:14:21;3336:34;;;;;;240:1127:78;3335:108:21;;;;240:1127:78;;;;;3540:1:21;240:1127:78;;;;;;3551:65:21;;240:1127:78;;;;;;555:42;;240:1127;;;;;555:42;;240:1127;;;;;;;;;;;;;;5355:69:21;240:1127:78;;;;;;5355:69:21;;;:::i;:::-;;:::i;:::-;1195:12:17;929:10:24;1195:12:17;:::i;:::-;1303:62;;:::i;:::-;2409:22;;240:1127:78;;2503:8:17;;;;:::i;:::-;240:1127:78;;;5355:69:21;240:1127:78;;;;;5355:69:21;:::i;:::-;738:16:77;240:1127:78;3636:99:21;;240:1127:78;;;3636:99:21;3710:14;240:1127:78;;;;;;;;3540:1:21;240:1127:78;;3710:14:21;3636:99;;240:1127:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3551:65:21;240:1127:78;;;;;;3551:65:21;;;240:1127:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3335:108:21;3415:4;;1476:19:23;:23;3376:66:21;;3335:108;3376:66;240:1127:78;3441:1:21;240:1127:78;;;3425:17:21;3335:108;;3336:34;240:1127:78;3369:1:21;240:1127:78;;;3354:16:21;3336:34;;240:1127:78;;;;;;;;;;;-1:-1:-1;;240:1127:78;;;;;;;;:::i;:::-;1303:62:17;;:::i;:::-;240:1127:78;;;;;1528:6:110;240:1127:78;;;;;;1528:22:110;1524:49;;240:1127:78;;;;1619:20:110;240:1127:78;;;1528:6:110;240:1127:78;;;;;;;;;;;1619:20:110;240:1127:78;;;;;;;;;-1:-1:-1;;240:1127:78;;;;;;;;1513:6:17;240:1127:78;;;;;;;;;;;;;;-1:-1:-1;;240:1127:78;;;;;1303:62:17;;:::i;:::-;240:1127:78;;2765:6:17;240:1127:78;;;;2765:6:17;240:1127:78;;2813:40:17;;;;240:1127:78;;;;;;;;;;;;-1:-1:-1;;240:1127:78;;;;;;;;;;;:::i;:::-;;;;1882:6:110;240:1127:78;;;;;;;;;;;;;;;;;;-1:-1:-1;;240:1127:78;;;;;;;;:::i;:::-;;;;;;;;;;959:65;240:1127;;;;;;:::i;:::-;;;;;;;;;;959:65;;:::i;:::-;240:1127;;;;;;;1057:23;1039:41;;;1038:102;;;240:1127;1034:177;;240:1127;;1220:13;240:1127;;;;;;;;1220:13;240:1127;;;;;;;;;;;;;1034:177;1163:37;240:1127;;;1163:37;;;;;;;;;:::i;:::-;;;;1038:102;1086:53;1104:35;1086:53;;;1038:102;;240:1127;;;;;;;;;;;;;;;;;-1:-1:-1;;240:1127:78;;;;;;;533:21:77;240:1127:78;;;;;;;;;;;;;;;-1:-1:-1;;240:1127:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;240:1127:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;240:1127:78;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;240:1127:78;;-1:-1:-1;240:1127:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;240:1127:78;;;;;-1:-1:-1;240:1127:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;240:1127:78;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;240:1127:78;;;;;-1:-1:-1;240:1127:78;1599:130:17;240:1127:78;1513:6:17;240:1127:78;;929:10:24;1662:23:17;240:1127:78;;1599:130:17:o;240:1127:78:-;;;;;;;;;;;;;;;;;;;;;;;2673:187:17;2765:6;240:1127:78;;;;;;;;;;;;2765:6:17;240:1127:78;;2813:40:17;-1:-1:-1;2813:40:17;;2673:187::o;1596:1168:77:-;;;;1836:6;240:1127:78;;;;;;;;;2955:21:77;;1821:84;;;;1596:1168;1919:27;;;;;240:1127:78;;;;;;;;1950:28:77;1919:59;1950:28;;1994:31;;;2001:24;1994:31;:::o;1915:843::-;240:1127:78;;;;;;;;2046:58:77;240:1127:78;;2120:30:77;;2127:23;2120:30;:::o;2042:716::-;240:1127:78;2186:25:77;;;;;240:1127:78;;2171:12:77;:40;2167:591;240:1127:78;;;2227:33:77;;;-1:-1:-1;2227:33:77;:::o;2167:591::-;2296:26;;;240:1127:78;;;2171:12:77;2281:41;240:1127:78;;;2338:34:77;;;240:1127:78;2338:34:77;:::o;2277:481::-;2408:26;;240:1127:78;;2171:12:77;2393:41;240:1127:78;;;2450:162:77;;;1950:28;2482:42;:::o;2450:162::-;240:1127:78;2563:34:77;:::o;2389:369::-;2628:130;;;240:1127:78;2656:30:77;:::o;2628:130::-;2724:23;2717:30;:::o;1821:84::-;3097:25;;-1:-1:-1;1821:84:77;;;;240:1127:78;;-1:-1:-1;240:1127:78;;;;;-1:-1:-1;240:1127:78;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "disableSpace(address)": "9e33d811",
    "enableSpace(address)": "d92d4ea0",
    "execute((address,uint32,address,uint32,uint32,uint8,bytes32,uint256),uint256,uint256,uint256,bytes)": "2b06df53",
    "getProposalStatus((address,uint32,address,uint32,uint32,uint8,bytes32,uint256),uint256,uint256,uint256)": "ea8f8c4b",
    "getStrategyType()": "0eb9b15a",
    "isSpaceEnabled(address)": "6efd971c",
    "owner()": "8da5cb5b",
    "quorum()": "1703a018",
    "renounceOwnership()": "715018a6",
    "setQuorum(uint256)": "c1ba4e59",
    "setUp(bytes)": "a4f9edbf",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_quorum\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ExecutionFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"enum ProposalStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"name\":\"InvalidProposalStatus\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSpace\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newQuorum\",\"type\":\"uint256\"}],\"name\":\"QuorumUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"space\",\"type\":\"address\"}],\"name\":\"SpaceDisabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"space\",\"type\":\"address\"}],\"name\":\"SpaceEnabled\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"space\",\"type\":\"address\"}],\"name\":\"disableSpace\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"space\",\"type\":\"address\"}],\"name\":\"enableSpace\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"startBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"contract IExecutionStrategy\",\"name\":\"executionStrategy\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"minEndBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"maxEndBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"enum FinalizationStatus\",\"name\":\"finalizationStatus\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"executionPayloadHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"activeVotingStrategies\",\"type\":\"uint256\"}],\"internalType\":\"struct Proposal\",\"name\":\"proposal\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"votesFor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votesAgainst\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votesAbstain\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"startBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"contract IExecutionStrategy\",\"name\":\"executionStrategy\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"minEndBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"maxEndBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"enum FinalizationStatus\",\"name\":\"finalizationStatus\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"executionPayloadHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"activeVotingStrategies\",\"type\":\"uint256\"}],\"internalType\":\"struct Proposal\",\"name\":\"proposal\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"votesFor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votesAgainst\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votesAbstain\",\"type\":\"uint256\"}],\"name\":\"getProposalStatus\",\"outputs\":[{\"internalType\":\"enum ProposalStatus\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStrategyType\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"space\",\"type\":\"address\"}],\"name\":\"isSpaceEnabled\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quorum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_quorum\",\"type\":\"uint256\"}],\"name\":\"setQuorum\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"initParams\",\"type\":\"bytes\"}],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"InvalidProposalStatus(uint8)\":[{\"params\":{\"status\":\"The current status of the proposal.\"}}]},\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"disableSpace(address)\":{\"params\":{\"space\":\"Address of the space.\"}},\"enableSpace(address)\":{\"params\":{\"space\":\"Address of the space.\"}},\"getProposalStatus((address,uint32,address,uint32,uint32,uint8,bytes32,uint256),uint256,uint256,uint256)\":{\"params\":{\"proposal\":\"The proposal struct.\",\"votesAbstain\":\"The number of votes abstaining from the proposal.\",\"votesAgainst\":\"The number of votes against the proposal.\",\"votesFor\":\"The number of votes for the proposal.\"}},\"isSpaceEnabled(address)\":{\"params\":{\"space\":\"Address of the space.\"},\"returns\":{\"_0\":\"uint256 whether the space is enabled.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Vanilla Execution Strategy\",\"version\":1},\"userdoc\":{\"errors\":{\"ExecutionFailed()\":[{\"notice\":\"Thrown when the execution of a proposal fails.\"}],\"InvalidProposalStatus(uint8)\":[{\"notice\":\"Thrown when the current status of a proposal does not allow the desired action.\"}],\"InvalidSpace()\":[{\"notice\":\"Thrown if a space is not in the whitelist.\"}]},\"events\":{\"SpaceDisabled(address)\":{\"notice\":\"Emitted when a space is disabled.\"},\"SpaceEnabled(address)\":{\"notice\":\"Emitted when a space is enabled.\"}},\"kind\":\"user\",\"methods\":{\"disableSpace(address)\":{\"notice\":\"Disable a space.\"},\"enableSpace(address)\":{\"notice\":\"Enable a space.\"},\"getProposalStatus((address,uint32,address,uint32,uint32,uint8,bytes32,uint256),uint256,uint256,uint256)\":{\"notice\":\"Returns the status of a proposal that uses a simple quorum.        A proposal is accepted if the for votes exceeds the against votes        and a quorum of total votes (for + against + abstain) is reached.\"},\"isSpaceEnabled(address)\":{\"notice\":\"Check if a space is enabled.\"},\"quorum()\":{\"notice\":\"The quorum required to execute a proposal using this strategy.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/execution-strategies/VanillaExecutionStrategy.sol\":\"VanillaExecutionStrategy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[\":@gnosis.pm/safe-contracts/=lib/safe-contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@prb/test/=lib/prb-test/src/\",\":@zodiac/=lib/zodiac/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":prb-test/=lib/prb-test/src/\",\":safe-contracts/=lib/safe-contracts/contracts/\",\":zodiac/=lib/zodiac/contracts/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xe798cadb41e2da274913e4b3183a80f50fb057a42238fe8467e077268100ec27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://899f850f7df5a270bccfb765d70069959ca1c20d3a7381c1c3bda8a3ffee1935\",\"dweb:/ipfs/QmVdnAqwyX2L3nX2HDA5WKGtVBFyH1nKE9A1k7fZnPBkhP\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/safe-contracts/contracts/common/Enum.sol\":{\"keccak256\":\"0x473e45b1a5cc47be494b0e123c9127f0c11c1e0992a321ae5a644c0bfdb2c14f\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://948e6d5a8bd7377f7795b6e28584eab9be5c0a8db240bf5e606744a175238c3d\",\"dweb:/ipfs/QmQQaUmQfpuejV41jbxKSTgEBYYCcVTjCsDMgf2htgz6ej\"]},\"src/execution-strategies/SimpleQuorumExecutionStrategy.sol\":{\"keccak256\":\"0xcff20e2becd1d1b3e7ab571891250c13ce862b283bef137f80681c4e3785a3d4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6debb43dfb69f189f7ed7b9279997d6f936f1a503b174ab34c2afd474ea407a\",\"dweb:/ipfs/QmVEDuPboWDaeeivfCn1i3EwFupDUtsHDQbEfeUs2ni1zS\"]},\"src/execution-strategies/VanillaExecutionStrategy.sol\":{\"keccak256\":\"0x84fb320414d778fc4bcb4b5b778693dacc0cf9b5f3c9507023d58ffdeed3ee1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d011b75a10db78506e1849b4de51abae9cd42403bc42f0aebe68f984809c974\",\"dweb:/ipfs/QmS3RzBGdrQyVDDSitnUYUs8e76DRiZmz978Kq7sFL3dfn\"]},\"src/interfaces/IExecutionStrategy.sol\":{\"keccak256\":\"0x8caef430ce09dd42c4b90ff62b18090c12bcb2dcf19294e4316bd2cc2bfffef9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d20584f72310a2607990eb5c6f307e81c606d38b4a95b91d2f9427b068e51050\",\"dweb:/ipfs/QmZaDzFnBq7qXy45YmBbqcay7DQZo8xfvTLriMEKocesK8\"]},\"src/interfaces/execution-strategies/IExecutionStrategyErrors.sol\":{\"keccak256\":\"0x8a1c904a4f3573013dbe8b55e3322dc929c9d6e56dc4cfe7a8e7866834661430\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://358d063db15582f772bd49400a90b5087fa6768068581494f87a5ba1eb9ef20a\",\"dweb:/ipfs/QmSovbYrxxMXvyhWTfAuZYcUDhJ1VRZca4XjiE1e8vv9Yb\"]},\"src/types.sol\":{\"keccak256\":\"0xcdc5465d75fd7bdbde15892a0ef01f16fb8ab48907e4183acb860af91c93fee4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc76c16a6ecc59eb6dc5c53d032d691f8bc08b417d41ef87960a54713bbd2e7f\",\"dweb:/ipfs/QmZbvxxmZEyus5hX5ThYD6qDuaTjpWR8FLZLGTEDKKBDsb\"]},\"src/utils/SpaceManager.sol\":{\"keccak256\":\"0x49b571f018ca9b35a5714ca4cf78c59aab4d1cedfe25748ca71156fa76318a4c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3709747d17e7cf86261a1b1174d0ee6e485b3dfeaceb1de6d958c7f1307ac61b\",\"dweb:/ipfs/QmdfwyDix3o3ebPqnwbVJb8pEVcZknDAaaAEUxQoe4N7W3\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.18+commit.87f61d96"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_quorum",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ExecutionFailed"
        },
        {
          "inputs": [
            {
              "internalType": "enum ProposalStatus",
              "name": "status",
              "type": "uint8"
            }
          ],
          "type": "error",
          "name": "InvalidProposalStatus"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidSpace"
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newQuorum",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "QuorumUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "space",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SpaceDisabled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "space",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SpaceEnabled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "space",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "disableSpace"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "space",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "enableSpace"
        },
        {
          "inputs": [
            {
              "internalType": "struct Proposal",
              "name": "proposal",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "author",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "startBlockNumber",
                  "type": "uint32"
                },
                {
                  "internalType": "contract IExecutionStrategy",
                  "name": "executionStrategy",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "minEndBlockNumber",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "maxEndBlockNumber",
                  "type": "uint32"
                },
                {
                  "internalType": "enum FinalizationStatus",
                  "name": "finalizationStatus",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "executionPayloadHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "activeVotingStrategies",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "votesFor",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "votesAgainst",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "votesAbstain",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "payload",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "execute"
        },
        {
          "inputs": [
            {
              "internalType": "struct Proposal",
              "name": "proposal",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "author",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "startBlockNumber",
                  "type": "uint32"
                },
                {
                  "internalType": "contract IExecutionStrategy",
                  "name": "executionStrategy",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "minEndBlockNumber",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "maxEndBlockNumber",
                  "type": "uint32"
                },
                {
                  "internalType": "enum FinalizationStatus",
                  "name": "finalizationStatus",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "executionPayloadHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "activeVotingStrategies",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "votesFor",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "votesAgainst",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "votesAbstain",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getProposalStatus",
          "outputs": [
            {
              "internalType": "enum ProposalStatus",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "getStrategyType",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "space",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isSpaceEnabled",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "quorum",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_quorum",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setQuorum"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "initParams",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "disableSpace(address)": {
            "params": {
              "space": "Address of the space."
            }
          },
          "enableSpace(address)": {
            "params": {
              "space": "Address of the space."
            }
          },
          "getProposalStatus((address,uint32,address,uint32,uint32,uint8,bytes32,uint256),uint256,uint256,uint256)": {
            "params": {
              "proposal": "The proposal struct.",
              "votesAbstain": "The number of votes abstaining from the proposal.",
              "votesAgainst": "The number of votes against the proposal.",
              "votesFor": "The number of votes for the proposal."
            }
          },
          "isSpaceEnabled(address)": {
            "params": {
              "space": "Address of the space."
            },
            "returns": {
              "_0": "uint256 whether the space is enabled."
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "disableSpace(address)": {
            "notice": "Disable a space."
          },
          "enableSpace(address)": {
            "notice": "Enable a space."
          },
          "getProposalStatus((address,uint32,address,uint32,uint32,uint8,bytes32,uint256),uint256,uint256,uint256)": {
            "notice": "Returns the status of a proposal that uses a simple quorum.        A proposal is accepted if the for votes exceeds the against votes        and a quorum of total votes (for + against + abstain) is reached."
          },
          "isSpaceEnabled(address)": {
            "notice": "Check if a space is enabled."
          },
          "quorum()": {
            "notice": "The quorum required to execute a proposal using this strategy."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@gnosis.pm/safe-contracts/=lib/safe-contracts/",
        ":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        ":@prb/test/=lib/prb-test/src/",
        ":@zodiac/=lib/zodiac/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-gas-snapshot/=lib/forge-gas-snapshot/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":prb-test/=lib/prb-test/src/",
        ":safe-contracts/=lib/safe-contracts/contracts/",
        ":zodiac/=lib/zodiac/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 10000
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "src/execution-strategies/VanillaExecutionStrategy.sol": "VanillaExecutionStrategy"
      },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888",
        "urls": [
          "bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a",
          "dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0xe798cadb41e2da274913e4b3183a80f50fb057a42238fe8467e077268100ec27",
        "urls": [
          "bzz-raw://899f850f7df5a270bccfb765d70069959ca1c20d3a7381c1c3bda8a3ffee1935",
          "dweb:/ipfs/QmVdnAqwyX2L3nX2HDA5WKGtVBFyH1nKE9A1k7fZnPBkhP"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183",
        "urls": [
          "bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06",
          "dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/safe-contracts/contracts/common/Enum.sol": {
        "keccak256": "0x473e45b1a5cc47be494b0e123c9127f0c11c1e0992a321ae5a644c0bfdb2c14f",
        "urls": [
          "bzz-raw://948e6d5a8bd7377f7795b6e28584eab9be5c0a8db240bf5e606744a175238c3d",
          "dweb:/ipfs/QmQQaUmQfpuejV41jbxKSTgEBYYCcVTjCsDMgf2htgz6ej"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/execution-strategies/SimpleQuorumExecutionStrategy.sol": {
        "keccak256": "0xcff20e2becd1d1b3e7ab571891250c13ce862b283bef137f80681c4e3785a3d4",
        "urls": [
          "bzz-raw://a6debb43dfb69f189f7ed7b9279997d6f936f1a503b174ab34c2afd474ea407a",
          "dweb:/ipfs/QmVEDuPboWDaeeivfCn1i3EwFupDUtsHDQbEfeUs2ni1zS"
        ],
        "license": "MIT"
      },
      "src/execution-strategies/VanillaExecutionStrategy.sol": {
        "keccak256": "0x84fb320414d778fc4bcb4b5b778693dacc0cf9b5f3c9507023d58ffdeed3ee1f",
        "urls": [
          "bzz-raw://7d011b75a10db78506e1849b4de51abae9cd42403bc42f0aebe68f984809c974",
          "dweb:/ipfs/QmS3RzBGdrQyVDDSitnUYUs8e76DRiZmz978Kq7sFL3dfn"
        ],
        "license": "MIT"
      },
      "src/interfaces/IExecutionStrategy.sol": {
        "keccak256": "0x8caef430ce09dd42c4b90ff62b18090c12bcb2dcf19294e4316bd2cc2bfffef9",
        "urls": [
          "bzz-raw://d20584f72310a2607990eb5c6f307e81c606d38b4a95b91d2f9427b068e51050",
          "dweb:/ipfs/QmZaDzFnBq7qXy45YmBbqcay7DQZo8xfvTLriMEKocesK8"
        ],
        "license": "MIT"
      },
      "src/interfaces/execution-strategies/IExecutionStrategyErrors.sol": {
        "keccak256": "0x8a1c904a4f3573013dbe8b55e3322dc929c9d6e56dc4cfe7a8e7866834661430",
        "urls": [
          "bzz-raw://358d063db15582f772bd49400a90b5087fa6768068581494f87a5ba1eb9ef20a",
          "dweb:/ipfs/QmSovbYrxxMXvyhWTfAuZYcUDhJ1VRZca4XjiE1e8vv9Yb"
        ],
        "license": "MIT"
      },
      "src/types.sol": {
        "keccak256": "0xcdc5465d75fd7bdbde15892a0ef01f16fb8ab48907e4183acb860af91c93fee4",
        "urls": [
          "bzz-raw://bc76c16a6ecc59eb6dc5c53d032d691f8bc08b417d41ef87960a54713bbd2e7f",
          "dweb:/ipfs/QmZbvxxmZEyus5hX5ThYD6qDuaTjpWR8FLZLGTEDKKBDsb"
        ],
        "license": "MIT"
      },
      "src/utils/SpaceManager.sol": {
        "keccak256": "0x49b571f018ca9b35a5714ca4cf78c59aab4d1cedfe25748ca71156fa76318a4c",
        "urls": [
          "bzz-raw://3709747d17e7cf86261a1b1174d0ee6e485b3dfeaceb1de6d958c7f1307ac61b",
          "dweb:/ipfs/QmdfwyDix3o3ebPqnwbVJb8pEVcZknDAaaAEUxQoe4N7W3"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/execution-strategies/VanillaExecutionStrategy.sol",
    "id": 39014,
    "exportedSymbols": {
      "Proposal": [42411],
      "ProposalStatus": [42433],
      "SimpleQuorumExecutionStrategy": [38896],
      "VanillaExecutionStrategy": [39013]
    },
    "nodeType": "SourceUnit",
    "src": "33:1335:78",
    "nodes": [
      {
        "id": 38898,
        "nodeType": "PragmaDirective",
        "src": "33:24:78",
        "nodes": [],
        "literals": ["solidity", "^", "0.8", ".18"]
      },
      {
        "id": 38900,
        "nodeType": "ImportDirective",
        "src": "59:84:78",
        "nodes": [],
        "absolutePath": "src/execution-strategies/SimpleQuorumExecutionStrategy.sol",
        "file": "./SimpleQuorumExecutionStrategy.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 39014,
        "sourceUnit": 38897,
        "symbolAliases": [
          {
            "foreign": {
              "id": 38899,
              "name": "SimpleQuorumExecutionStrategy",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 38896,
              "src": "68:29:78",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 38903,
        "nodeType": "ImportDirective",
        "src": "144:56:78",
        "nodes": [],
        "absolutePath": "src/types.sol",
        "file": "../types.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 39014,
        "sourceUnit": 42510,
        "symbolAliases": [
          {
            "foreign": {
              "id": 38901,
              "name": "Proposal",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 42411,
              "src": "153:8:78",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 38902,
              "name": "ProposalStatus",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 42433,
              "src": "163:14:78",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 39013,
        "nodeType": "ContractDefinition",
        "src": "240:1127:78",
        "nodes": [
          {
            "id": 38908,
            "nodeType": "VariableDeclaration",
            "src": "313:28:78",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "numExecuted",
            "nameLocation": "330:11:78",
            "scope": 39013,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 38907,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "313:7:78",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 38924,
            "nodeType": "FunctionDefinition",
            "src": "348:96:78",
            "nodes": [],
            "body": {
              "id": 38923,
              "nodeType": "Block",
              "src": "393:51:78",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 38918,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38910,
                            "src": "420:6:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 38919,
                            "name": "_quorum",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38912,
                            "src": "428:7:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 38916,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "409:3:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 38917,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "413:6:78",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "409:10:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 38920,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "409:27:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 38915,
                      "name": "setUp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38957,
                      "src": "403:5:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory)"
                      }
                    },
                    "id": 38921,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "403:34:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38922,
                  "nodeType": "ExpressionStatement",
                  "src": "403:34:78"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 38913,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38910,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "368:6:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 38924,
                  "src": "360:14:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38909,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "360:7:78",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38912,
                  "mutability": "mutable",
                  "name": "_quorum",
                  "nameLocation": "384:7:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 38924,
                  "src": "376:15:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38911,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "376:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "359:33:78"
            },
            "returnParameters": {
              "id": 38914,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "393:0:78"
            },
            "scope": 39013,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 38957,
            "nodeType": "FunctionDefinition",
            "src": "450:270:78",
            "nodes": [],
            "body": {
              "id": 38956,
              "nodeType": "Block",
              "src": "509:211:78",
              "nodes": [],
              "statements": [
                {
                  "assignments": [38932, 38934],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 38932,
                      "mutability": "mutable",
                      "name": "_owner",
                      "nameLocation": "528:6:78",
                      "nodeType": "VariableDeclaration",
                      "scope": 38956,
                      "src": "520:14:78",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 38931,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "520:7:78",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 38934,
                      "mutability": "mutable",
                      "name": "_quorum",
                      "nameLocation": "544:7:78",
                      "nodeType": "VariableDeclaration",
                      "scope": 38956,
                      "src": "536:15:78",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 38933,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "536:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 38944,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 38937,
                        "name": "initParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38926,
                        "src": "566:10:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 38939,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "579:7:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 38938,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "579:7:78",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 38941,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "588:7:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 38940,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "588:7:78",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 38942,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "578:18:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_uint256_$_$",
                          "typeString": "tuple(type(address),type(uint256))"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_uint256_$_$",
                          "typeString": "tuple(type(address),type(uint256))"
                        }
                      ],
                      "expression": {
                        "id": 38935,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "555:3:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 38936,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "559:6:78",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "555:10:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 38943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "555:42:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_payable_$_t_uint256_$",
                      "typeString": "tuple(address payable,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "519:78:78"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 38945,
                      "name": "__Ownable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25109,
                      "src": "607:14:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 38946,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "607:16:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38947,
                  "nodeType": "ExpressionStatement",
                  "src": "607:16:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 38949,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38932,
                        "src": "651:6:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 38948,
                      "name": "transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25188,
                      "src": "633:17:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 38950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "633:25:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38951,
                  "nodeType": "ExpressionStatement",
                  "src": "633:25:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 38953,
                        "name": "_quorum",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38934,
                        "src": "705:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 38952,
                      "name": "__SimpleQuorumExecutionStrategy_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38724,
                      "src": "668:36:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 38954,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "668:45:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38955,
                  "nodeType": "ExpressionStatement",
                  "src": "668:45:78"
                }
              ]
            },
            "functionSelector": "a4f9edbf",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 38929,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 38928,
                  "name": "initializer",
                  "nameLocations": ["497:11:78"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 25674,
                  "src": "497:11:78"
                },
                "nodeType": "ModifierInvocation",
                "src": "497:11:78"
              }
            ],
            "name": "setUp",
            "nameLocation": "459:5:78",
            "parameters": {
              "id": 38927,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38926,
                  "mutability": "mutable",
                  "name": "initParams",
                  "nameLocation": "478:10:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 38957,
                  "src": "465:23:78",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 38925,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "465:5:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "464:25:78"
            },
            "returnParameters": {
              "id": 38930,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "509:0:78"
            },
            "scope": 39013,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 39003,
            "nodeType": "FunctionDefinition",
            "src": "726:514:78",
            "nodes": [],
            "body": {
              "id": 39002,
              "nodeType": "Block",
              "src": "917:323:78",
              "nodes": [],
              "statements": [
                {
                  "assignments": [38974],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 38974,
                      "mutability": "mutable",
                      "name": "proposalStatus",
                      "nameLocation": "942:14:78",
                      "nodeType": "VariableDeclaration",
                      "scope": 39002,
                      "src": "927:29:78",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProposalStatus_$42433",
                        "typeString": "enum ProposalStatus"
                      },
                      "typeName": {
                        "id": 38973,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 38972,
                          "name": "ProposalStatus",
                          "nameLocations": ["927:14:78"],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 42433,
                          "src": "927:14:78"
                        },
                        "referencedDeclaration": 42433,
                        "src": "927:14:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ProposalStatus_$42433",
                          "typeString": "enum ProposalStatus"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 38981,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 38976,
                        "name": "proposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38960,
                        "src": "977:8:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$42411_memory_ptr",
                          "typeString": "struct Proposal memory"
                        }
                      },
                      {
                        "id": 38977,
                        "name": "votesFor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38962,
                        "src": "987:8:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 38978,
                        "name": "votesAgainst",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38964,
                        "src": "997:12:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 38979,
                        "name": "votesAbstain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38966,
                        "src": "1011:12:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Proposal_$42411_memory_ptr",
                          "typeString": "struct Proposal memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 38975,
                      "name": "getProposalStatus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38853,
                      "src": "959:17:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Proposal_$42411_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_enum$_ProposalStatus_$42433_$",
                        "typeString": "function (struct Proposal memory,uint256,uint256,uint256) view returns (enum ProposalStatus)"
                      }
                    },
                    "id": 38980,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "959:65:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProposalStatus_$42433",
                      "typeString": "enum ProposalStatus"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "927:97:78"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 38992,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_enum$_ProposalStatus_$42433",
                            "typeString": "enum ProposalStatus"
                          },
                          "id": 38985,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 38982,
                            "name": "proposalStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38974,
                            "src": "1039:14:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ProposalStatus_$42433",
                              "typeString": "enum ProposalStatus"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "expression": {
                              "id": 38983,
                              "name": "ProposalStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42433,
                              "src": "1057:14:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_ProposalStatus_$42433_$",
                                "typeString": "type(enum ProposalStatus)"
                              }
                            },
                            "id": 38984,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "1072:8:78",
                            "memberName": "Accepted",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 42429,
                            "src": "1057:23:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ProposalStatus_$42433",
                              "typeString": "enum ProposalStatus"
                            }
                          },
                          "src": "1039:41:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 38986,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1038:43:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_enum$_ProposalStatus_$42433",
                            "typeString": "enum ProposalStatus"
                          },
                          "id": 38990,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 38987,
                            "name": "proposalStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38974,
                            "src": "1086:14:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ProposalStatus_$42433",
                              "typeString": "enum ProposalStatus"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "expression": {
                              "id": 38988,
                              "name": "ProposalStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42433,
                              "src": "1104:14:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_ProposalStatus_$42433_$",
                                "typeString": "type(enum ProposalStatus)"
                              }
                            },
                            "id": 38989,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "1119:20:78",
                            "memberName": "VotingPeriodAccepted",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 42428,
                            "src": "1104:35:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ProposalStatus_$42433",
                              "typeString": "enum ProposalStatus"
                            }
                          },
                          "src": "1086:53:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 38991,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1085:55:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1038:102:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 38998,
                  "nodeType": "IfStatement",
                  "src": "1034:177:78",
                  "trueBody": {
                    "id": 38997,
                    "nodeType": "Block",
                    "src": "1142:69:78",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 38994,
                              "name": "proposalStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 38974,
                              "src": "1185:14:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ProposalStatus_$42433",
                                "typeString": "enum ProposalStatus"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_ProposalStatus_$42433",
                                "typeString": "enum ProposalStatus"
                              }
                            ],
                            "id": 38993,
                            "name": "InvalidProposalStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41715,
                            "src": "1163:21:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_enum$_ProposalStatus_$42433_$returns$__$",
                              "typeString": "function (enum ProposalStatus) pure"
                            }
                          },
                          "id": 38995,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1163:37:78",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 38996,
                        "nodeType": "RevertStatement",
                        "src": "1156:44:78"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 39000,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1220:13:78",
                    "subExpression": {
                      "id": 38999,
                      "name": "numExecuted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38908,
                      "src": "1220:11:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 39001,
                  "nodeType": "ExpressionStatement",
                  "src": "1220:13:78"
                }
              ]
            },
            "baseFunctions": [38755],
            "functionSelector": "2b06df53",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "execute",
            "nameLocation": "735:7:78",
            "overrides": {
              "id": 38970,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "908:8:78"
            },
            "parameters": {
              "id": 38969,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38960,
                  "mutability": "mutable",
                  "name": "proposal",
                  "nameLocation": "768:8:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 39003,
                  "src": "752:24:78",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Proposal_$42411_memory_ptr",
                    "typeString": "struct Proposal"
                  },
                  "typeName": {
                    "id": 38959,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 38958,
                      "name": "Proposal",
                      "nameLocations": ["752:8:78"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 42411,
                      "src": "752:8:78"
                    },
                    "referencedDeclaration": 42411,
                    "src": "752:8:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proposal_$42411_storage_ptr",
                      "typeString": "struct Proposal"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38962,
                  "mutability": "mutable",
                  "name": "votesFor",
                  "nameLocation": "794:8:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 39003,
                  "src": "786:16:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38961,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "786:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38964,
                  "mutability": "mutable",
                  "name": "votesAgainst",
                  "nameLocation": "820:12:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 39003,
                  "src": "812:20:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38963,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "812:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38966,
                  "mutability": "mutable",
                  "name": "votesAbstain",
                  "nameLocation": "850:12:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 39003,
                  "src": "842:20:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38965,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "842:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38968,
                  "mutability": "mutable",
                  "name": "payload",
                  "nameLocation": "885:7:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 39003,
                  "src": "872:20:78",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 38967,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "872:5:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "742:156:78"
            },
            "returnParameters": {
              "id": 38971,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "917:0:78"
            },
            "scope": 39013,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 39012,
            "nodeType": "FunctionDefinition",
            "src": "1246:119:78",
            "nodes": [],
            "body": {
              "id": 39011,
              "nodeType": "Block",
              "src": "1320:45:78",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "hexValue": "53696d706c6551756f72756d56616e696c6c61",
                    "id": 39009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1337:21:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_9285ab5787abb09a519b6daf114f8552dfd21196bf817acc82bb5b376cc48115",
                      "typeString": "literal_string \"SimpleQuorumVanilla\""
                    },
                    "value": "SimpleQuorumVanilla"
                  },
                  "functionReturnParameters": 39008,
                  "id": 39010,
                  "nodeType": "Return",
                  "src": "1330:28:78"
                }
              ]
            },
            "baseFunctions": [38895],
            "functionSelector": "0eb9b15a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStrategyType",
            "nameLocation": "1255:15:78",
            "overrides": {
              "id": 39005,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1287:8:78"
            },
            "parameters": {
              "id": 39004,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1270:2:78"
            },
            "returnParameters": {
              "id": 39008,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39007,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 39012,
                  "src": "1305:13:78",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 39006,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1305:6:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1304:15:78"
            },
            "scope": 39013,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 38905,
              "name": "SimpleQuorumExecutionStrategy",
              "nameLocations": ["277:29:78"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 38896,
              "src": "277:29:78"
            },
            "id": 38906,
            "nodeType": "InheritanceSpecifier",
            "src": "277:29:78"
          }
        ],
        "canonicalName": "VanillaExecutionStrategy",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 38904,
          "nodeType": "StructuredDocumentation",
          "src": "202:38:78",
          "text": "@title Vanilla Execution Strategy"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [39013, 38896, 43568, 25214, 26234, 25772, 41616, 41719],
        "name": "VanillaExecutionStrategy",
        "nameLocation": "249:24:78",
        "scope": 39014,
        "usedErrors": [41715, 41718, 43431]
      }
    ],
    "license": "MIT"
  },
  "id": 78
}
