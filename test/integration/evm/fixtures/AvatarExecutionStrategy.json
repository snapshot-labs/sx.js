{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "_spaces",
          "type": "address[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "ExecutionFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidPayload",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "enum ProposalStatus",
          "name": "status",
          "type": "uint8"
        }
      ],
      "name": "InvalidProposalStatus",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidSpace",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransactionsFailed",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_target",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "_spaces",
          "type": "address[]"
        }
      ],
      "name": "AvatarExecutionStrategySetUp",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "space",
          "type": "address"
        }
      ],
      "name": "SpaceDisabled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "space",
          "type": "address"
        }
      ],
      "name": "SpaceEnabled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newTarget",
          "type": "address"
        }
      ],
      "name": "TargetSet",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "space",
          "type": "address"
        }
      ],
      "name": "disableSpace",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "space",
          "type": "address"
        }
      ],
      "name": "enableSpace",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "snapshotTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "startTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "minEndTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "maxEndTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "bytes32",
              "name": "executionPayloadHash",
              "type": "bytes32"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "addy",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "params",
                  "type": "bytes"
                }
              ],
              "internalType": "struct Strategy",
              "name": "executionStrategy",
              "type": "tuple"
            },
            {
              "internalType": "address",
              "name": "author",
              "type": "address"
            },
            {
              "internalType": "enum FinalizationStatus",
              "name": "finalizationStatus",
              "type": "uint8"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "addy",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "params",
                  "type": "bytes"
                }
              ],
              "internalType": "struct Strategy[]",
              "name": "votingStrategies",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct Proposal",
          "name": "proposal",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "votesFor",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "votesAgainst",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "votesAbstain",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "payload",
          "type": "bytes"
        }
      ],
      "name": "execute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "snapshotTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "startTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "minEndTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "maxEndTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "bytes32",
              "name": "executionPayloadHash",
              "type": "bytes32"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "addy",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "params",
                  "type": "bytes"
                }
              ],
              "internalType": "struct Strategy",
              "name": "executionStrategy",
              "type": "tuple"
            },
            {
              "internalType": "address",
              "name": "author",
              "type": "address"
            },
            {
              "internalType": "enum FinalizationStatus",
              "name": "finalizationStatus",
              "type": "uint8"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "addy",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "params",
                  "type": "bytes"
                }
              ],
              "internalType": "struct Strategy[]",
              "name": "votingStrategies",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct Proposal",
          "name": "proposal",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "votesFor",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "votesAgainst",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "votesAbstain",
          "type": "uint256"
        }
      ],
      "name": "getProposalStatus",
      "outputs": [
        {
          "internalType": "enum ProposalStatus",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "snapshotTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "startTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "minEndTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "maxEndTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "bytes32",
              "name": "executionPayloadHash",
              "type": "bytes32"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "addy",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "params",
                  "type": "bytes"
                }
              ],
              "internalType": "struct Strategy",
              "name": "executionStrategy",
              "type": "tuple"
            },
            {
              "internalType": "address",
              "name": "author",
              "type": "address"
            },
            {
              "internalType": "enum FinalizationStatus",
              "name": "finalizationStatus",
              "type": "uint8"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "addy",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "params",
                  "type": "bytes"
                }
              ],
              "internalType": "struct Strategy[]",
              "name": "votingStrategies",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct Proposal",
          "name": "proposal",
          "type": "tuple"
        }
      ],
      "name": "getQuorum",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getStrategyType",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "space",
          "type": "address"
        }
      ],
      "name": "isSpaceEnabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        }
      ],
      "name": "setTarget",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "initParams",
          "type": "bytes"
        }
      ],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "target",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060409080825234620003e15762001cf98038038091620000228285620003e6565b8339810190606081830312620003e1576200003d8162000420565b906020916200004e83830162000420565b858301516001600160401b039591939091868311620003e1576200009c9262000078920162000435565b926200008d87519485928784019586620004ac565b03601f198101845283620003e6565b60009384549160ff92838160081c161593848095620003d4575b8015620003bc575b620000c99062000506565b60019560ff19928688858316178b55620003aa575b508051810193606082860312620003a657620000fa9062000420565b94620001088b830162000420565b946060830151918211620003a2576200012892908a019101890162000435565b9160018060a01b038080961694169462000153838b5460081c166200014d816200056a565b6200056a565b6200015e33620005cb565b33816033541603620003605784156200030d579087916200017f86620005cb565b8a54620001a5858260081c161580968197620002ff575b8115620002db575b5062000506565b8484848316178d55620002c9575b5090918a905b62000276575b5050507f621a036730af1cc915beba86ec9f773f11d2983a09e67fa9d62c6cebedf2364e9392916200020f9162000250575b606680546001600160a01b03191685179055895193849384620004ac565b0390a162000227575b83516116c49081620006158239f35b60008051602062001cd98339815191529261ff001981541690558351908152a138808062000218565b61ff0019895416895560008051602062001cd9833981519152888b51898152a1620001f1565b8451811015620002c357818a8260051b87010151168b5260658a528b8b2089848254161790556000198114620002af57880188620001b9565b634e487b7160e01b8b52601160045260248bfd5b620001bf565b61ffff1916610101178b5538620001b3565b905085303b159182620002f2575b5050386200019e565b84161490508538620002e9565b905085818416109062000196565b8a5162461bcd60e51b8152600481018a9052602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b6064898c519062461bcd60e51b825280600483015260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b8a80fd5b8980fd5b61ffff191661010117895538620000de565b50303b158015620000be5750818116600114620000be565b50600181831610620000b6565b600080fd5b601f909101601f19168101906001600160401b038211908210176200040a57604052565b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b0382168203620003e157565b9080601f83011215620003e1578151906001600160401b0382116200040a578160051b604051936020936200046d85840187620003e6565b85528380860192820101928311620003e1578301905b82821062000492575050505090565b838091620004a08462000420565b81520191019062000483565b916060830190608060018060a01b0394858095168152602094859316838201526060604082015286518094520194019160005b828110620004ef57505050505090565b8351851686529481019492810192600101620004df565b156200050e57565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b156200057257565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b603380546001600160a01b039283166001600160a01b0319821681179092559091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a356fe608060405260048036101561001357600080fd5b60003560e01c80630b26b02914610f1d5780630eb9b15a14610e7957806353a1394e14610e255780636efd971c14610dd9578063715018a614610d59578063776d1a0114610cd15780638601320b146108015780638da5cb5b146107cd5780639e33d8111461071d578063a4f9edbf1461029b578063d4b8399214610267578063d92d4ea01461017e5763f2fde38b146100ac57600080fd5b34610179576020600319360112610179576100c5610ff2565b906100ce61130e565b73ffffffffffffffffffffffffffffffffffffffff8216156100f5576100f38261138d565b005b6084906020604051917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b600080fd5b50346101795760206003193601126101795773ffffffffffffffffffffffffffffffffffffffff6101ad610ff2565b6101b561130e565b16908115801561024f575b610227577fc3dc08a46232e8d0a95510120799f1e68e0aa28c88730b8b0127d5ff4565b4b06020838060005260658252604060002060017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00825416179055604051908152a1005b6040517fc3b48cf1000000000000000000000000000000000000000000000000000000008152fd5b5081600052606560205260ff604060002054166101c0565b3461017957600060031936011261017957602073ffffffffffffffffffffffffffffffffffffffff60665416604051908152f35b5034610179576020806003193601126101795767ffffffffffffffff908235828111610179576102ce9036908501611070565b916000549360ff808660081c161592838094610711575b80156106fb575b6102f5906113fa565b6001967fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00908589838316176000556106cc575b50865187019260608888860195031261017957610346878901611485565b9261035360408a01611485565b98606081015191821161017957019184603f8401121561017957878301519461037b8661110e565b936103896040519586610f71565b868552898501906040829860051b8201019283116101795760408b9101915b8383106106b4575050505073ffffffffffffffffffffffffffffffffffffffff808095169916956103e88360005460081c166103e3816114a6565b6114a6565b6103f13361138d565b6103f961130e565b89156106315750899061040b8a61138d565b60005461042e848260081c161580958196610624575b8115610603575b506113fa565b8383838316176000556105d4575b506000825b610596575b505050610540575b837fffffffffffffffffffffffff0000000000000000000000000000000000000000606698949854161760665560405193606085019385528685015260606040850152518092526080830195906000905b888483106105285787877f621a036730af1cc915beba86ec9f773f11d2983a09e67fa9d62c6cebedf2364e888c0389a16104d557005b7f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff60005416600055604051908152a1005b8351821689529787019792870192919091019061049f565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff600054166000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498866040518a8152a161044e565b84518110156105cf5780866105ae6105c9938861158d565b511660005260658b5260406000208484825416179055611531565b82610441565b610446565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000016610101176000553861043c565b905084303b159182610618575b505038610428565b84161490508438610610565b9050848184161090610421565b60849089604051917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b81906106bf84611485565b8152019101908a906103a8565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000166101011760005538610328565b50303b1580156102ec57508682166001146102ec565b506001828816106102e5565b50346101795760206003193601126101795773ffffffffffffffffffffffffffffffffffffffff61074c610ff2565b61075461130e565b169081600052606560205260ff6040600020541615610227577f665604bfe8ee87044ba1f1fd2fb47fe92983c9e187acbb442debf97d3e581921602083806000526065825260406000207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008154169055604051908152a1005b3461017957600060031936011261017957602073ffffffffffffffffffffffffffffffffffffffff60335416604051908152f35b50346101795760a060031936011261017957803567ffffffffffffffff8111610179576108319036908301611126565b6084803567ffffffffffffffff8111610179576108519036908501611070565b9133600052606560205260ff6040600020541615610ca85761087b606435604435602435846115d0565b6007811015610c7a57600381141580610c6f575b610c375750608001518251906020840191822003610c0e578251830190602084830312610179575167ffffffffffffffff81116101795760208201603f8286010112156101795760208185010151916108e78361110e565b946108f56040519687610f71565b83865260208601926020830160408660051b83850101011161017957604081830101935b60408660051b83850101018510610ab65788888860005b82518110156100f35773ffffffffffffffffffffffffffffffffffffffff80606654169061095e838661158d565b51511690602061096e848761158d565b51015190604061097e858861158d565b51015192606061098e868961158d565b5101516002811015610a88579060008960209594936109eb604051988997889687957f468721a70000000000000000000000000000000000000000000000000000000087528601526024850152608060448501528b8401906112cb565b90606483015203925af1908115610a7c57600091610a41575b5015610a1857610a1390611531565b610930565b836040517facfdb444000000000000000000000000000000000000000000000000000000008152fd5b90506020813d602011610a74575b81610a5c60209383610f71565b81010312610179575180151581036101795785610a04565b3d9150610a4f565b6040513d6000823e3d90fd5b6021897f4e487b71000000000000000000000000000000000000000000000000000000006000525260246000fd5b845167ffffffffffffffff81116101795760807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0828587010187030112610179576040519081608081011067ffffffffffffffff608084011117610be05760808201604052610b2b6040828688010101611485565b8252848401810160608101516020840152608001519067ffffffffffffffff82116101795760208701605f8383888a01010101121561017957604082828789010101015191610b7983611036565b90610b876040519283610f71565b8382526020890160608583868b8d0101010101116101795760a093610bb99160606020850191868b8d010101016112a8565b60408401528486010101516002811015610179576060820152815260209485019401610919565b60418b7f4e487b71000000000000000000000000000000000000000000000000000000006000525260246000fd5b836040517f7c6953f9000000000000000000000000000000000000000000000000000000008152fd5b84610c6b6040519283927fe6ace38e0000000000000000000000000000000000000000000000000000000084528301611266565b0390fd5b50600281141561088f565b6021857f4e487b71000000000000000000000000000000000000000000000000000000006000525260246000fd5b836040517fc3b48cf1000000000000000000000000000000000000000000000000000000008152fd5b346101795760206003193601126101795773ffffffffffffffffffffffffffffffffffffffff610cff610ff2565b610d0761130e565b16807fffffffffffffffffffffffff000000000000000000000000000000000000000060665416176066557f3bfb4bbf112628248058745a3c57e35b13369386e474b8e56c552f3063a4a196600080a2005b3461017957600060031936011261017957610d7261130e565b600073ffffffffffffffffffffffffffffffffffffffff6033547fffffffffffffffffffffffff00000000000000000000000000000000000000008116603355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346101795760206003193601126101795773ffffffffffffffffffffffffffffffffffffffff610e07610ff2565b166000526065602052602060ff604060002054166040519015158152f35b50346101795760206003193601126101795780359067ffffffffffffffff821161017957610e5a60a091602093369101611126565b0151015160208180518101031261017957602080910151604051908152f35b5034610179576000600319360112610179576040516040810181811067ffffffffffffffff821117610eef57610eeb9250604052601281527f53696d706c6551756f72756d417661746172000000000000000000000000000060208201526040519182916020835260208301906112cb565b0390f35b6041837f4e487b71000000000000000000000000000000000000000000000000000000006000525260246000fd5b50346101795760806003193601126101795780359067ffffffffffffffff821161017957610f54610f6591610eeb93369101611126565b6064359060443590602435906115d0565b60405191829182611266565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117610fb257604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b359063ffffffff8216820361017957565b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361017957565b359073ffffffffffffffffffffffffffffffffffffffff8216820361017957565b67ffffffffffffffff8111610fb257601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b81601f820112156101795780359061108782611036565b926110956040519485610f71565b8284526020838301011161017957816000926020809301838601378301015290565b91909160408184031261017957604080519167ffffffffffffffff91830182811184821017610fb25760405282946110ee82611015565b84526020820135928311610179576020926111099201611070565b910152565b67ffffffffffffffff8111610fb25760051b60200190565b9190916101209081818503126101795760405167ffffffffffffffff92810183811182821017610fb257604052809461115e83610fe1565b825260209061116e828501610fe1565b8284015261117e60408501610fe1565b604084015261118f60608501610fe1565b60608401526080840135608084015260a084013585811161017957816111b69186016110b7565b60a08401526111c760c08501611015565b60c084015260e084013560038110156101795760e0840152610100938481013590868211610179570181601f820112156101795780356112068161110e565b966112146040519889610f71565b818852848089019260051b8401019380851161017957858401925b85841061124157505050505050500152565b833583811161017957879161125b848480948a01016110b7565b81520193019261122f565b9190602083019260078210156112795752565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60005b8381106112bb5750506000910152565b81810151838201526020016112ab565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f602093611307815180928187528780880191016112a8565b0116010190565b73ffffffffffffffffffffffffffffffffffffffff60335416330361132f57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6033549073ffffffffffffffffffffffffffffffffffffffff80911691827fffffffffffffffffffffffff0000000000000000000000000000000000000000821617603355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b1561140157565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152fd5b519073ffffffffffffffffffffffffffffffffffffffff8216820361017957565b156114ad57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461155e5760010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b80518210156115a15760209160051b010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b919092602060a08401510151602081805181010312610179576020611601910151916115fc84876116aa565b6116aa565b101592836116a0575b505060e08101805160038110156112795760020361162a57505050600690565b51600381101561127957600103611642575050600490565b63ffffffff9081602082015116421060001461166057505050600090565b6040810151821642101561167657505050600190565b6060015116421015611691571561168c57600290565b600190565b1561169b57600390565b600590565b119150388061160a565b9190820180921161155e5756fea164736f6c6343000812000a7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498",
    "sourceMap": "394:3905:49:-:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;394:3905:49;;;;;;;;;;1234:36;394:3905;;;;;:::i;:::-;;1234:36;394:3905;;1234:36;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;-1:-1:-1;394:3905:49;;;;;;;;;;;3290:14:18;3336:34;;;;;;-1:-1:-1;3335:108:18;;;;-1:-1:-1;3314:201:18;;;:::i;:::-;394:3905:49;;;;;;;;;;;;;3551:65:18;;-1:-1:-1;394:3905:49;;;1682:87;;394:3905;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;1682:87;;;;394:3905;;;;:::i;:::-;;;;;;;;;;;;;;5355:69:18;394:3905:49;;;;;;5355:69:18;;;:::i;:::-;;:::i;:::-;1195:12:17;929:10:20;1195:12:17;:::i;:::-;929:10:20;394:3905:49;1513:6:17;394:3905:49;;1662:23:17;394:3905:49;;2409:22:17;;394:3905:49;;2503:8:17;;;;;;:::i;:::-;394:3905:49;;3314:201:18;394:3905:49;;;;;3290:14:18;3336:34;;;;;;-1:-1:-1;3335:108:18;;;;-1:-1:-1;3314:201:18;;:::i;:::-;394:3905:49;;;;;;;;3551:65:18;;-1:-1:-1;807:13:68;;;;802:95;394:3905:49;;;802:95:68;3636:99:18;;;1909:54:49;3636:99:18;;;1909:54:49;3636:99:18;;;802:95:68;1878:16:49;394:3905;;-1:-1:-1;;;;;;394:3905:49;;;;;;;;;;;1909:54;:::i;:::-;;;;3636:99:18;;802:95:68;394:3905:49;;;;;;;;;3636:99:18;-1:-1:-1;;;;;;;;;;;394:3905:49;;;;;;;;;;;;;3710:14:18;3636:99;;;;;;394:3905:49;;;;;;;-1:-1:-1;;;;;;;;;;;394:3905:49;;;;;;3710:14:18;3636:99;;842:3:68;394:3905:49;;822:18:68;;;;;394:3905:49;;;;;;;;;;;;861:6:68;394:3905:49;;;;;;;;;;;;;;;;;;;;;;807:13:68;;394:3905:49;-1:-1:-1;;;394:3905:49;;;;;;;;822:18:68;;;3551:65:18;-1:-1:-1;;394:3905:49;;;;;3551:65:18;;;3335:108;3415:4;;;;1476:19:19;:23;3376:66:18;;;;3335:108;;;;;;3376:66;394:3905:49;;3425:17:18;;-1:-1:-1;3376:66:18;;;;3336:34;394:3905:49;;;;;;3354:16:18;3336:34;;;394:3905:49;;;-1:-1:-1;;;394:3905:49;;;;;;;;;;;;;;;;;;-1:-1:-1;;;394:3905:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3551:65:18;-1:-1:-1;;394:3905:49;;;;;3551:65:18;;;3335:108;3415:4;;1476:19:19;:23;3376:66:18;;3335:108;3376:66;-1:-1:-1;394:3905:49;;;;3425:17:18;3335:108;;3336:34;394:3905:49;;;;;3354:16:18;3336:34;;394:3905:49;-1:-1:-1;394:3905:49;;;1234:36;394:3905;;;-1:-1:-1;;394:3905:49;;;;-1:-1:-1;;;;;394:3905:49;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;394:3905:49;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;394:3905:49;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;394:3905:49;;;;;;;;;;;;;;;;;-1:-1:-1;;;394:3905:49;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;394:3905:49;;;;;;;;;;;;;;;;;-1:-1:-1;;;394:3905:49;;;;;;;2673:187:17;2765:6;394:3905:49;;-1:-1:-1;;;;;394:3905:49;;;-1:-1:-1;;;;;;394:3905:49;;;;;;;;;;2813:40:17;-1:-1:-1;;2813:40:17;2673:187::o",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405260048036101561001357600080fd5b60003560e01c80630b26b02914610f1d5780630eb9b15a14610e7957806353a1394e14610e255780636efd971c14610dd9578063715018a614610d59578063776d1a0114610cd15780638601320b146108015780638da5cb5b146107cd5780639e33d8111461071d578063a4f9edbf1461029b578063d4b8399214610267578063d92d4ea01461017e5763f2fde38b146100ac57600080fd5b34610179576020600319360112610179576100c5610ff2565b906100ce61130e565b73ffffffffffffffffffffffffffffffffffffffff8216156100f5576100f38261138d565b005b6084906020604051917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b600080fd5b50346101795760206003193601126101795773ffffffffffffffffffffffffffffffffffffffff6101ad610ff2565b6101b561130e565b16908115801561024f575b610227577fc3dc08a46232e8d0a95510120799f1e68e0aa28c88730b8b0127d5ff4565b4b06020838060005260658252604060002060017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00825416179055604051908152a1005b6040517fc3b48cf1000000000000000000000000000000000000000000000000000000008152fd5b5081600052606560205260ff604060002054166101c0565b3461017957600060031936011261017957602073ffffffffffffffffffffffffffffffffffffffff60665416604051908152f35b5034610179576020806003193601126101795767ffffffffffffffff908235828111610179576102ce9036908501611070565b916000549360ff808660081c161592838094610711575b80156106fb575b6102f5906113fa565b6001967fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00908589838316176000556106cc575b50865187019260608888860195031261017957610346878901611485565b9261035360408a01611485565b98606081015191821161017957019184603f8401121561017957878301519461037b8661110e565b936103896040519586610f71565b868552898501906040829860051b8201019283116101795760408b9101915b8383106106b4575050505073ffffffffffffffffffffffffffffffffffffffff808095169916956103e88360005460081c166103e3816114a6565b6114a6565b6103f13361138d565b6103f961130e565b89156106315750899061040b8a61138d565b60005461042e848260081c161580958196610624575b8115610603575b506113fa565b8383838316176000556105d4575b506000825b610596575b505050610540575b837fffffffffffffffffffffffff0000000000000000000000000000000000000000606698949854161760665560405193606085019385528685015260606040850152518092526080830195906000905b888483106105285787877f621a036730af1cc915beba86ec9f773f11d2983a09e67fa9d62c6cebedf2364e888c0389a16104d557005b7f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff60005416600055604051908152a1005b8351821689529787019792870192919091019061049f565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff600054166000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498866040518a8152a161044e565b84518110156105cf5780866105ae6105c9938861158d565b511660005260658b5260406000208484825416179055611531565b82610441565b610446565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000016610101176000553861043c565b905084303b159182610618575b505038610428565b84161490508438610610565b9050848184161090610421565b60849089604051917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b81906106bf84611485565b8152019101908a906103a8565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000166101011760005538610328565b50303b1580156102ec57508682166001146102ec565b506001828816106102e5565b50346101795760206003193601126101795773ffffffffffffffffffffffffffffffffffffffff61074c610ff2565b61075461130e565b169081600052606560205260ff6040600020541615610227577f665604bfe8ee87044ba1f1fd2fb47fe92983c9e187acbb442debf97d3e581921602083806000526065825260406000207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008154169055604051908152a1005b3461017957600060031936011261017957602073ffffffffffffffffffffffffffffffffffffffff60335416604051908152f35b50346101795760a060031936011261017957803567ffffffffffffffff8111610179576108319036908301611126565b6084803567ffffffffffffffff8111610179576108519036908501611070565b9133600052606560205260ff6040600020541615610ca85761087b606435604435602435846115d0565b6007811015610c7a57600381141580610c6f575b610c375750608001518251906020840191822003610c0e578251830190602084830312610179575167ffffffffffffffff81116101795760208201603f8286010112156101795760208185010151916108e78361110e565b946108f56040519687610f71565b83865260208601926020830160408660051b83850101011161017957604081830101935b60408660051b83850101018510610ab65788888860005b82518110156100f35773ffffffffffffffffffffffffffffffffffffffff80606654169061095e838661158d565b51511690602061096e848761158d565b51015190604061097e858861158d565b51015192606061098e868961158d565b5101516002811015610a88579060008960209594936109eb604051988997889687957f468721a70000000000000000000000000000000000000000000000000000000087528601526024850152608060448501528b8401906112cb565b90606483015203925af1908115610a7c57600091610a41575b5015610a1857610a1390611531565b610930565b836040517facfdb444000000000000000000000000000000000000000000000000000000008152fd5b90506020813d602011610a74575b81610a5c60209383610f71565b81010312610179575180151581036101795785610a04565b3d9150610a4f565b6040513d6000823e3d90fd5b6021897f4e487b71000000000000000000000000000000000000000000000000000000006000525260246000fd5b845167ffffffffffffffff81116101795760807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0828587010187030112610179576040519081608081011067ffffffffffffffff608084011117610be05760808201604052610b2b6040828688010101611485565b8252848401810160608101516020840152608001519067ffffffffffffffff82116101795760208701605f8383888a01010101121561017957604082828789010101015191610b7983611036565b90610b876040519283610f71565b8382526020890160608583868b8d0101010101116101795760a093610bb99160606020850191868b8d010101016112a8565b60408401528486010101516002811015610179576060820152815260209485019401610919565b60418b7f4e487b71000000000000000000000000000000000000000000000000000000006000525260246000fd5b836040517f7c6953f9000000000000000000000000000000000000000000000000000000008152fd5b84610c6b6040519283927fe6ace38e0000000000000000000000000000000000000000000000000000000084528301611266565b0390fd5b50600281141561088f565b6021857f4e487b71000000000000000000000000000000000000000000000000000000006000525260246000fd5b836040517fc3b48cf1000000000000000000000000000000000000000000000000000000008152fd5b346101795760206003193601126101795773ffffffffffffffffffffffffffffffffffffffff610cff610ff2565b610d0761130e565b16807fffffffffffffffffffffffff000000000000000000000000000000000000000060665416176066557f3bfb4bbf112628248058745a3c57e35b13369386e474b8e56c552f3063a4a196600080a2005b3461017957600060031936011261017957610d7261130e565b600073ffffffffffffffffffffffffffffffffffffffff6033547fffffffffffffffffffffffff00000000000000000000000000000000000000008116603355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346101795760206003193601126101795773ffffffffffffffffffffffffffffffffffffffff610e07610ff2565b166000526065602052602060ff604060002054166040519015158152f35b50346101795760206003193601126101795780359067ffffffffffffffff821161017957610e5a60a091602093369101611126565b0151015160208180518101031261017957602080910151604051908152f35b5034610179576000600319360112610179576040516040810181811067ffffffffffffffff821117610eef57610eeb9250604052601281527f53696d706c6551756f72756d417661746172000000000000000000000000000060208201526040519182916020835260208301906112cb565b0390f35b6041837f4e487b71000000000000000000000000000000000000000000000000000000006000525260246000fd5b50346101795760806003193601126101795780359067ffffffffffffffff821161017957610f54610f6591610eeb93369101611126565b6064359060443590602435906115d0565b60405191829182611266565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117610fb257604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b359063ffffffff8216820361017957565b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361017957565b359073ffffffffffffffffffffffffffffffffffffffff8216820361017957565b67ffffffffffffffff8111610fb257601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b81601f820112156101795780359061108782611036565b926110956040519485610f71565b8284526020838301011161017957816000926020809301838601378301015290565b91909160408184031261017957604080519167ffffffffffffffff91830182811184821017610fb25760405282946110ee82611015565b84526020820135928311610179576020926111099201611070565b910152565b67ffffffffffffffff8111610fb25760051b60200190565b9190916101209081818503126101795760405167ffffffffffffffff92810183811182821017610fb257604052809461115e83610fe1565b825260209061116e828501610fe1565b8284015261117e60408501610fe1565b604084015261118f60608501610fe1565b60608401526080840135608084015260a084013585811161017957816111b69186016110b7565b60a08401526111c760c08501611015565b60c084015260e084013560038110156101795760e0840152610100938481013590868211610179570181601f820112156101795780356112068161110e565b966112146040519889610f71565b818852848089019260051b8401019380851161017957858401925b85841061124157505050505050500152565b833583811161017957879161125b848480948a01016110b7565b81520193019261122f565b9190602083019260078210156112795752565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60005b8381106112bb5750506000910152565b81810151838201526020016112ab565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f602093611307815180928187528780880191016112a8565b0116010190565b73ffffffffffffffffffffffffffffffffffffffff60335416330361132f57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6033549073ffffffffffffffffffffffffffffffffffffffff80911691827fffffffffffffffffffffffff0000000000000000000000000000000000000000821617603355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b1561140157565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152fd5b519073ffffffffffffffffffffffffffffffffffffffff8216820361017957565b156114ad57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461155e5760010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b80518210156115a15760209160051b010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b919092602060a08401510151602081805181010312610179576020611601910151916115fc84876116aa565b6116aa565b101592836116a0575b505060e08101805160038110156112795760020361162a57505050600690565b51600381101561127957600103611642575050600490565b63ffffffff9081602082015116421060001461166057505050600090565b6040810151821642101561167657505050600190565b6060015116421015611691571561168c57600290565b600190565b1561169b57600390565b600590565b119150388061160a565b9190820180921161155e5756fea164736f6c6343000812000a",
    "sourceMap": "394:3905:49:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;394:3905:49;;;;;;;:::i;:::-;1303:62:17;;;:::i;:::-;394:3905:49;;;2409:22:17;394:3905:49;;2503:8:17;;;:::i;:::-;394:3905:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;394:3905:49;;;;;;;;:::i;:::-;1303:62:17;;:::i;:::-;394:3905:49;1051:19:68;;;:44;;;;394:3905:49;1047:71:68;;1163:19;394:3905:49;;;;;1128:6:68;394:3905:49;;;;;1144:4:68;394:3905:49;;;;;;;;;;;;1163:19:68;394:3905:49;1047:71:68;394:3905:49;;1104:14:68;;;;1051:44;394:3905:49;;;;1677:6:68;394:3905:49;;;;;;;;1051:44:68;;394:3905:49;;;;;-1:-1:-1;;394:3905:49;;;;;;;860:21;394:3905;;;;;;;;;;;;;;;-1:-1:-1;;394:3905:49;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;3290:14:18;3336:34;;;;;;394:3905:49;3335:108:18;;;;394:3905:49;3314:201:18;;;:::i;:::-;3540:1;394:3905:49;;;;;;;;;;;3551:65:18;;394:3905:49;;;;1682:87;;;394:3905;1682:87;;;;394:3905;;;;;;1682:87;;;394:3905;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5355:69:18;394:3905:49;;;;;;5355:69:18;;;:::i;:::-;;:::i;:::-;1195:12:17;929:10:20;1195:12:17;:::i;:::-;1303:62;;:::i;:::-;2409:22;;394:3905:49;;2503:8:17;;;;;;:::i;:::-;394:3905:49;;3314:201:18;394:3905:49;;;;;3290:14:18;3336:34;;;;;;394:3905:49;3335:108:18;;;;394:3905:49;3314:201:18;;:::i;:::-;394:3905:49;;;;;;;;3551:65:18;;394:3905:49;-1:-1:-1;394:3905:49;807:13:68;3540:1:18;;;802:95:68;3636:99:18;;;;;802:95:68;394:3905:49;;1878:16;394:3905;;;;;;1878:16;394:3905;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1909:54;;;;;;;;3636:99:18;;394:3905:49;3636:99:18;3710:14;394:3905:49;;;;;;;;;;;;3710:14:18;394:3905:49;;;;;;;;;;;;;;;;;;;;;;;3636:99:18;394:3905:49;;;;;;3710:14:18;394:3905:49;;;;;;3710:14:18;3636:99;;842:3:68;394:3905:49;;822:18:68;;;;;868:10;;;842:3;868:10;;;:::i;:::-;394:3905:49;;;;861:6:68;394:3905:49;;;;;;;;;;;;;842:3:68;:::i;:::-;807:13;;;822:18;;;3551:65:18;394:3905:49;;;;;;3551:65:18;;;3335:108;3415:4;;;;1476:19:19;:23;3376:66:18;;;;3335:108;;;;;;3376:66;394:3905:49;;3425:17:18;;-1:-1:-1;3376:66:18;;;;3336:34;394:3905:49;;;;;;3354:16:18;3336:34;;;394:3905:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;3551:65:18;394:3905:49;;;;;;3551:65:18;;;3335:108;3415:4;;1476:19:19;:23;3376:66:18;;3335:108;3376:66;-1:-1:-1;394:3905:49;;;3441:1:18;3425:17;3335:108;;3336:34;394:3905:49;3369:1:18;394:3905:49;;;3354:16:18;3336:34;;394:3905:49;;;;;;-1:-1:-1;;394:3905:49;;;;;;;;:::i;:::-;1303:62:17;;:::i;:::-;394:3905:49;;;;;1340:6:68;394:3905:49;;;;;;;;1339:14:68;1335:41;;1422:20;394:3905:49;;;;;1340:6:68;394:3905:49;;;;;;;;;;;;;;;;1422:20:68;394:3905:49;;;;;;-1:-1:-1;;394:3905:49;;;;;;;1513:6:17;394:3905:49;;;;;;;;;;;;;;-1:-1:-1;;394:3905:49;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;2904:10;;394:3905;;1677:6:68;394:3905:49;;;;;;;;1759:30:68;1755:57;;2958:65:49;394:3905;;;;;;2958:65;;:::i;:::-;394:3905;;;;;;3056:23;3038:41;;;3037:102;;;394:3905;3033:177;;3327:29;394:3905;3327:29;394:3905;;;;;;;3360:18;;;3327:51;3323:80;;394:3905;;3690:40;;394:3905;;;;;;;;;;;;;;;3690:40;;394:3905;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;3690:40;394:3905;3690:40;;394:3905;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3745:13;;;394:3905;3785:3;394:3905;;3760:23;;;;;394:3905;;3827:6;394:3905;;3878:15;;;;;:::i;:::-;;394:3905;;3914:15;394:3905;3914:15;;;;:::i;:::-;;:21;394:3905;3953:15;394:3905;3953:15;;;;:::i;:::-;;:20;;3991:15;394:3905;3991:15;;;;:::i;:::-;;:25;394:3905;;;;;;;;;;;;;;;;;3819:211;;;;;;;394:3905;3819:211;;;;394:3905;;;;;;;;;;;;;;;:::i;:::-;;;;;;3819:211;;;;;;;;;394:3905;3819:211;;;3785:3;4122:8;;4118:38;;3785:3;;;:::i;:::-;3745:13;;4118:38;394:3905;;;4139:17;;;;3819:211;;;394:3905;3819:211;;394:3905;3819:211;;;;;;394:3905;3819:211;;;:::i;:::-;;;394:3905;;;;;;;;;;;;3819:211;;;;;;-1:-1:-1;3819:211:49;;;394:3905;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;3690:40;;394:3905;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;3690:40;;394:3905;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3323:80;394:3905;;;3387:16;;;;3033:177;394:3905;3162:37;394:3905;;3162:37;;;;;;;;;:::i;:::-;;;;3037:102;3085:53;3103:35;3085:53;;;3037:102;;394:3905;;;;;;;;;;1755:57:68;394:3905:49;;;1798:14:68;;;;394:3905:49;;;;;-1:-1:-1;;394:3905:49;;;;;;;;:::i;:::-;1303:62:17;;:::i;:::-;394:3905:49;;;2170:16;394:3905;;;2170:16;394:3905;2201:18;394:3905;2201:18;;394:3905;;;;;;-1:-1:-1;;394:3905:49;;;;;1303:62:17;;:::i;:::-;394:3905:49;;2765:6:17;394:3905:49;;;;2765:6:17;394:3905:49;;2813:40:17;;;;394:3905:49;;;;;;-1:-1:-1;;394:3905:49;;;;;;;;:::i;:::-;;;;1677:6:68;394:3905:49;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;394:3905:49;;;;;;;;;;;;;;1864:26:50;394:3905:49;;;;;;;:::i;:::-;1864:26:50;;:33;;394:3905:49;;;;1853:56:50;;394:3905:49;;;;;1853:56:50;;;394:3905:49;;;;;;;;;;;;;-1:-1:-1;;394:3905:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;394:3905:49;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;394:3905:49;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;394:3905:49;;;;;-1:-1:-1;394:3905:49;;;;;;;;;-1:-1:-1;;394:3905:49;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::o;1599:130:17:-;394:3905:49;1513:6:17;394:3905:49;;929:10:20;1662:23:17;394:3905:49;;1599:130:17:o;394:3905:49:-;;;;;;;;;;;;;;;;;;;;;;;2673:187:17;2765:6;394:3905:49;;;;;;;;;;;;2765:6:17;394:3905:49;;2813:40:17;-1:-1:-1;2813:40:17;;2673:187::o;394:3905:49:-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;388:1356:50;;;;701:33;:26;;;;:33;;;394:3905:49;;;690:56:50;;394:3905:49;;;;701:33:50;2126:41;690:56;;394:3905:49;2126:25:50;;;;;:::i;:::-;:41;:::i;:::-;2184:21;;772:110;;;;388:1356;896:27;;;;;394:3905:49;;;;;;;;927:28:50;896:59;927:28;;971:31;;;978:24;971:31;:::o;892:846::-;394:3905:49;;;;;;;;1023:58:50;394:3905:49;;1097:30:50;;1104:23;1097:30;:::o;1019:719::-;394:3905:49;1166:23:50;;701:33;1166:23;;394:3905:49;;1148:15:50;:41;1144:594;394:3905:49;;;1205:33:50;;;-1:-1:-1;1205:33:50;:::o;1144:594::-;1277:24;;;394:3905:49;;;1148:15:50;1259:42;394:3905:49;;;1317:34:50;;;394:3905:49;1317:34:50;:::o;1255:483::-;1390:24;;394:3905:49;;1148:15:50;1372:42;394:3905:49;;;1430:162:50;;;927:28;1462:42;:::o;1430:162::-;394:3905:49;1543:34:50;:::o;1368:370::-;1608:130;;;394:3905:49;1636:30:50;:::o;1608:130::-;1704:23;1697:30;:::o;772:110::-;2326:25;;-1:-1:-1;772:110:50;;;;394:3905:49;;;;;;;;;;:::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "disableSpace(address)": "9e33d811",
    "enableSpace(address)": "d92d4ea0",
    "execute((uint32,uint32,uint32,uint32,bytes32,(address,bytes),address,uint8,(address,bytes)[]),uint256,uint256,uint256,bytes)": "8601320b",
    "getProposalStatus((uint32,uint32,uint32,uint32,bytes32,(address,bytes),address,uint8,(address,bytes)[]),uint256,uint256,uint256)": "0b26b029",
    "getQuorum((uint32,uint32,uint32,uint32,bytes32,(address,bytes),address,uint8,(address,bytes)[]))": "53a1394e",
    "getStrategyType()": "0eb9b15a",
    "isSpaceEnabled(address)": "6efd971c",
    "owner()": "8da5cb5b",
    "renounceOwnership()": "715018a6",
    "setTarget(address)": "776d1a01",
    "setUp(bytes)": "a4f9edbf",
    "target()": "d4b83992",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_spaces\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ExecutionFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPayload\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"enum ProposalStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"name\":\"InvalidProposalStatus\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSpace\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransactionsFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"_spaces\",\"type\":\"address[]\"}],\"name\":\"AvatarExecutionStrategySetUp\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"space\",\"type\":\"address\"}],\"name\":\"SpaceDisabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"space\",\"type\":\"address\"}],\"name\":\"SpaceEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newTarget\",\"type\":\"address\"}],\"name\":\"TargetSet\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"space\",\"type\":\"address\"}],\"name\":\"disableSpace\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"space\",\"type\":\"address\"}],\"name\":\"enableSpace\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"snapshotTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"startTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"minEndTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"maxEndTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"executionPayloadHash\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"addy\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"internalType\":\"struct Strategy\",\"name\":\"executionStrategy\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"enum FinalizationStatus\",\"name\":\"finalizationStatus\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"addy\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"internalType\":\"struct Strategy[]\",\"name\":\"votingStrategies\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Proposal\",\"name\":\"proposal\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"votesFor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votesAgainst\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votesAbstain\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"snapshotTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"startTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"minEndTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"maxEndTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"executionPayloadHash\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"addy\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"internalType\":\"struct Strategy\",\"name\":\"executionStrategy\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"enum FinalizationStatus\",\"name\":\"finalizationStatus\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"addy\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"internalType\":\"struct Strategy[]\",\"name\":\"votingStrategies\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Proposal\",\"name\":\"proposal\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"votesFor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votesAgainst\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votesAbstain\",\"type\":\"uint256\"}],\"name\":\"getProposalStatus\",\"outputs\":[{\"internalType\":\"enum ProposalStatus\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"snapshotTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"startTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"minEndTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"maxEndTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"executionPayloadHash\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"addy\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"internalType\":\"struct Strategy\",\"name\":\"executionStrategy\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"enum FinalizationStatus\",\"name\":\"finalizationStatus\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"addy\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"internalType\":\"struct Strategy[]\",\"name\":\"votingStrategies\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Proposal\",\"name\":\"proposal\",\"type\":\"tuple\"}],\"name\":\"getQuorum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStrategyType\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"space\",\"type\":\"address\"}],\"name\":\"isSpaceEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"}],\"name\":\"setTarget\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"initParams\",\"type\":\"bytes\"}],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"target\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An Avatar contract is any contract that implements the IAvatar interface, eg a Gnosis Safe.\",\"errors\":{\"InvalidProposalStatus(uint8)\":[{\"params\":{\"status\":\"The current status of the proposal.\"}}]},\"events\":{\"AvatarExecutionStrategySetUp(address,address,address[])\":{\"details\":\"Emitted each time a new Avatar Execution Strategy is deployed.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"TargetSet(address)\":{\"details\":\"Emitted each time the Target is set.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_owner\":\"Address of the owner of this contract.\",\"_spaces\":\"Array of whitelisted space contracts.\",\"_target\":\"Address of the avatar that this module will pass transactions to.\"}},\"disableSpace(address)\":{\"params\":{\"space\":\"Address of the space.\"}},\"enableSpace(address)\":{\"params\":{\"space\":\"Address of the space.\"}},\"execute((uint32,uint32,uint32,uint32,bytes32,(address,bytes),address,uint8,(address,bytes)[]),uint256,uint256,uint256,bytes)\":{\"params\":{\"payload\":\"The encoded transactions to execute.\",\"proposal\":\"The proposal to execute.\",\"votesAbstain\":\"The number of abstaining votes.\",\"votesAgainst\":\"The number of votes against the proposal.\",\"votesFor\":\"The number of votes in favor of the proposal.\"}},\"isSpaceEnabled(address)\":{\"params\":{\"space\":\"Address of the space.\"},\"returns\":{\"_0\":\"bool whether the space is enabled.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setTarget(address)\":{\"params\":{\"_target\":\"Address of the avatar that this module will pass transactions to.\"}},\"setUp(bytes)\":{\"params\":{\"initParams\":\"ABI encoded parameters, in the same order as the constructor.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"target\":{\"details\":\"Address of the avatar that this module will pass transactions to.\"}},\"title\":\"Avatar Execution Strategy - An Execution strategy that executes transactions on an Avatar contract\",\"version\":1},\"userdoc\":{\"errors\":{\"ExecutionFailed()\":[{\"notice\":\"Thrown when the execution of a proposal fails.\"}],\"InvalidPayload()\":[{\"notice\":\"Thrown when the execution payload supplied to the execution strategy is not equal to the payload supplied when the proposal was created.\"}],\"InvalidProposalStatus(uint8)\":[{\"notice\":\"Thrown when the current status of a proposal does not allow the desired action.\"}]},\"events\":{\"SpaceDisabled(address)\":{\"notice\":\"Emitted when a space is disabled.\"},\"SpaceEnabled(address)\":{\"notice\":\"Emitted when a space is enabled.\"}},\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Constructor\"},\"disableSpace(address)\":{\"notice\":\"Disable a space.\"},\"enableSpace(address)\":{\"notice\":\"Enable a space.\"},\"execute((uint32,uint32,uint32,uint32,bytes32,(address,bytes),address,uint8,(address,bytes)[]),uint256,uint256,uint256,bytes)\":{\"notice\":\"Executes a proposal from the avatar contract if the proposal outcome is accepted.         Must be called by a whitelisted space contract.\"},\"isSpaceEnabled(address)\":{\"notice\":\"Check if a space is enabled.\"},\"setTarget(address)\":{\"notice\":\"Sets the target address\"},\"setUp(bytes)\":{\"notice\":\"Initialize function, should be called immediately after deploying a new proxy to this contract.Can only be called once.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/execution-strategies/AvatarExecutionStrategy.sol\":\"AvatarExecutionStrategy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[\":@gnosis.pm/safe-contracts/=lib/safe-contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@prb/test/=lib/prb-test/src/\",\":@zodiac/=lib/zodiac/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":prb-test/=lib/prb-test/src/\",\":safe-contracts/=lib/safe-contracts/contracts/\",\":zodiac/=lib/zodiac/contracts/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xe798cadb41e2da274913e4b3183a80f50fb057a42238fe8467e077268100ec27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://899f850f7df5a270bccfb765d70069959ca1c20d3a7381c1c3bda8a3ffee1935\",\"dweb:/ipfs/QmVdnAqwyX2L3nX2HDA5WKGtVBFyH1nKE9A1k7fZnPBkhP\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/safe-contracts/contracts/common/Enum.sol\":{\"keccak256\":\"0x473e45b1a5cc47be494b0e123c9127f0c11c1e0992a321ae5a644c0bfdb2c14f\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://948e6d5a8bd7377f7795b6e28584eab9be5c0a8db240bf5e606744a175238c3d\",\"dweb:/ipfs/QmQQaUmQfpuejV41jbxKSTgEBYYCcVTjCsDMgf2htgz6ej\"]},\"lib/zodiac/contracts/interfaces/IAvatar.sol\":{\"keccak256\":\"0xcd5508ffe596eef8fbccfd5fc4f10a34397773547ce64e212d48b5212865ec1f\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://1655ba8b760132ebd702cc806fcdad50a44d320fbeca14be00e35b0171bd35cf\",\"dweb:/ipfs/QmcbB5HpCoEQCTHKWxHS3HpFmgaB4AcZxZYtvQk2QEyvN2\"]},\"src/execution-strategies/AvatarExecutionStrategy.sol\":{\"keccak256\":\"0x83fb5eb810858e56fe2305d8e375e579b5682679a529908e4ce9af718786309e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ee99400136c9ba7a2d9d13092e5d84e02570ac098a7aad7834df02a355e1685\",\"dweb:/ipfs/QmdeNQvHD1mN2Lu8JUpcXmpTHz41mofwbm5gjTg3zjmDLB\"]},\"src/execution-strategies/SimpleQuorumExecutionStrategy.sol\":{\"keccak256\":\"0xeea7fe3373731c07893cb97e360c91e89a2f564479888927f746107574b4b8cb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a0d0d01d19b967e0027993ba9ed92ea52a14e2ef7ee4a85768802e7a513bbfd\",\"dweb:/ipfs/QmPfjpMH4VoR2VEwFRTzC4LmC6soaQ7GHjvoErMWN4JAyd\"]},\"src/interfaces/IExecutionStrategy.sol\":{\"keccak256\":\"0xd92eb63c242c1996d7c566d332cef3f9f708135d7e0ef4e67b46e1443eeea971\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a97572753821529b390adff41ccf33c8635b6ea2339b5b6f8f0867785f62b520\",\"dweb:/ipfs/QmStvwzAqcnhHTVfHq1CRGXsf8AxkLJAKW9WvRvH8Rtcfp\"]},\"src/interfaces/execution-strategies/IExecutionStrategyErrors.sol\":{\"keccak256\":\"0x2bbc78fc6012de21f1222e48abfa18bb5e2de221cccd12190fe6f355a236c226\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b483879705b2b1a0dd3c38de4f349656593ff9d268dd63e2f952012f0c932b15\",\"dweb:/ipfs/QmYEWLmqa6x9fMgcrPdyFWpEL4SfSfAaYdzfnb1ZdokV7A\"]},\"src/types.sol\":{\"keccak256\":\"0x5d104c56bf4e06ee32bfb49fbf94b5123b50904b050be2f1a660c13c4bed1ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://73cd8c4297cd9bc62e0c91b276493163e5e1cf0fea15d124a1d1c6b68f63710a\",\"dweb:/ipfs/QmeaxsSWyrWauUENnHEw6pAEyFR2y3CLqBm7XdH3ATjYuv\"]},\"src/utils/SpaceManager.sol\":{\"keccak256\":\"0x7688d4e4abcb76702e49861d5bb9e7e7982b41a402bcd4cf312d6ca6bb91539f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8d791d8a98f2fd08746a4a50e4141538b22dd8d07b6c8817fceca45e57b79f2e\",\"dweb:/ipfs/QmXZoR5ZUF16Rjfo9BmTyFnzHt1BRJgzaCucTzFCcqyMFj\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.18+commit.87f61d96"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_target",
              "type": "address"
            },
            {
              "internalType": "address[]",
              "name": "_spaces",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ExecutionFailed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidPayload"
        },
        {
          "inputs": [
            {
              "internalType": "enum ProposalStatus",
              "name": "status",
              "type": "uint8"
            }
          ],
          "type": "error",
          "name": "InvalidProposalStatus"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidSpace"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransactionsFailed"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "_target",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "_spaces",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AvatarExecutionStrategySetUp",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "space",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SpaceDisabled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "space",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SpaceEnabled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newTarget",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "TargetSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "space",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "disableSpace"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "space",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "enableSpace"
        },
        {
          "inputs": [
            {
              "internalType": "struct Proposal",
              "name": "proposal",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "snapshotTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "startTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "minEndTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "maxEndTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "bytes32",
                  "name": "executionPayloadHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "struct Strategy",
                  "name": "executionStrategy",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "addy",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "params",
                      "type": "bytes"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "author",
                  "type": "address"
                },
                {
                  "internalType": "enum FinalizationStatus",
                  "name": "finalizationStatus",
                  "type": "uint8"
                },
                {
                  "internalType": "struct Strategy[]",
                  "name": "votingStrategies",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "addy",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "params",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "votesFor",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "votesAgainst",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "votesAbstain",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "payload",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "execute"
        },
        {
          "inputs": [
            {
              "internalType": "struct Proposal",
              "name": "proposal",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "snapshotTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "startTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "minEndTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "maxEndTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "bytes32",
                  "name": "executionPayloadHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "struct Strategy",
                  "name": "executionStrategy",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "addy",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "params",
                      "type": "bytes"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "author",
                  "type": "address"
                },
                {
                  "internalType": "enum FinalizationStatus",
                  "name": "finalizationStatus",
                  "type": "uint8"
                },
                {
                  "internalType": "struct Strategy[]",
                  "name": "votingStrategies",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "addy",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "params",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "votesFor",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "votesAgainst",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "votesAbstain",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getProposalStatus",
          "outputs": [
            {
              "internalType": "enum ProposalStatus",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Proposal",
              "name": "proposal",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "snapshotTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "startTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "minEndTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "maxEndTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "bytes32",
                  "name": "executionPayloadHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "struct Strategy",
                  "name": "executionStrategy",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "addy",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "params",
                      "type": "bytes"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "author",
                  "type": "address"
                },
                {
                  "internalType": "enum FinalizationStatus",
                  "name": "finalizationStatus",
                  "type": "uint8"
                },
                {
                  "internalType": "struct Strategy[]",
                  "name": "votingStrategies",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "addy",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "params",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "getQuorum",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "getStrategyType",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "space",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isSpaceEnabled",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_target",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setTarget"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "initParams",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "target",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "constructor": {
            "params": {
              "_owner": "Address of the owner of this contract.",
              "_spaces": "Array of whitelisted space contracts.",
              "_target": "Address of the avatar that this module will pass transactions to."
            }
          },
          "disableSpace(address)": {
            "params": {
              "space": "Address of the space."
            }
          },
          "enableSpace(address)": {
            "params": {
              "space": "Address of the space."
            }
          },
          "execute((uint32,uint32,uint32,uint32,bytes32,(address,bytes),address,uint8,(address,bytes)[]),uint256,uint256,uint256,bytes)": {
            "params": {
              "payload": "The encoded transactions to execute.",
              "proposal": "The proposal to execute.",
              "votesAbstain": "The number of abstaining votes.",
              "votesAgainst": "The number of votes against the proposal.",
              "votesFor": "The number of votes in favor of the proposal."
            }
          },
          "isSpaceEnabled(address)": {
            "params": {
              "space": "Address of the space."
            },
            "returns": {
              "_0": "bool whether the space is enabled."
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "setTarget(address)": {
            "params": {
              "_target": "Address of the avatar that this module will pass transactions to."
            }
          },
          "setUp(bytes)": {
            "params": {
              "initParams": "ABI encoded parameters, in the same order as the constructor."
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "constructor": {
            "notice": "Constructor"
          },
          "disableSpace(address)": {
            "notice": "Disable a space."
          },
          "enableSpace(address)": {
            "notice": "Enable a space."
          },
          "execute((uint32,uint32,uint32,uint32,bytes32,(address,bytes),address,uint8,(address,bytes)[]),uint256,uint256,uint256,bytes)": {
            "notice": "Executes a proposal from the avatar contract if the proposal outcome is accepted.         Must be called by a whitelisted space contract."
          },
          "isSpaceEnabled(address)": {
            "notice": "Check if a space is enabled."
          },
          "setTarget(address)": {
            "notice": "Sets the target address"
          },
          "setUp(bytes)": {
            "notice": "Initialize function, should be called immediately after deploying a new proxy to this contract.Can only be called once."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@gnosis.pm/safe-contracts/=lib/safe-contracts/",
        ":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        ":@prb/test/=lib/prb-test/src/",
        ":@zodiac/=lib/zodiac/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-gas-snapshot/=lib/forge-gas-snapshot/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":prb-test/=lib/prb-test/src/",
        ":safe-contracts/=lib/safe-contracts/contracts/",
        ":zodiac/=lib/zodiac/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 10000
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "src/execution-strategies/AvatarExecutionStrategy.sol": "AvatarExecutionStrategy"
      },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888",
        "urls": [
          "bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a",
          "dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0xe798cadb41e2da274913e4b3183a80f50fb057a42238fe8467e077268100ec27",
        "urls": [
          "bzz-raw://899f850f7df5a270bccfb765d70069959ca1c20d3a7381c1c3bda8a3ffee1935",
          "dweb:/ipfs/QmVdnAqwyX2L3nX2HDA5WKGtVBFyH1nKE9A1k7fZnPBkhP"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183",
        "urls": [
          "bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06",
          "dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/safe-contracts/contracts/common/Enum.sol": {
        "keccak256": "0x473e45b1a5cc47be494b0e123c9127f0c11c1e0992a321ae5a644c0bfdb2c14f",
        "urls": [
          "bzz-raw://948e6d5a8bd7377f7795b6e28584eab9be5c0a8db240bf5e606744a175238c3d",
          "dweb:/ipfs/QmQQaUmQfpuejV41jbxKSTgEBYYCcVTjCsDMgf2htgz6ej"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/zodiac/contracts/interfaces/IAvatar.sol": {
        "keccak256": "0xcd5508ffe596eef8fbccfd5fc4f10a34397773547ce64e212d48b5212865ec1f",
        "urls": [
          "bzz-raw://1655ba8b760132ebd702cc806fcdad50a44d320fbeca14be00e35b0171bd35cf",
          "dweb:/ipfs/QmcbB5HpCoEQCTHKWxHS3HpFmgaB4AcZxZYtvQk2QEyvN2"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/execution-strategies/AvatarExecutionStrategy.sol": {
        "keccak256": "0x83fb5eb810858e56fe2305d8e375e579b5682679a529908e4ce9af718786309e",
        "urls": [
          "bzz-raw://3ee99400136c9ba7a2d9d13092e5d84e02570ac098a7aad7834df02a355e1685",
          "dweb:/ipfs/QmdeNQvHD1mN2Lu8JUpcXmpTHz41mofwbm5gjTg3zjmDLB"
        ],
        "license": "MIT"
      },
      "src/execution-strategies/SimpleQuorumExecutionStrategy.sol": {
        "keccak256": "0xeea7fe3373731c07893cb97e360c91e89a2f564479888927f746107574b4b8cb",
        "urls": [
          "bzz-raw://5a0d0d01d19b967e0027993ba9ed92ea52a14e2ef7ee4a85768802e7a513bbfd",
          "dweb:/ipfs/QmPfjpMH4VoR2VEwFRTzC4LmC6soaQ7GHjvoErMWN4JAyd"
        ],
        "license": "MIT"
      },
      "src/interfaces/IExecutionStrategy.sol": {
        "keccak256": "0xd92eb63c242c1996d7c566d332cef3f9f708135d7e0ef4e67b46e1443eeea971",
        "urls": [
          "bzz-raw://a97572753821529b390adff41ccf33c8635b6ea2339b5b6f8f0867785f62b520",
          "dweb:/ipfs/QmStvwzAqcnhHTVfHq1CRGXsf8AxkLJAKW9WvRvH8Rtcfp"
        ],
        "license": "MIT"
      },
      "src/interfaces/execution-strategies/IExecutionStrategyErrors.sol": {
        "keccak256": "0x2bbc78fc6012de21f1222e48abfa18bb5e2de221cccd12190fe6f355a236c226",
        "urls": [
          "bzz-raw://b483879705b2b1a0dd3c38de4f349656593ff9d268dd63e2f952012f0c932b15",
          "dweb:/ipfs/QmYEWLmqa6x9fMgcrPdyFWpEL4SfSfAaYdzfnb1ZdokV7A"
        ],
        "license": "MIT"
      },
      "src/types.sol": {
        "keccak256": "0x5d104c56bf4e06ee32bfb49fbf94b5123b50904b050be2f1a660c13c4bed1ed1",
        "urls": [
          "bzz-raw://73cd8c4297cd9bc62e0c91b276493163e5e1cf0fea15d124a1d1c6b68f63710a",
          "dweb:/ipfs/QmeaxsSWyrWauUENnHEw6pAEyFR2y3CLqBm7XdH3ATjYuv"
        ],
        "license": "MIT"
      },
      "src/utils/SpaceManager.sol": {
        "keccak256": "0x7688d4e4abcb76702e49861d5bb9e7e7982b41a402bcd4cf312d6ca6bb91539f",
        "urls": [
          "bzz-raw://8d791d8a98f2fd08746a4a50e4141538b22dd8d07b6c8817fceca45e57b79f2e",
          "dweb:/ipfs/QmXZoR5ZUF16Rjfo9BmTyFnzHt1BRJgzaCucTzFCcqyMFj"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/execution-strategies/AvatarExecutionStrategy.sol",
    "id": 33689,
    "exportedSymbols": {
      "AddressUpgradeable": [25667],
      "AvatarExecutionStrategy": [33688],
      "Choice": [34567],
      "ContextUpgradeable": [25709],
      "Enum": [30820],
      "FinalizationStatus": [34555],
      "IAvatar": [30907],
      "IExecutionStrategy": [34019],
      "IExecutionStrategyErrors": [34112],
      "IndexedStrategy": [34551],
      "Initializable": [25383],
      "MetaTransaction": [34583],
      "OwnableUpgradeable": [25214],
      "Proposal": [34541],
      "ProposalStatus": [34563],
      "SimpleQuorumExecutionStrategy": [33885],
      "SpaceManager": [35149],
      "Strategy": [34546],
      "Vote": [34573]
    },
    "nodeType": "SourceUnit",
    "src": "33:4267:49",
    "nodes": [
      {
        "id": 33433,
        "nodeType": "PragmaDirective",
        "src": "33:24:49",
        "nodes": [],
        "literals": ["solidity", "^", "0.8", ".18"]
      },
      {
        "id": 33434,
        "nodeType": "ImportDirective",
        "src": "59:40:49",
        "nodes": [],
        "absolutePath": "lib/zodiac/contracts/interfaces/IAvatar.sol",
        "file": "@zodiac/interfaces/IAvatar.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33689,
        "sourceUnit": 30908,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 33435,
        "nodeType": "ImportDirective",
        "src": "100:45:49",
        "nodes": [],
        "absolutePath": "src/execution-strategies/SimpleQuorumExecutionStrategy.sol",
        "file": "./SimpleQuorumExecutionStrategy.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33689,
        "sourceUnit": 33886,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 33436,
        "nodeType": "ImportDirective",
        "src": "146:35:49",
        "nodes": [],
        "absolutePath": "src/utils/SpaceManager.sol",
        "file": "../utils/SpaceManager.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33689,
        "sourceUnit": 35150,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 33688,
        "nodeType": "ContractDefinition",
        "src": "394:3905:49",
        "nodes": [
          {
            "id": 33443,
            "nodeType": "ErrorDefinition",
            "src": "480:27:49",
            "nodes": [],
            "errorSelector": "50e006fd",
            "name": "TransactionsFailed",
            "nameLocation": "486:18:49",
            "parameters": {
              "id": 33442,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "504:2:49"
            }
          },
          {
            "id": 33453,
            "nodeType": "EventDefinition",
            "src": "589:87:49",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 33444,
              "nodeType": "StructuredDocumentation",
              "src": "513:71:49",
              "text": "@dev Emitted each time a new Avatar Execution Strategy is deployed."
            },
            "eventSelector": "621a036730af1cc915beba86ec9f773f11d2983a09e67fa9d62c6cebedf2364e",
            "name": "AvatarExecutionStrategySetUp",
            "nameLocation": "595:28:49",
            "parameters": {
              "id": 33452,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33446,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "632:6:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 33453,
                  "src": "624:14:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33445,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "624:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33448,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_target",
                  "nameLocation": "648:7:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 33453,
                  "src": "640:15:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33447,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "640:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33451,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_spaces",
                  "nameLocation": "667:7:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 33453,
                  "src": "657:17:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 33449,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "657:7:49",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 33450,
                    "nodeType": "ArrayTypeName",
                    "src": "657:9:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "623:52:49"
            }
          },
          {
            "id": 33458,
            "nodeType": "EventDefinition",
            "src": "732:43:49",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 33454,
              "nodeType": "StructuredDocumentation",
              "src": "682:45:49",
              "text": "@dev Emitted each time the Target is set."
            },
            "eventSelector": "3bfb4bbf112628248058745a3c57e35b13369386e474b8e56c552f3063a4a196",
            "name": "TargetSet",
            "nameLocation": "738:9:49",
            "parameters": {
              "id": 33457,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33456,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newTarget",
                  "nameLocation": "764:9:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 33458,
                  "src": "748:25:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33455,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "748:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "747:27:49"
            }
          },
          {
            "id": 33461,
            "nodeType": "VariableDeclaration",
            "src": "860:21:49",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 33459,
              "nodeType": "StructuredDocumentation",
              "src": "781:74:49",
              "text": "@dev Address of the avatar that this module will pass transactions to."
            },
            "functionSelector": "d4b83992",
            "mutability": "mutable",
            "name": "target",
            "nameLocation": "875:6:49",
            "scope": 33688,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 33460,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "860:7:49",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 33486,
            "nodeType": "FunctionDefinition",
            "src": "1127:177:49",
            "nodes": [],
            "body": {
              "id": 33485,
              "nodeType": "Block",
              "src": "1198:106:49",
              "nodes": [],
              "statements": [
                {
                  "assignments": [33473],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33473,
                      "mutability": "mutable",
                      "name": "initParams",
                      "nameLocation": "1221:10:49",
                      "nodeType": "VariableDeclaration",
                      "scope": 33485,
                      "src": "1208:23:49",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 33472,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1208:5:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33480,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 33476,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33464,
                        "src": "1245:6:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 33477,
                        "name": "_target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33466,
                        "src": "1253:7:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 33478,
                        "name": "_spaces",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33469,
                        "src": "1262:7:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      ],
                      "expression": {
                        "id": 33474,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "1234:3:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 33475,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1238:6:49",
                      "memberName": "encode",
                      "nodeType": "MemberAccess",
                      "src": "1234:10:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 33479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1234:36:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1208:62:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33482,
                        "name": "initParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33473,
                        "src": "1286:10:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 33481,
                      "name": "setUp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33536,
                      "src": "1280:5:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory)"
                      }
                    },
                    "id": 33483,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1280:17:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33484,
                  "nodeType": "ExpressionStatement",
                  "src": "1280:17:49"
                }
              ]
            },
            "documentation": {
              "id": 33462,
              "nodeType": "StructuredDocumentation",
              "src": "888:234:49",
              "text": "@notice Constructor\n @param _owner Address of the owner of this contract.\n @param _target Address of the avatar that this module will pass transactions to.\n @param _spaces Array of whitelisted space contracts."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 33470,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33464,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "1147:6:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 33486,
                  "src": "1139:14:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33463,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1139:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33466,
                  "mutability": "mutable",
                  "name": "_target",
                  "nameLocation": "1163:7:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 33486,
                  "src": "1155:15:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33465,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1155:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33469,
                  "mutability": "mutable",
                  "name": "_spaces",
                  "nameLocation": "1189:7:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 33486,
                  "src": "1172:24:49",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 33467,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1172:7:49",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 33468,
                    "nodeType": "ArrayTypeName",
                    "src": "1172:9:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1138:59:49"
            },
            "returnParameters": {
              "id": 33471,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1198:0:49"
            },
            "scope": 33688,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 33536,
            "nodeType": "FunctionDefinition",
            "src": "1551:419:49",
            "nodes": [],
            "body": {
              "id": 33535,
              "nodeType": "Block",
              "src": "1610:360:49",
              "nodes": [],
              "statements": [
                {
                  "assignments": [33495, 33497, 33500],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33495,
                      "mutability": "mutable",
                      "name": "_owner",
                      "nameLocation": "1629:6:49",
                      "nodeType": "VariableDeclaration",
                      "scope": 33535,
                      "src": "1621:14:49",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 33494,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1621:7:49",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 33497,
                      "mutability": "mutable",
                      "name": "_target",
                      "nameLocation": "1645:7:49",
                      "nodeType": "VariableDeclaration",
                      "scope": 33535,
                      "src": "1637:15:49",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 33496,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1637:7:49",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 33500,
                      "mutability": "mutable",
                      "name": "_spaces",
                      "nameLocation": "1671:7:49",
                      "nodeType": "VariableDeclaration",
                      "scope": 33535,
                      "src": "1654:24:49",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 33498,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1654:7:49",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 33499,
                        "nodeType": "ArrayTypeName",
                        "src": "1654:9:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33513,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 33503,
                        "name": "initParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33489,
                        "src": "1706:10:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 33505,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1731:7:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 33504,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1731:7:49",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 33507,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1740:7:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 33506,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1740:7:49",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "baseExpression": {
                              "id": 33509,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1749:7:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 33508,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1749:7:49",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 33510,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1749:9:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_array$_t_address_$dyn_memory_ptr_$",
                              "typeString": "type(address[] memory)"
                            }
                          }
                        ],
                        "id": 33511,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1730:29:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_address_$_$_t_type$_t_array$_t_address_$dyn_memory_ptr_$_$",
                          "typeString": "tuple(type(address),type(address),type(address[] memory))"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_address_$_$_t_type$_t_array$_t_address_$dyn_memory_ptr_$_$",
                          "typeString": "tuple(type(address),type(address),type(address[] memory))"
                        }
                      ],
                      "expression": {
                        "id": 33501,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "1682:3:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 33502,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1686:6:49",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "1682:10:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 33512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1682:87:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_payable_$_t_address_payable_$_t_array$_t_address_$dyn_memory_ptr_$",
                      "typeString": "tuple(address payable,address payable,address[] memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1620:149:49"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 33514,
                      "name": "__Ownable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25109,
                      "src": "1779:14:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 33515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1779:16:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33516,
                  "nodeType": "ExpressionStatement",
                  "src": "1779:16:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33518,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33495,
                        "src": "1823:6:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 33517,
                      "name": "transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25188,
                      "src": "1805:17:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 33519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1805:25:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33520,
                  "nodeType": "ExpressionStatement",
                  "src": "1805:25:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33522,
                        "name": "_spaces",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33500,
                        "src": "1860:7:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      ],
                      "id": 33521,
                      "name": "__SpaceManager_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35061,
                      "src": "1840:19:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address[] memory)"
                      }
                    },
                    "id": 33523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1840:28:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33524,
                  "nodeType": "ExpressionStatement",
                  "src": "1840:28:49"
                },
                {
                  "expression": {
                    "id": 33527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 33525,
                      "name": "target",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33461,
                      "src": "1878:6:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 33526,
                      "name": "_target",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33497,
                      "src": "1887:7:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1878:16:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 33528,
                  "nodeType": "ExpressionStatement",
                  "src": "1878:16:49"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 33530,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33495,
                        "src": "1938:6:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 33531,
                        "name": "_target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33497,
                        "src": "1946:7:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 33532,
                        "name": "_spaces",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33500,
                        "src": "1955:7:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      ],
                      "id": 33529,
                      "name": "AvatarExecutionStrategySetUp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33453,
                      "src": "1909:28:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address[] memory)"
                      }
                    },
                    "id": 33533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1909:54:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33534,
                  "nodeType": "EmitStatement",
                  "src": "1904:59:49"
                }
              ]
            },
            "documentation": {
              "id": 33487,
              "nodeType": "StructuredDocumentation",
              "src": "1310:236:49",
              "text": "@notice Initialize function, should be called immediately after deploying a new proxy to this contract.\n @param initParams ABI encoded parameters, in the same order as the constructor.\n @notice Can only be called once."
            },
            "functionSelector": "a4f9edbf",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 33492,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 33491,
                  "name": "initializer",
                  "nameLocations": ["1598:11:49"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 25285,
                  "src": "1598:11:49"
                },
                "nodeType": "ModifierInvocation",
                "src": "1598:11:49"
              }
            ],
            "name": "setUp",
            "nameLocation": "1560:5:49",
            "parameters": {
              "id": 33490,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33489,
                  "mutability": "mutable",
                  "name": "initParams",
                  "nameLocation": "1579:10:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 33536,
                  "src": "1566:23:49",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 33488,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1566:5:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1565:25:49"
            },
            "returnParameters": {
              "id": 33493,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1610:0:49"
            },
            "scope": 33688,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 33553,
            "nodeType": "FunctionDefinition",
            "src": "2105:121:49",
            "nodes": [],
            "body": {
              "id": 33552,
              "nodeType": "Block",
              "src": "2160:66:49",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 33546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 33544,
                      "name": "target",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33461,
                      "src": "2170:6:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 33545,
                      "name": "_target",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33539,
                      "src": "2179:7:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2170:16:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 33547,
                  "nodeType": "ExpressionStatement",
                  "src": "2170:16:49"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 33549,
                        "name": "_target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33539,
                        "src": "2211:7:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 33548,
                      "name": "TargetSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33458,
                      "src": "2201:9:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 33550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2201:18:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33551,
                  "nodeType": "EmitStatement",
                  "src": "2196:23:49"
                }
              ]
            },
            "documentation": {
              "id": 33537,
              "nodeType": "StructuredDocumentation",
              "src": "1976:124:49",
              "text": "@notice Sets the target address\n @param _target Address of the avatar that this module will pass transactions to."
            },
            "functionSelector": "776d1a01",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 33542,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 33541,
                  "name": "onlyOwner",
                  "nameLocations": ["2150:9:49"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 25128,
                  "src": "2150:9:49"
                },
                "nodeType": "ModifierInvocation",
                "src": "2150:9:49"
              }
            ],
            "name": "setTarget",
            "nameLocation": "2114:9:49",
            "parameters": {
              "id": 33540,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33539,
                  "mutability": "mutable",
                  "name": "_target",
                  "nameLocation": "2132:7:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 33553,
                  "src": "2124:15:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33538,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2124:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2123:17:49"
            },
            "returnParameters": {
              "id": 33543,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2160:0:49"
            },
            "scope": 33688,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 33615,
            "nodeType": "FunctionDefinition",
            "src": "2703:735:49",
            "nodes": [],
            "body": {
              "id": 33614,
              "nodeType": "Block",
              "src": "2916:522:49",
              "nodes": [],
              "statements": [
                {
                  "assignments": [33575],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33575,
                      "mutability": "mutable",
                      "name": "proposalStatus",
                      "nameLocation": "2941:14:49",
                      "nodeType": "VariableDeclaration",
                      "scope": 33614,
                      "src": "2926:29:49",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProposalStatus_$34563",
                        "typeString": "enum ProposalStatus"
                      },
                      "typeName": {
                        "id": 33574,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 33573,
                          "name": "ProposalStatus",
                          "nameLocations": ["2926:14:49"],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 34563,
                          "src": "2926:14:49"
                        },
                        "referencedDeclaration": 34563,
                        "src": "2926:14:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ProposalStatus_$34563",
                          "typeString": "enum ProposalStatus"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33582,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 33577,
                        "name": "proposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33557,
                        "src": "2976:8:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$34541_memory_ptr",
                          "typeString": "struct Proposal memory"
                        }
                      },
                      {
                        "id": 33578,
                        "name": "votesFor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33559,
                        "src": "2986:8:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 33579,
                        "name": "votesAgainst",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33561,
                        "src": "2996:12:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 33580,
                        "name": "votesAbstain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33563,
                        "src": "3010:12:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Proposal_$34541_memory_ptr",
                          "typeString": "struct Proposal memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 33576,
                      "name": "getProposalStatus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33818,
                      "src": "2958:17:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Proposal_$34541_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_enum$_ProposalStatus_$34563_$",
                        "typeString": "function (struct Proposal memory,uint256,uint256,uint256) view returns (enum ProposalStatus)"
                      }
                    },
                    "id": 33581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2958:65:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProposalStatus_$34563",
                      "typeString": "enum ProposalStatus"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2926:97:49"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 33593,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_enum$_ProposalStatus_$34563",
                            "typeString": "enum ProposalStatus"
                          },
                          "id": 33586,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 33583,
                            "name": "proposalStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33575,
                            "src": "3038:14:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ProposalStatus_$34563",
                              "typeString": "enum ProposalStatus"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "expression": {
                              "id": 33584,
                              "name": "ProposalStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34563,
                              "src": "3056:14:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_ProposalStatus_$34563_$",
                                "typeString": "type(enum ProposalStatus)"
                              }
                            },
                            "id": 33585,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "3071:8:49",
                            "memberName": "Accepted",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 34559,
                            "src": "3056:23:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ProposalStatus_$34563",
                              "typeString": "enum ProposalStatus"
                            }
                          },
                          "src": "3038:41:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 33587,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3037:43:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_enum$_ProposalStatus_$34563",
                            "typeString": "enum ProposalStatus"
                          },
                          "id": 33591,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 33588,
                            "name": "proposalStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33575,
                            "src": "3085:14:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ProposalStatus_$34563",
                              "typeString": "enum ProposalStatus"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "expression": {
                              "id": 33589,
                              "name": "ProposalStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34563,
                              "src": "3103:14:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_ProposalStatus_$34563_$",
                                "typeString": "type(enum ProposalStatus)"
                              }
                            },
                            "id": 33590,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "3118:20:49",
                            "memberName": "VotingPeriodAccepted",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 34558,
                            "src": "3103:35:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ProposalStatus_$34563",
                              "typeString": "enum ProposalStatus"
                            }
                          },
                          "src": "3085:53:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 33592,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3084:55:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3037:102:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 33599,
                  "nodeType": "IfStatement",
                  "src": "3033:177:49",
                  "trueBody": {
                    "id": 33598,
                    "nodeType": "Block",
                    "src": "3141:69:49",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 33595,
                              "name": "proposalStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33575,
                              "src": "3184:14:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ProposalStatus_$34563",
                                "typeString": "enum ProposalStatus"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_ProposalStatus_$34563",
                                "typeString": "enum ProposalStatus"
                              }
                            ],
                            "id": 33594,
                            "name": "InvalidProposalStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34105,
                            "src": "3162:21:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_enum$_ProposalStatus_$34563_$returns$__$",
                              "typeString": "function (enum ProposalStatus) pure"
                            }
                          },
                          "id": 33596,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3162:37:49",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33597,
                        "nodeType": "RevertStatement",
                        "src": "3155:44:49"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 33605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 33600,
                        "name": "proposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33557,
                        "src": "3327:8:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$34541_memory_ptr",
                          "typeString": "struct Proposal memory"
                        }
                      },
                      "id": 33601,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3336:20:49",
                      "memberName": "executionPayloadHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 34528,
                      "src": "3327:29:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 33603,
                          "name": "payload",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33565,
                          "src": "3370:7:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 33602,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "3360:9:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 33604,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3360:18:49",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "3327:51:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 33609,
                  "nodeType": "IfStatement",
                  "src": "3323:80:49",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 33606,
                        "name": "InvalidPayload",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34111,
                        "src": "3387:14:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 33607,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3387:16:49",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 33608,
                    "nodeType": "RevertStatement",
                    "src": "3380:23:49"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33611,
                        "name": "payload",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33565,
                        "src": "3423:7:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 33610,
                      "name": "_execute",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33678,
                      "src": "3414:8:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory)"
                      }
                    },
                    "id": 33612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3414:17:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33613,
                  "nodeType": "ExpressionStatement",
                  "src": "3414:17:49"
                }
              ]
            },
            "baseFunctions": [33708],
            "documentation": {
              "id": 33554,
              "nodeType": "StructuredDocumentation",
              "src": "2232:466:49",
              "text": "@notice Executes a proposal from the avatar contract if the proposal outcome is accepted.\n         Must be called by a whitelisted space contract.\n @param proposal The proposal to execute.\n @param votesFor The number of votes in favor of the proposal.\n @param votesAgainst The number of votes against the proposal.\n @param votesAbstain The number of abstaining votes.\n @param payload The encoded transactions to execute."
            },
            "functionSelector": "8601320b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 33569,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "2904:3:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 33570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "2908:6:49",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "2904:10:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 33571,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 33568,
                  "name": "onlySpace",
                  "nameLocations": ["2894:9:49"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 35148,
                  "src": "2894:9:49"
                },
                "nodeType": "ModifierInvocation",
                "src": "2894:21:49"
              }
            ],
            "name": "execute",
            "nameLocation": "2712:7:49",
            "overrides": {
              "id": 33567,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2885:8:49"
            },
            "parameters": {
              "id": 33566,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33557,
                  "mutability": "mutable",
                  "name": "proposal",
                  "nameLocation": "2745:8:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 33615,
                  "src": "2729:24:49",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Proposal_$34541_memory_ptr",
                    "typeString": "struct Proposal"
                  },
                  "typeName": {
                    "id": 33556,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 33555,
                      "name": "Proposal",
                      "nameLocations": ["2729:8:49"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 34541,
                      "src": "2729:8:49"
                    },
                    "referencedDeclaration": 34541,
                    "src": "2729:8:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proposal_$34541_storage_ptr",
                      "typeString": "struct Proposal"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33559,
                  "mutability": "mutable",
                  "name": "votesFor",
                  "nameLocation": "2771:8:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 33615,
                  "src": "2763:16:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33558,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2763:7:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33561,
                  "mutability": "mutable",
                  "name": "votesAgainst",
                  "nameLocation": "2797:12:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 33615,
                  "src": "2789:20:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33560,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2789:7:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33563,
                  "mutability": "mutable",
                  "name": "votesAbstain",
                  "nameLocation": "2827:12:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 33615,
                  "src": "2819:20:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33562,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2819:7:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33565,
                  "mutability": "mutable",
                  "name": "payload",
                  "nameLocation": "2862:7:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 33615,
                  "src": "2849:20:49",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 33564,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2849:5:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2719:156:49"
            },
            "returnParameters": {
              "id": 33572,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2916:0:49"
            },
            "scope": 33688,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 33678,
            "nodeType": "FunctionDefinition",
            "src": "3591:582:49",
            "nodes": [],
            "body": {
              "id": 33677,
              "nodeType": "Block",
              "src": "3640:533:49",
              "nodes": [],
              "statements": [
                {
                  "assignments": [33625],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33625,
                      "mutability": "mutable",
                      "name": "transactions",
                      "nameLocation": "3675:12:49",
                      "nodeType": "VariableDeclaration",
                      "scope": 33677,
                      "src": "3650:37:49",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_MetaTransaction_$34583_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct MetaTransaction[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 33623,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 33622,
                            "name": "MetaTransaction",
                            "nameLocations": ["3650:15:49"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 34583,
                            "src": "3650:15:49"
                          },
                          "referencedDeclaration": 34583,
                          "src": "3650:15:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MetaTransaction_$34583_storage_ptr",
                            "typeString": "struct MetaTransaction"
                          }
                        },
                        "id": 33624,
                        "nodeType": "ArrayTypeName",
                        "src": "3650:17:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_MetaTransaction_$34583_storage_$dyn_storage_ptr",
                          "typeString": "struct MetaTransaction[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33633,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 33628,
                        "name": "payload",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33618,
                        "src": "3701:7:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "baseExpression": {
                              "id": 33629,
                              "name": "MetaTransaction",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34583,
                              "src": "3711:15:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_MetaTransaction_$34583_storage_ptr_$",
                                "typeString": "type(struct MetaTransaction storage pointer)"
                              }
                            },
                            "id": 33630,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3711:17:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_array$_t_struct$_MetaTransaction_$34583_memory_ptr_$dyn_memory_ptr_$",
                              "typeString": "type(struct MetaTransaction memory[] memory)"
                            }
                          }
                        ],
                        "id": 33631,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "3710:19:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_array$_t_struct$_MetaTransaction_$34583_memory_ptr_$dyn_memory_ptr_$",
                          "typeString": "type(struct MetaTransaction memory[] memory)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_array$_t_struct$_MetaTransaction_$34583_memory_ptr_$dyn_memory_ptr_$",
                          "typeString": "type(struct MetaTransaction memory[] memory)"
                        }
                      ],
                      "expression": {
                        "id": 33626,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "3690:3:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 33627,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "3694:6:49",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "3690:10:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 33632,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3690:40:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_MetaTransaction_$34583_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct MetaTransaction memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3650:80:49"
                },
                {
                  "body": {
                    "id": 33675,
                    "nodeType": "Block",
                    "src": "3790:377:49",
                    "statements": [
                      {
                        "assignments": [33646],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33646,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "3809:7:49",
                            "nodeType": "VariableDeclaration",
                            "scope": 33675,
                            "src": "3804:12:49",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 33645,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "3804:4:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33668,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 33651,
                                  "name": "transactions",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33625,
                                  "src": "3878:12:49",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_MetaTransaction_$34583_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "struct MetaTransaction memory[] memory"
                                  }
                                },
                                "id": 33653,
                                "indexExpression": {
                                  "id": 33652,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33635,
                                  "src": "3891:1:49",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3878:15:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_MetaTransaction_$34583_memory_ptr",
                                  "typeString": "struct MetaTransaction memory"
                                }
                              },
                              "id": 33654,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3894:2:49",
                              "memberName": "to",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 34575,
                              "src": "3878:18:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 33655,
                                  "name": "transactions",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33625,
                                  "src": "3914:12:49",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_MetaTransaction_$34583_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "struct MetaTransaction memory[] memory"
                                  }
                                },
                                "id": 33657,
                                "indexExpression": {
                                  "id": 33656,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33635,
                                  "src": "3927:1:49",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3914:15:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_MetaTransaction_$34583_memory_ptr",
                                  "typeString": "struct MetaTransaction memory"
                                }
                              },
                              "id": 33658,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3930:5:49",
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 34577,
                              "src": "3914:21:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 33659,
                                  "name": "transactions",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33625,
                                  "src": "3953:12:49",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_MetaTransaction_$34583_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "struct MetaTransaction memory[] memory"
                                  }
                                },
                                "id": 33661,
                                "indexExpression": {
                                  "id": 33660,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33635,
                                  "src": "3966:1:49",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3953:15:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_MetaTransaction_$34583_memory_ptr",
                                  "typeString": "struct MetaTransaction memory"
                                }
                              },
                              "id": 33662,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3969:4:49",
                              "memberName": "data",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 34579,
                              "src": "3953:20:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 33663,
                                  "name": "transactions",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33625,
                                  "src": "3991:12:49",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_MetaTransaction_$34583_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "struct MetaTransaction memory[] memory"
                                  }
                                },
                                "id": 33665,
                                "indexExpression": {
                                  "id": 33664,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33635,
                                  "src": "4004:1:49",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3991:15:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_MetaTransaction_$34583_memory_ptr",
                                  "typeString": "struct MetaTransaction memory"
                                }
                              },
                              "id": 33666,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4007:9:49",
                              "memberName": "operation",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 34582,
                              "src": "3991:25:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Operation_$30819",
                                "typeString": "enum Enum.Operation"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_enum$_Operation_$30819",
                                "typeString": "enum Enum.Operation"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 33648,
                                  "name": "target",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33461,
                                  "src": "3827:6:49",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 33647,
                                "name": "IAvatar",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30907,
                                "src": "3819:7:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IAvatar_$30907_$",
                                  "typeString": "type(contract IAvatar)"
                                }
                              },
                              "id": 33649,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3819:15:49",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IAvatar_$30907",
                                "typeString": "contract IAvatar"
                              }
                            },
                            "id": 33650,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3835:25:49",
                            "memberName": "execTransactionFromModule",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 30868,
                            "src": "3819:41:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_enum$_Operation_$30819_$returns$_t_bool_$",
                              "typeString": "function (address,uint256,bytes memory,enum Enum.Operation) external returns (bool)"
                            }
                          },
                          "id": 33667,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3819:211:49",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3804:226:49"
                      },
                      {
                        "condition": {
                          "id": 33670,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "4122:8:49",
                          "subExpression": {
                            "id": 33669,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33646,
                            "src": "4123:7:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 33674,
                        "nodeType": "IfStatement",
                        "src": "4118:38:49",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 33671,
                              "name": "ExecutionFailed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34108,
                              "src": "4139:15:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 33672,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4139:17:49",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 33673,
                          "nodeType": "RevertStatement",
                          "src": "4132:24:49"
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 33641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 33638,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33635,
                      "src": "3760:1:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 33639,
                        "name": "transactions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33625,
                        "src": "3764:12:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_MetaTransaction_$34583_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct MetaTransaction memory[] memory"
                        }
                      },
                      "id": 33640,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3777:6:49",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3764:19:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3760:23:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 33676,
                  "initializationExpression": {
                    "assignments": [33635],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 33635,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3753:1:49",
                        "nodeType": "VariableDeclaration",
                        "scope": 33676,
                        "src": "3745:9:49",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 33634,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3745:7:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 33637,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 33636,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3757:1:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3745:13:49"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 33643,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3785:3:49",
                      "subExpression": {
                        "id": 33642,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33635,
                        "src": "3785:1:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 33644,
                    "nodeType": "ExpressionStatement",
                    "src": "3785:3:49"
                  },
                  "nodeType": "ForStatement",
                  "src": "3740:427:49"
                }
              ]
            },
            "documentation": {
              "id": 33616,
              "nodeType": "StructuredDocumentation",
              "src": "3444:142:49",
              "text": "@notice Decodes and executes a batch of transactions from the avatar contract.\n @param payload The encoded transactions to execute."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_execute",
            "nameLocation": "3600:8:49",
            "parameters": {
              "id": 33619,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33618,
                  "mutability": "mutable",
                  "name": "payload",
                  "nameLocation": "3622:7:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 33678,
                  "src": "3609:20:49",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 33617,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3609:5:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3608:22:49"
            },
            "returnParameters": {
              "id": 33620,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3640:0:49"
            },
            "scope": 33688,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 33687,
            "nodeType": "FunctionDefinition",
            "src": "4179:118:49",
            "nodes": [],
            "body": {
              "id": 33686,
              "nodeType": "Block",
              "src": "4253:44:49",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "hexValue": "53696d706c6551756f72756d417661746172",
                    "id": 33684,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4270:20:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c6b424df83e7c7c494d72036a8dbf29b3cdbdadcbd03398081a41b5e3ac2762b",
                      "typeString": "literal_string \"SimpleQuorumAvatar\""
                    },
                    "value": "SimpleQuorumAvatar"
                  },
                  "functionReturnParameters": 33683,
                  "id": 33685,
                  "nodeType": "Return",
                  "src": "4263:27:49"
                }
              ]
            },
            "baseFunctions": [33884],
            "functionSelector": "0eb9b15a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStrategyType",
            "nameLocation": "4188:15:49",
            "overrides": {
              "id": 33680,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4220:8:49"
            },
            "parameters": {
              "id": 33679,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4203:2:49"
            },
            "returnParameters": {
              "id": 33683,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33682,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 33687,
                  "src": "4238:13:49",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 33681,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4238:6:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4237:15:49"
            },
            "scope": 33688,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 33438,
              "name": "SpaceManager",
              "nameLocations": ["430:12:49"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 35149,
              "src": "430:12:49"
            },
            "id": 33439,
            "nodeType": "InheritanceSpecifier",
            "src": "430:12:49"
          },
          {
            "baseName": {
              "id": 33440,
              "name": "SimpleQuorumExecutionStrategy",
              "nameLocations": ["444:29:49"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 33885,
              "src": "444:29:49"
            },
            "id": 33441,
            "nodeType": "InheritanceSpecifier",
            "src": "444:29:49"
          }
        ],
        "canonicalName": "AvatarExecutionStrategy",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 33437,
          "nodeType": "StructuredDocumentation",
          "src": "183:211:49",
          "text": "@title Avatar Execution Strategy - An Execution strategy that executes transactions on an Avatar contract\n @dev An Avatar contract is any contract that implements the IAvatar interface, eg a Gnosis Safe."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [33688, 33885, 34019, 34112, 35149, 25214, 25709, 25383],
        "name": "AvatarExecutionStrategy",
        "nameLocation": "403:23:49",
        "scope": 33689,
        "usedErrors": [33443, 34105, 34108, 34111, 35016]
      }
    ],
    "license": "MIT"
  },
  "id": 49
}
