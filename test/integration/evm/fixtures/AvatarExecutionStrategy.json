{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "_spaces",
          "type": "address[]"
        },
        {
          "internalType": "uint256",
          "name": "_quorum",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "ExecutionFailed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "enum ProposalStatus",
          "name": "status",
          "type": "uint8"
        }
      ],
      "name": "InvalidProposalStatus",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidSpace",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_target",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "_spaces",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_quorum",
          "type": "uint256"
        }
      ],
      "name": "AvatarExecutionStrategySetUp",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newQuorum",
          "type": "uint256"
        }
      ],
      "name": "QuorumUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "space",
          "type": "address"
        }
      ],
      "name": "SpaceDisabled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "space",
          "type": "address"
        }
      ],
      "name": "SpaceEnabled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newTarget",
          "type": "address"
        }
      ],
      "name": "TargetSet",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "space",
          "type": "address"
        }
      ],
      "name": "disableSpace",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "space",
          "type": "address"
        }
      ],
      "name": "enableSpace",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "author",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "startBlockNumber",
              "type": "uint32"
            },
            {
              "internalType": "contract IExecutionStrategy",
              "name": "executionStrategy",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "minEndBlockNumber",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "maxEndBlockNumber",
              "type": "uint32"
            },
            {
              "internalType": "enum FinalizationStatus",
              "name": "finalizationStatus",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "executionPayloadHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "activeVotingStrategies",
              "type": "uint256"
            }
          ],
          "internalType": "struct Proposal",
          "name": "proposal",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "votesFor",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "votesAgainst",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "votesAbstain",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "payload",
          "type": "bytes"
        }
      ],
      "name": "execute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "author",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "startBlockNumber",
              "type": "uint32"
            },
            {
              "internalType": "contract IExecutionStrategy",
              "name": "executionStrategy",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "minEndBlockNumber",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "maxEndBlockNumber",
              "type": "uint32"
            },
            {
              "internalType": "enum FinalizationStatus",
              "name": "finalizationStatus",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "executionPayloadHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "activeVotingStrategies",
              "type": "uint256"
            }
          ],
          "internalType": "struct Proposal",
          "name": "proposal",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "votesFor",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "votesAgainst",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "votesAbstain",
          "type": "uint256"
        }
      ],
      "name": "getProposalStatus",
      "outputs": [
        {
          "internalType": "enum ProposalStatus",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getStrategyType",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "space",
          "type": "address"
        }
      ],
      "name": "isSpaceEnabled",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "quorum",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_quorum",
          "type": "uint256"
        }
      ],
      "name": "setQuorum",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        }
      ],
      "name": "setTarget",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "initParams",
          "type": "bytes"
        }
      ],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "target",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060409080825234620003c557620019e68038038091620000228285620003ca565b8339810190608081830312620003c5576200003d8162000404565b916020916200004e83820162000404565b818601516001600160401b03939190848111620003c55760606200007d6200009f946200009093870162000419565b9401518851948593888501998a62000490565b03601f198101835282620003ca565b60009081549260ff95868560081c161592838094620003b8575b8015620003a0575b156200034557600195848760ff19831617875562000333575b5080518101916080828403126200032f57620000f69062000404565b92620001048a830162000404565b9260608301519182116200032b5760809189806200012793019185010162000419565b9101519060018060a01b0380809516931693620001558a885460081c166200014f81620004f6565b620004f6565b620001603362000557565b33816033541603620002e957831562000296576200017e8462000557565b6200018f8a885460081c16620004f6565b86885b62000249575b50507f683bbcd71b259e230416d974e6911d22117ec0de423b17abfcb832bafbd244bf939291620001f891620001d588549b8c60081c16620004f6565b6066829055606780546001600160a01b031916861790558b519485948562000490565b0390a162000210575b84516114459081620005a18239f35b7f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989361ff00191690558351908152a13880808062000201565b82518110156200029057818a8260051b8501015116885260658a52888c89205560001981146200027c5788018862000192565b634e487b7160e01b88526011600452602488fd5b62000198565b8a5162461bcd60e51b8152600481018a9052602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b6064898c519062461bcd60e51b825280600483015260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b8680fd5b8580fd5b61ffff191661010117855538620000da565b885162461bcd60e51b815260048101889052602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b158015620000c15750600188871614620000c1565b50600188871610620000b9565b600080fd5b601f909101601f19168101906001600160401b03821190821017620003ee57604052565b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b0382168203620003c557565b9080601f83011215620003c5578151906001600160401b038211620003ee578160051b604051936020936200045185840187620003ca565b85528380860192820101928311620003c5578301905b82821062000476575050505090565b838091620004848462000404565b81520191019062000467565b9493929091608086019060018060a01b0380941687528360209116818801526080604088015282518092528060a088019301936000905b838210620004dc575050505060609150930152565b8551811685529482019493820193600190910190620004c7565b15620004fe57565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b603380546001600160a01b039283166001600160a01b0319821681179092559091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a356fe608080604052600436101561001357600080fd5b60003560e01c9081630eb9b15a14610f47575080631703a01814610f295780636efd971c14610ee2578063715018a614610e62578063776d1a0114610dda5780638da5cb5b14610da65780639e33d81114610d1f578063a1908c6a146107f6578063a4f9edbf146103ad578063c1ba4e5914610361578063d4b839921461032d578063d92d4ea01461026b578063ea8f8c4b1461018a5763f2fde38b146100b957600080fd5b34610185576020600319360112610185576100d261101b565b6100da611130565b73ffffffffffffffffffffffffffffffffffffffff811615610101576100ff906111af565b005b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b600080fd5b3461018557600319360161016081126101855761010013610185576040516101b18161103e565b73ffffffffffffffffffffffffffffffffffffffff600435818116810361018557825263ffffffff90602435828116810361018557602084015260443590811681036101855760408301526064358181168103610185576060830152608435908116810361018557608082015260a4356003811015610185578161025b9160a061026794015260c43560c082015260e43560e082015261014435906101243590610104359061137f565b6040519182918261111d565b0390f35b346101855760206003193601126101855773ffffffffffffffffffffffffffffffffffffffff61029961101b565b6102a1611130565b1680158015610316575b6102ec576020817fc3dc08a46232e8d0a95510120799f1e68e0aa28c88730b8b0127d5ff4565b4b092600052606582526001604060002055604051908152a1005b60046040517fc3b48cf1000000000000000000000000000000000000000000000000000000008152fd5b5080600052606560205260406000205415156102ab565b3461018557600060031936011261018557602073ffffffffffffffffffffffffffffffffffffffff60675416604051908152f35b34610185576020600319360112610185577ff18f88786aae85a652aadb99a82462616489a33370c9bcc7b245906812ef7cd160206004356103a0611130565b80606655604051908152a1005b34610185576020806003193601126101855767ffffffffffffffff90600435828111610185576103e19036906004016110d6565b916000549060ff93848360081c1615918280936107ea575b80156107d4575b156107505760019383857fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00831617600055610721575b5081518201906080838784019303126101855761045486840161121c565b906104616040850161121c565b9060608501519081116101855784019383603f8601121561018557878501519361048a8561123d565b95610498604051978861105b565b858752898701906040829760051b8201019283116101855760408b9101915b8383106107095750505050608001519173ffffffffffffffffffffffffffffffffffffffff808092169216946104fc8a60005460081c166104f781611255565b611255565b610505336111af565b61050d611130565b82156106855761051e8392936111af565b61052e8a60005460081c16611255565b876000815b610644575b505061054b6000549a8b60081c16611255565b83606655857fffffffffffffffffffffffff00000000000000000000000000000000000000006067541617606755604051956080870192875289870152608060408701525180915260a0850193916000905b888a84841061062c578c918a7f683bbcd71b259e230416d974e6911d22117ec0de423b17abfcb832bafbd244bf8b808c8c60608301520390a16105dc57005b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff7f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989316600055604051908152a1005b8551831688529687019690940193919091019061059d565b829493945181101561067d57808461065f610674938661133c565b511660005260658c52826040600020556112e0565b81949394610533565b939293610538565b608489604051907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b81906107148461121c565b8152019101908a906104b7565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000166101011760005586610436565b608485604051907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152fd5b50303b1580156104005750600186851614610400565b506001868516106103f9565b34610185576101a0600319360112610185576101007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc3601126101855760405161083f8161103e565b60243573ffffffffffffffffffffffffffffffffffffffff8116810361018557815263ffffffff604435818116810361018557602083015260643573ffffffffffffffffffffffffffffffffffffffff81168103610185576040830152608435818116810361018557606083015260a435908116810361018557608082015260c43560038110156101855760a082015260e43560c08201526101043560e08201526101843567ffffffffffffffff8111610185576109019036906004016110d6565b90336000526065602052604060002054156102ec5761092e9061016435906101443590610124359061137f565b6007811015610b3f57600381141580610d14575b610cda575080518101906020818303126101855760208101519067ffffffffffffffff82116101855760208301603f83830101121561018557602082820101519061098c8261123d565b9361099a604051958661105b565b82855260208501906020810160408560051b87860101011161018557604085840101915b60408560051b87860101018310610b6e578660005b81518110156100ff5773ffffffffffffffffffffffffffffffffffffffff6067541673ffffffffffffffffffffffffffffffffffffffff610a14838561133c565b5151166020610a23848661133c565b510151916040610a33858761133c565b510151906060610a43868861133c565b510151936002851015610b3f576000602094610aa196604051978896879586947f468721a700000000000000000000000000000000000000000000000000000000865260048601526024850152608060448501526084840190610fd8565b90606483015203925af1908115610b3357600091610af8575b5015610ace57610ac9906112e0565b6109d3565b60046040517facfdb444000000000000000000000000000000000000000000000000000000008152fd5b90506020813d602011610b2b575b81610b136020938361105b565b81010312610185575180151581036101855783610aba565b3d9150610b06565b6040513d6000823e3d90fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b82519067ffffffffffffffff82116101855760a07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe083898801018503011261018557604051918260a081011067ffffffffffffffff60a085011117610cab5760a08301604052610be46040828a8901010161121c565b83528588018101606081015160208501526080015167ffffffffffffffff81116101855760208501605f82848c8b010101011215610185578060408a9284848b0101010151886060828487610c388361109c565b97610c46604051998a61105b565b83895260208d0195010101010111610185578a6060610c6f938660208701938d01010101610fb5565b604084015260a0818988010101519160028310156101855760608401929092528588010160c001516080830152908152602092830192016109be565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610d10906040519182917fe6ace38e0000000000000000000000000000000000000000000000000000000083526004830161111d565b0390fd5b506002811415610942565b346101855760206003193601126101855773ffffffffffffffffffffffffffffffffffffffff610d4d61101b565b610d55611130565b16806000526065602052604060002054156102ec576020817f665604bfe8ee87044ba1f1fd2fb47fe92983c9e187acbb442debf97d3e581921926000526065825260006040812055604051908152a1005b3461018557600060031936011261018557602073ffffffffffffffffffffffffffffffffffffffff60335416604051908152f35b346101855760206003193601126101855773ffffffffffffffffffffffffffffffffffffffff610e0861101b565b610e10611130565b16807fffffffffffffffffffffffff000000000000000000000000000000000000000060675416176067557f3bfb4bbf112628248058745a3c57e35b13369386e474b8e56c552f3063a4a196600080a2005b3461018557600060031936011261018557610e7b611130565b600073ffffffffffffffffffffffffffffffffffffffff6033547fffffffffffffffffffffffff00000000000000000000000000000000000000008116603355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346101855760206003193601126101855773ffffffffffffffffffffffffffffffffffffffff610f1061101b565b1660005260656020526020604060002054604051908152f35b34610185576000600319360112610185576020606654604051908152f35b3461018557600060031936011261018557604081019080821067ffffffffffffffff831117610cab5761026791604052601281527f53696d706c6551756f72756d41766174617200000000000000000000000000006020820152604051918291602083526020830190610fd8565b60005b838110610fc85750506000910152565b8181015183820152602001610fb8565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f60209361101481518092818752878088019101610fb5565b0116010190565b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361018557565b610100810190811067ffffffffffffffff821117610cab57604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117610cab57604052565b67ffffffffffffffff8111610cab57601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b81601f82011215610185578035906110ed8261109c565b926110fb604051948561105b565b8284526020838301011161018557816000926020809301838601378301015290565b919060208301926007821015610b3f5752565b73ffffffffffffffffffffffffffffffffffffffff60335416330361115157565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6033549073ffffffffffffffffffffffffffffffffffffffff80911691827fffffffffffffffffffffffff0000000000000000000000000000000000000000821617603355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b519073ffffffffffffffffffffffffffffffffffffffff8216820361018557565b67ffffffffffffffff8111610cab5760051b60200190565b1561125c57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461130d5760010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b80518210156113505760209160051b010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b91909260665490840180851161130d571015928361142e575b505060a0810180516003811015610b3f576002036113b857505050600690565b516003811015610b3f576001036113d0575050600490565b63ffffffff908160208201511643106000146113ee57505050600090565b6060810151821643101561140457505050600190565b608001511643101561141f571561141a57600290565b600190565b1561142957600390565b600590565b119150388061139856fea164736f6c6343000812000a",
    "sourceMap": "490:4122:75:-:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;490:4122:75;;;;;;;;;;1649:45;490:4122;1649:45;490:4122;;;;:::i;:::-;;;;;;1649:45;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;-1:-1:-1;490:4122:75;;;;;;;;;;;3290:14:23;3336:34;;;;;;-1:-1:-1;3335:108:23;;;;-1:-1:-1;490:4122:75;;;;;;;;;;;;;;3551:65:23;;-1:-1:-1;490:4122:75;;;2086:96;;490:4122;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;2086:96;;;490:4122;2086:96;;490:4122;;;;;:::i;:::-;;;;;;;;;;;;;;;;;5355:69:23;490:4122:75;;;;;;5355:69:23;;;:::i;:::-;;:::i;:::-;1195:12:19;929:10:26;1195:12:19;:::i;:::-;929:10:26;490:4122:75;1513:6:19;490:4122:75;;1662:23:19;490:4122:75;;2409:22:19;;490:4122:75;;2503:8:19;;;:::i;:::-;5355:69:23;490:4122:75;;;;;;5355:69:23;:::i;:::-;989:13:111;;490:4122:75;;;984:95:111;490:4122:75;;2377:63;490:4122;;;2377:63;490:4122;5355:69:23;490:4122:75;;;;;;;5355:69:23;:::i;:::-;738:16:78;490:4122:75;;;2346:16;490:4122;;-1:-1:-1;;;;;;490:4122:75;;;;;;;;;;;2377:63;:::i;:::-;;;;3636:99:23;;984:95:111;490:4122:75;;;;;;;;;3636:99:23;3710:14;490:4122:75;;;;;;;;;;;3710:14:23;3636:99;;;;;;1024:3:111;490:4122:75;;1004:18:111;;;;;319:1:104;;;;;;;;;490:4122:75;319:1:104;;1043:6:111;319:1:104;;;;;;490:4122:75;;;;;;;;;;989:13:111;;490:4122:75;-1:-1:-1;;;490:4122:75;;;;;;;;1004:18:111;;;490:4122:75;;;-1:-1:-1;;;490:4122:75;;;;;;;;;;;;;;;;;;-1:-1:-1;;;490:4122:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3551:65:23;-1:-1:-1;;490:4122:75;;;;;3551:65:23;;;490:4122:75;;;-1:-1:-1;;;490:4122:75;;;;;;;;;;;;;;;;;;-1:-1:-1;;;490:4122:75;;;;;;;3335:108:23;3415:4;;1476:19:25;:23;3376:66:23;;3335:108;3376:66;490:4122:75;;;;;3425:17:23;3335:108;;3336:34;490:4122:75;;;;;3354:16:23;3336:34;;490:4122:75;-1:-1:-1;490:4122:75;;;1649:45;490:4122;;;-1:-1:-1;;490:4122:75;;;;-1:-1:-1;;;;;490:4122:75;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;490:4122:75;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;490:4122:75;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;490:4122:75;;;;;;;;;;;;;;;;;-1:-1:-1;;;490:4122:75;;;;;;;2673:187:19;2765:6;490:4122:75;;-1:-1:-1;;;;;490:4122:75;;;-1:-1:-1;;;;;;490:4122:75;;;;;;;;;;2813:40:19;-1:-1:-1;;2813:40:19;2673:187::o",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608080604052600436101561001357600080fd5b60003560e01c9081630eb9b15a14610f47575080631703a01814610f295780636efd971c14610ee2578063715018a614610e62578063776d1a0114610dda5780638da5cb5b14610da65780639e33d81114610d1f578063a1908c6a146107f6578063a4f9edbf146103ad578063c1ba4e5914610361578063d4b839921461032d578063d92d4ea01461026b578063ea8f8c4b1461018a5763f2fde38b146100b957600080fd5b34610185576020600319360112610185576100d261101b565b6100da611130565b73ffffffffffffffffffffffffffffffffffffffff811615610101576100ff906111af565b005b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b600080fd5b3461018557600319360161016081126101855761010013610185576040516101b18161103e565b73ffffffffffffffffffffffffffffffffffffffff600435818116810361018557825263ffffffff90602435828116810361018557602084015260443590811681036101855760408301526064358181168103610185576060830152608435908116810361018557608082015260a4356003811015610185578161025b9160a061026794015260c43560c082015260e43560e082015261014435906101243590610104359061137f565b6040519182918261111d565b0390f35b346101855760206003193601126101855773ffffffffffffffffffffffffffffffffffffffff61029961101b565b6102a1611130565b1680158015610316575b6102ec576020817fc3dc08a46232e8d0a95510120799f1e68e0aa28c88730b8b0127d5ff4565b4b092600052606582526001604060002055604051908152a1005b60046040517fc3b48cf1000000000000000000000000000000000000000000000000000000008152fd5b5080600052606560205260406000205415156102ab565b3461018557600060031936011261018557602073ffffffffffffffffffffffffffffffffffffffff60675416604051908152f35b34610185576020600319360112610185577ff18f88786aae85a652aadb99a82462616489a33370c9bcc7b245906812ef7cd160206004356103a0611130565b80606655604051908152a1005b34610185576020806003193601126101855767ffffffffffffffff90600435828111610185576103e19036906004016110d6565b916000549060ff93848360081c1615918280936107ea575b80156107d4575b156107505760019383857fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00831617600055610721575b5081518201906080838784019303126101855761045486840161121c565b906104616040850161121c565b9060608501519081116101855784019383603f8601121561018557878501519361048a8561123d565b95610498604051978861105b565b858752898701906040829760051b8201019283116101855760408b9101915b8383106107095750505050608001519173ffffffffffffffffffffffffffffffffffffffff808092169216946104fc8a60005460081c166104f781611255565b611255565b610505336111af565b61050d611130565b82156106855761051e8392936111af565b61052e8a60005460081c16611255565b876000815b610644575b505061054b6000549a8b60081c16611255565b83606655857fffffffffffffffffffffffff00000000000000000000000000000000000000006067541617606755604051956080870192875289870152608060408701525180915260a0850193916000905b888a84841061062c578c918a7f683bbcd71b259e230416d974e6911d22117ec0de423b17abfcb832bafbd244bf8b808c8c60608301520390a16105dc57005b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff7f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989316600055604051908152a1005b8551831688529687019690940193919091019061059d565b829493945181101561067d57808461065f610674938661133c565b511660005260658c52826040600020556112e0565b81949394610533565b939293610538565b608489604051907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b81906107148461121c565b8152019101908a906104b7565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000166101011760005586610436565b608485604051907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152fd5b50303b1580156104005750600186851614610400565b506001868516106103f9565b34610185576101a0600319360112610185576101007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc3601126101855760405161083f8161103e565b60243573ffffffffffffffffffffffffffffffffffffffff8116810361018557815263ffffffff604435818116810361018557602083015260643573ffffffffffffffffffffffffffffffffffffffff81168103610185576040830152608435818116810361018557606083015260a435908116810361018557608082015260c43560038110156101855760a082015260e43560c08201526101043560e08201526101843567ffffffffffffffff8111610185576109019036906004016110d6565b90336000526065602052604060002054156102ec5761092e9061016435906101443590610124359061137f565b6007811015610b3f57600381141580610d14575b610cda575080518101906020818303126101855760208101519067ffffffffffffffff82116101855760208301603f83830101121561018557602082820101519061098c8261123d565b9361099a604051958661105b565b82855260208501906020810160408560051b87860101011161018557604085840101915b60408560051b87860101018310610b6e578660005b81518110156100ff5773ffffffffffffffffffffffffffffffffffffffff6067541673ffffffffffffffffffffffffffffffffffffffff610a14838561133c565b5151166020610a23848661133c565b510151916040610a33858761133c565b510151906060610a43868861133c565b510151936002851015610b3f576000602094610aa196604051978896879586947f468721a700000000000000000000000000000000000000000000000000000000865260048601526024850152608060448501526084840190610fd8565b90606483015203925af1908115610b3357600091610af8575b5015610ace57610ac9906112e0565b6109d3565b60046040517facfdb444000000000000000000000000000000000000000000000000000000008152fd5b90506020813d602011610b2b575b81610b136020938361105b565b81010312610185575180151581036101855783610aba565b3d9150610b06565b6040513d6000823e3d90fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b82519067ffffffffffffffff82116101855760a07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe083898801018503011261018557604051918260a081011067ffffffffffffffff60a085011117610cab5760a08301604052610be46040828a8901010161121c565b83528588018101606081015160208501526080015167ffffffffffffffff81116101855760208501605f82848c8b010101011215610185578060408a9284848b0101010151886060828487610c388361109c565b97610c46604051998a61105b565b83895260208d0195010101010111610185578a6060610c6f938660208701938d01010101610fb5565b604084015260a0818988010101519160028310156101855760608401929092528588010160c001516080830152908152602092830192016109be565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610d10906040519182917fe6ace38e0000000000000000000000000000000000000000000000000000000083526004830161111d565b0390fd5b506002811415610942565b346101855760206003193601126101855773ffffffffffffffffffffffffffffffffffffffff610d4d61101b565b610d55611130565b16806000526065602052604060002054156102ec576020817f665604bfe8ee87044ba1f1fd2fb47fe92983c9e187acbb442debf97d3e581921926000526065825260006040812055604051908152a1005b3461018557600060031936011261018557602073ffffffffffffffffffffffffffffffffffffffff60335416604051908152f35b346101855760206003193601126101855773ffffffffffffffffffffffffffffffffffffffff610e0861101b565b610e10611130565b16807fffffffffffffffffffffffff000000000000000000000000000000000000000060675416176067557f3bfb4bbf112628248058745a3c57e35b13369386e474b8e56c552f3063a4a196600080a2005b3461018557600060031936011261018557610e7b611130565b600073ffffffffffffffffffffffffffffffffffffffff6033547fffffffffffffffffffffffff00000000000000000000000000000000000000008116603355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346101855760206003193601126101855773ffffffffffffffffffffffffffffffffffffffff610f1061101b565b1660005260656020526020604060002054604051908152f35b34610185576000600319360112610185576020606654604051908152f35b3461018557600060031936011261018557604081019080821067ffffffffffffffff831117610cab5761026791604052601281527f53696d706c6551756f72756d41766174617200000000000000000000000000006020820152604051918291602083526020830190610fd8565b60005b838110610fc85750506000910152565b8181015183820152602001610fb8565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f60209361101481518092818752878088019101610fb5565b0116010190565b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361018557565b610100810190811067ffffffffffffffff821117610cab57604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117610cab57604052565b67ffffffffffffffff8111610cab57601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b81601f82011215610185578035906110ed8261109c565b926110fb604051948561105b565b8284526020838301011161018557816000926020809301838601378301015290565b919060208301926007821015610b3f5752565b73ffffffffffffffffffffffffffffffffffffffff60335416330361115157565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6033549073ffffffffffffffffffffffffffffffffffffffff80911691827fffffffffffffffffffffffff0000000000000000000000000000000000000000821617603355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b519073ffffffffffffffffffffffffffffffffffffffff8216820361018557565b67ffffffffffffffff8111610cab5760051b60200190565b1561125c57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461130d5760010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b80518210156113505760209160051b010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b91909260665490840180851161130d571015928361142e575b505060a0810180516003811015610b3f576002036113b857505050600690565b516003811015610b3f576001036113d0575050600490565b63ffffffff908160208201511643106000146113ee57505050600090565b6060810151821643101561140457505050600190565b608001511643101561141f571561141a57600290565b600190565b1561142957600390565b600590565b119150388061139856fea164736f6c6343000812000a",
    "sourceMap": "490:4122:75:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;490:4122:75;;;;;;;:::i;:::-;1303:62:19;;:::i;:::-;490:4122:75;;;2409:22:19;490:4122:75;;2503:8:19;;;:::i;:::-;490:4122:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;490:4122:75;;;;;;;;-1:-1:-1;490:4122:75;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;490:4122:75;;;;;;;;:::i;:::-;1303:62:19;;:::i;:::-;490:4122:75;1235:19:111;;:47;;;;490:4122:75;1231:74:111;;490:4122:75;;1350:19:111;490:4122:75;;;1315:6:111;490:4122:75;;319:1:104;490:4122:75;;;;;;;;;1350:19:111;490:4122:75;1231:74:111;490:4122:75;;;1291:14:111;;;;1235:47;490:4122:75;;;;1259:6:111;490:4122:75;;;;;;1259:22:111;;1235:47;;490:4122:75;;;;;-1:-1:-1;;490:4122:75;;;;;;;1192:21;490:4122;;;;;;;;;;;;;-1:-1:-1;;490:4122:75;;;;;863:22:78;490:4122:75;;;1303:62:19;;:::i;:::-;490:4122:75;832:16:78;490:4122:75;;;;;;863:22:78;490:4122:75;;;;;;;-1:-1:-1;;490:4122:75;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;3290:14:23;3336:34;;;;;;490:4122:75;3335:108:23;;;;490:4122:75;;;;3540:1:23;490:4122:75;;;;;;;;;3551:65:23;;490:4122:75;;;;2086:96;;;490:4122;2086:96;;;;490:4122;;;;;;2086:96;;;490:4122;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5355:69:23;490:4122:75;;;;;;5355:69:23;;;:::i;:::-;;:::i;:::-;1195:12:19;929:10:26;1195:12:19;:::i;:::-;1303:62;;:::i;:::-;2409:22;;490:4122:75;;2503:8:19;;;;;:::i;:::-;5355:69:23;490:4122:75;;;;;;5355:69:23;:::i;:::-;989:13:111;490:4122:75;989:13:111;3540:1:23;;;984:95:111;490:4122:75;;5355:69:23;490:4122:75;;;;;;;5355:69:23;:::i;:::-;490:4122:75;738:16:78;490:4122:75;;;2346:16;490:4122;;;2346:16;490:4122;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2377:63;490:4122;;;;;;;;2377:63;;;3636:99:23;;490:4122:75;3636:99:23;490:4122:75;3710:14:23;490:4122:75;;;;;;;;;3710:14:23;490:4122:75;;;;;;;;;;;;;;;;;;;;;;;1024:3:111;490:4122:75;;;;;1004:18:111;;;;;1050:10;;;1024:3;1050:10;;;:::i;:::-;490:4122:75;;;;1043:6:111;490:4122:75;;;;;;;1024:3:111;:::i;:::-;989:13;;;;;;1004:18;;;;;;490:4122:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;3551:65:23;490:4122:75;;;;;;3551:65:23;;;490:4122:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3335:108:23;3415:4;;1476:19:25;:23;3376:66:23;;3335:108;3376:66;490:4122:75;3441:1:23;490:4122:75;;;3425:17:23;3335:108;;3336:34;490:4122:75;3369:1:23;490:4122:75;;;3354:16:23;3336:34;;490:4122:75;;;;;-1:-1:-1;;490:4122:75;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1950:10:111;;490:4122:75;;1943:6:111;490:4122:75;;;;;;1943:27:111;1939:54;;3416:65:75;490:4122;;;;;;;;;3416:65;;:::i;:::-;490:4122;;;;;;;3496:41;;;3495:102;;;490:4122;3491:177;;490:4122;;;3953:40;;490:4122;;;;;;;;;3953:40;;490:4122;;;;;;;;3953:40;;490:4122;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;3953:40;490:4122;3953:40;;490:4122;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4008:13;490:4122;4048:3;490:4122;;4023:23;;;;;490:4122;4090:6;490:4122;;;4141:15;;;;:::i;:::-;;490:4122;;;4177:15;;;;:::i;:::-;;:21;490:4122;4216:15;490:4122;4216:15;;;;:::i;:::-;;:20;;4254:15;490:4122;4254:15;;;;:::i;:::-;;:25;490:4122;;;;;;;;;;;;;;;4082:211;;;;;;;490:4122;4082:211;;490:4122;4082:211;;490:4122;;;;;;;;;;;;;;;:::i;:::-;;;;;;4082:211;;;;;;;;;490:4122;4082:211;;;4048:3;4386:8;;4382:38;;4048:3;;;:::i;:::-;4008:13;;4382:38;490:4122;;;4403:17;;;;4082:211;;;490:4122;4082:211;;490:4122;4082:211;;;;;;490:4122;4082:211;;;:::i;:::-;;;490:4122;;;;;;;;;;;;4082:211;;;;;;-1:-1:-1;4082:211:75;;;490:4122;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;3953:40;;490:4122;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;3953:40;;490:4122;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3491:177;3620:37;490:4122;;;3620:37;;;;;;490:4122;3620:37;;;:::i;:::-;;;;3495:102;3543:53;3561:35;3543:53;;;3495:102;;490:4122;;;;;-1:-1:-1;;490:4122:75;;;;;;;;:::i;:::-;1303:62:19;;:::i;:::-;490:4122:75;;;;1528:6:111;490:4122:75;;;;;;1528:22:111;1524:49;;490:4122:75;;1619:20:111;490:4122:75;;;1528:6:111;490:4122:75;;;;;;;;;;;;1619:20:111;490:4122:75;;;;;;-1:-1:-1;;490:4122:75;;;;;;;1513:6:19;490:4122:75;;;;;;;;;;;;;-1:-1:-1;;490:4122:75;;;;;;;;:::i;:::-;1303:62:19;;:::i;:::-;490:4122:75;;;2606:16;490:4122;;;2606:16;490:4122;2637:18;490:4122;2637:18;;490:4122;;;;;;-1:-1:-1;;490:4122:75;;;;;1303:62:19;;:::i;:::-;490:4122:75;;2765:6:19;490:4122:75;;;;2765:6:19;490:4122:75;;2813:40:19;;;;490:4122:75;;;;;;-1:-1:-1;;490:4122:75;;;;;;;;:::i;:::-;;;;1882:6:111;490:4122:75;;;;;;;;;;;;;;;;;;-1:-1:-1;;490:4122:75;;;;;;533:21:78;490:4122:75;;;;;;;;;;;;-1:-1:-1;;490:4122:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;490:4122:75;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;490:4122:75;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::o;1599:130:19:-;490:4122:75;1513:6:19;490:4122:75;;929:10:26;1662:23:19;490:4122:75;;1599:130:19:o;490:4122:75:-;;;;;;;;;;;;;;;;;;;;;;;2673:187:19;2765:6;490:4122:75;;;;;;;;;;;;2765:6:19;490:4122:75;;2813:40:19;-1:-1:-1;2813:40:19;;2673:187::o;490:4122:75:-;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;1608:1168:78;;;;1848:6;490:4122:75;;;;;;;;;2980:34:78;;1833:84;;;;1608:1168;1931:27;;;;;490:4122:75;;;;;;;;1962:28:78;1931:59;1962:28;;2006:31;;;2013:24;2006:31;:::o;1927:843::-;490:4122:75;;;;;;;;2058:58:78;490:4122:75;;2132:30:78;;2139:23;2132:30;:::o;2054:716::-;490:4122:75;2198:25:78;;;;;490:4122:75;;2183:12:78;:40;2179:591;490:4122:75;;;2239:33:78;;;-1:-1:-1;2239:33:78;:::o;2179:591::-;2308:26;;;490:4122:75;;;2183:12:78;2293:41;490:4122:75;;;2350:34:78;;;490:4122:75;2350:34:78;:::o;2289:481::-;2420:26;;490:4122:75;;2183:12:78;2405:41;490:4122:75;;;2462:162:78;;;1962:28;2494:42;:::o;2462:162::-;490:4122:75;2575:34:78;:::o;2401:369::-;2640:130;;;490:4122:75;2668:30:78;:::o;2640:130::-;2736:23;2729:30;:::o;1833:84::-;3135:25;;-1:-1:-1;1833:84:78;;;",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "disableSpace(address)": "9e33d811",
    "enableSpace(address)": "d92d4ea0",
    "execute(uint256,(address,uint32,address,uint32,uint32,uint8,bytes32,uint256),uint256,uint256,uint256,bytes)": "a1908c6a",
    "getProposalStatus((address,uint32,address,uint32,uint32,uint8,bytes32,uint256),uint256,uint256,uint256)": "ea8f8c4b",
    "getStrategyType()": "0eb9b15a",
    "isSpaceEnabled(address)": "6efd971c",
    "owner()": "8da5cb5b",
    "quorum()": "1703a018",
    "renounceOwnership()": "715018a6",
    "setQuorum(uint256)": "c1ba4e59",
    "setTarget(address)": "776d1a01",
    "setUp(bytes)": "a4f9edbf",
    "target()": "d4b83992",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_spaces\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_quorum\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ExecutionFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"enum ProposalStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"name\":\"InvalidProposalStatus\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSpace\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"_spaces\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_quorum\",\"type\":\"uint256\"}],\"name\":\"AvatarExecutionStrategySetUp\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newQuorum\",\"type\":\"uint256\"}],\"name\":\"QuorumUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"space\",\"type\":\"address\"}],\"name\":\"SpaceDisabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"space\",\"type\":\"address\"}],\"name\":\"SpaceEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newTarget\",\"type\":\"address\"}],\"name\":\"TargetSet\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"space\",\"type\":\"address\"}],\"name\":\"disableSpace\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"space\",\"type\":\"address\"}],\"name\":\"enableSpace\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"startBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"contract IExecutionStrategy\",\"name\":\"executionStrategy\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"minEndBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"maxEndBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"enum FinalizationStatus\",\"name\":\"finalizationStatus\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"executionPayloadHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"activeVotingStrategies\",\"type\":\"uint256\"}],\"internalType\":\"struct Proposal\",\"name\":\"proposal\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"votesFor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votesAgainst\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votesAbstain\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"startBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"contract IExecutionStrategy\",\"name\":\"executionStrategy\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"minEndBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"maxEndBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"enum FinalizationStatus\",\"name\":\"finalizationStatus\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"executionPayloadHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"activeVotingStrategies\",\"type\":\"uint256\"}],\"internalType\":\"struct Proposal\",\"name\":\"proposal\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"votesFor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votesAgainst\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votesAbstain\",\"type\":\"uint256\"}],\"name\":\"getProposalStatus\",\"outputs\":[{\"internalType\":\"enum ProposalStatus\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStrategyType\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"space\",\"type\":\"address\"}],\"name\":\"isSpaceEnabled\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quorum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_quorum\",\"type\":\"uint256\"}],\"name\":\"setQuorum\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"}],\"name\":\"setTarget\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"initParams\",\"type\":\"bytes\"}],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"target\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An Avatar contract is any contract that implements the IAvatar interface, eg a Gnosis Safe.\",\"errors\":{\"InvalidProposalStatus(uint8)\":[{\"params\":{\"status\":\"The current status of the proposal.\"}}]},\"events\":{\"AvatarExecutionStrategySetUp(address,address,address[],uint256)\":{\"params\":{\"_owner\":\"Address of the owner of the strategy.\",\"_spaces\":\"Array of whitelisted space contracts.\",\"_target\":\"Address of the avatar that this module will pass transactions to.\"}},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"TargetSet(address)\":{\"params\":{\"newTarget\":\"The new target address.\"}}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_owner\":\"Address of the owner of this contract.\",\"_quorum\":\"The quorum required to execute a proposal.\",\"_spaces\":\"Array of whitelisted space contracts.\",\"_target\":\"Address of the avatar that this module will pass transactions to.\"}},\"disableSpace(address)\":{\"params\":{\"space\":\"Address of the space.\"}},\"enableSpace(address)\":{\"params\":{\"space\":\"Address of the space.\"}},\"execute(uint256,(address,uint32,address,uint32,uint32,uint8,bytes32,uint256),uint256,uint256,uint256,bytes)\":{\"params\":{\"payload\":\"The encoded transactions to execute.\",\"proposal\":\"The proposal to execute.\",\"votesAbstain\":\"The number of abstaining votes.\",\"votesAgainst\":\"The number of votes against the proposal.\",\"votesFor\":\"The number of votes in favor of the proposal.\"}},\"getProposalStatus((address,uint32,address,uint32,uint32,uint8,bytes32,uint256),uint256,uint256,uint256)\":{\"params\":{\"proposal\":\"The proposal struct.\",\"votesAbstain\":\"The number of votes abstaining from the proposal.\",\"votesAgainst\":\"The number of votes against the proposal.\",\"votesFor\":\"The number of votes for the proposal.\"}},\"isSpaceEnabled(address)\":{\"params\":{\"space\":\"Address of the space.\"},\"returns\":{\"_0\":\"uint256 whether the space is enabled.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setTarget(address)\":{\"params\":{\"_target\":\"The new target address.\"}},\"setUp(bytes)\":{\"params\":{\"initParams\":\"ABI encoded parameters, in the same order as the constructor.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Avatar Execution Strategy\",\"version\":1},\"userdoc\":{\"errors\":{\"ExecutionFailed()\":[{\"notice\":\"Thrown when the execution of a proposal fails.\"}],\"InvalidProposalStatus(uint8)\":[{\"notice\":\"Thrown when the current status of a proposal does not allow the desired action.\"}],\"InvalidSpace()\":[{\"notice\":\"Thrown if a space is not in the whitelist.\"}]},\"events\":{\"AvatarExecutionStrategySetUp(address,address,address[],uint256)\":{\"notice\":\"Emitted when a new Avatar Execution Strategy is initialized.\"},\"SpaceDisabled(address)\":{\"notice\":\"Emitted when a space is disabled.\"},\"SpaceEnabled(address)\":{\"notice\":\"Emitted when a space is enabled.\"},\"TargetSet(address)\":{\"notice\":\"Emitted each time the Target is set.\"}},\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Constructor\"},\"disableSpace(address)\":{\"notice\":\"Disable a space.\"},\"enableSpace(address)\":{\"notice\":\"Enable a space.\"},\"execute(uint256,(address,uint32,address,uint32,uint32,uint8,bytes32,uint256),uint256,uint256,uint256,bytes)\":{\"notice\":\"Executes a proposal from the avatar contract if the proposal outcome is accepted.         Must be called by a whitelisted space contract.\"},\"getProposalStatus((address,uint32,address,uint32,uint32,uint8,bytes32,uint256),uint256,uint256,uint256)\":{\"notice\":\"Returns the status of a proposal that uses a simple quorum.        A proposal is accepted if the for votes exceeds the against votes        and a quorum of (for + abstain) votes is reached.\"},\"getStrategyType()\":{\"notice\":\"Returns the trategy type string.\"},\"isSpaceEnabled(address)\":{\"notice\":\"Check if a space is enabled.\"},\"quorum()\":{\"notice\":\"The quorum required to execute a proposal using this strategy.\"},\"setTarget(address)\":{\"notice\":\"Sets the target address.\"},\"setUp(bytes)\":{\"notice\":\"Initialization function, should be called immediately after deploying a new proxy to this contract.\"},\"target()\":{\"notice\":\"Address of the avatar that this module will pass transactions to.\"}},\"notice\":\"Used to execute proposal transactions from an Avatar contract.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/execution-strategies/AvatarExecutionStrategy.sol\":\"AvatarExecutionStrategy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[\":@gnosis.pm/safe-contracts/=lib/safe-contracts/\",\":@murky/=lib/murky/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@prb/test/=lib/prb-test/src/\",\":@zodiac/=lib/zodiac/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":prb-test/=lib/prb-test/src/\",\":safe-contracts/=lib/safe-contracts/contracts/\",\":zodiac/=lib/zodiac/contracts/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xe798cadb41e2da274913e4b3183a80f50fb057a42238fe8467e077268100ec27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://899f850f7df5a270bccfb765d70069959ca1c20d3a7381c1c3bda8a3ffee1935\",\"dweb:/ipfs/QmVdnAqwyX2L3nX2HDA5WKGtVBFyH1nKE9A1k7fZnPBkhP\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/safe-contracts/contracts/common/Enum.sol\":{\"keccak256\":\"0x473e45b1a5cc47be494b0e123c9127f0c11c1e0992a321ae5a644c0bfdb2c14f\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://948e6d5a8bd7377f7795b6e28584eab9be5c0a8db240bf5e606744a175238c3d\",\"dweb:/ipfs/QmQQaUmQfpuejV41jbxKSTgEBYYCcVTjCsDMgf2htgz6ej\"]},\"lib/zodiac/contracts/interfaces/IAvatar.sol\":{\"keccak256\":\"0xcd5508ffe596eef8fbccfd5fc4f10a34397773547ce64e212d48b5212865ec1f\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://1655ba8b760132ebd702cc806fcdad50a44d320fbeca14be00e35b0171bd35cf\",\"dweb:/ipfs/QmcbB5HpCoEQCTHKWxHS3HpFmgaB4AcZxZYtvQk2QEyvN2\"]},\"src/execution-strategies/AvatarExecutionStrategy.sol\":{\"keccak256\":\"0x41511e3e9e763758679536541df713631b29a149bfdf2e913c23ae5ea361eb8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://212079056c75ecb62664b47d8d04ac98a023e0d47fa8dfba2a178507b3a7565d\",\"dweb:/ipfs/QmWi62s2WdXx8FD1gGMQdLVhgyTZ3M35NLM1RWZArue6BQ\"]},\"src/execution-strategies/SimpleQuorumExecutionStrategy.sol\":{\"keccak256\":\"0xc2a6b0f16db0bea374831e6595bd5aaaf3e25655509f465c96c2b10fbeebf96a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9a9190fa8ab92ea8b9b61f743c61409e1cd10cadd4a3d366e84c103a14bbbe58\",\"dweb:/ipfs/QmUSrWkooVgGo6RewmYK4DUV2iYa3HbBJfaMvcm2CEkdGu\"]},\"src/interfaces/IExecutionStrategy.sol\":{\"keccak256\":\"0x9b9679eff484ba280e87813d75011d80a3001c0aefb6f50c7a4ca5110c842173\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc195aca37c2e778fd58f367191cee3c16a9cf03eeb13be387d650e92866dfcd\",\"dweb:/ipfs/QmW4sJB3i3ZGUtJx3hUuuiVfEHVFvpxFufv3zM8QxuJPDu\"]},\"src/interfaces/execution-strategies/IExecutionStrategyErrors.sol\":{\"keccak256\":\"0x8a1c904a4f3573013dbe8b55e3322dc929c9d6e56dc4cfe7a8e7866834661430\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://358d063db15582f772bd49400a90b5087fa6768068581494f87a5ba1eb9ef20a\",\"dweb:/ipfs/QmSovbYrxxMXvyhWTfAuZYcUDhJ1VRZca4XjiE1e8vv9Yb\"]},\"src/types.sol\":{\"keccak256\":\"0xcdc5465d75fd7bdbde15892a0ef01f16fb8ab48907e4183acb860af91c93fee4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc76c16a6ecc59eb6dc5c53d032d691f8bc08b417d41ef87960a54713bbd2e7f\",\"dweb:/ipfs/QmZbvxxmZEyus5hX5ThYD6qDuaTjpWR8FLZLGTEDKKBDsb\"]},\"src/utils/SpaceManager.sol\":{\"keccak256\":\"0x49b571f018ca9b35a5714ca4cf78c59aab4d1cedfe25748ca71156fa76318a4c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3709747d17e7cf86261a1b1174d0ee6e485b3dfeaceb1de6d958c7f1307ac61b\",\"dweb:/ipfs/QmdfwyDix3o3ebPqnwbVJb8pEVcZknDAaaAEUxQoe4N7W3\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.18+commit.87f61d96"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_target",
              "type": "address"
            },
            {
              "internalType": "address[]",
              "name": "_spaces",
              "type": "address[]"
            },
            {
              "internalType": "uint256",
              "name": "_quorum",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ExecutionFailed"
        },
        {
          "inputs": [
            {
              "internalType": "enum ProposalStatus",
              "name": "status",
              "type": "uint8"
            }
          ],
          "type": "error",
          "name": "InvalidProposalStatus"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidSpace"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "_target",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "_spaces",
              "type": "address[]",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_quorum",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AvatarExecutionStrategySetUp",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newQuorum",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "QuorumUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "space",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SpaceDisabled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "space",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SpaceEnabled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newTarget",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "TargetSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "space",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "disableSpace"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "space",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "enableSpace"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "struct Proposal",
              "name": "proposal",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "author",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "startBlockNumber",
                  "type": "uint32"
                },
                {
                  "internalType": "contract IExecutionStrategy",
                  "name": "executionStrategy",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "minEndBlockNumber",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "maxEndBlockNumber",
                  "type": "uint32"
                },
                {
                  "internalType": "enum FinalizationStatus",
                  "name": "finalizationStatus",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "executionPayloadHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "activeVotingStrategies",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "votesFor",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "votesAgainst",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "votesAbstain",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "payload",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "execute"
        },
        {
          "inputs": [
            {
              "internalType": "struct Proposal",
              "name": "proposal",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "author",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "startBlockNumber",
                  "type": "uint32"
                },
                {
                  "internalType": "contract IExecutionStrategy",
                  "name": "executionStrategy",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "minEndBlockNumber",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "maxEndBlockNumber",
                  "type": "uint32"
                },
                {
                  "internalType": "enum FinalizationStatus",
                  "name": "finalizationStatus",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "executionPayloadHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "activeVotingStrategies",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "votesFor",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "votesAgainst",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "votesAbstain",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getProposalStatus",
          "outputs": [
            {
              "internalType": "enum ProposalStatus",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "getStrategyType",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "space",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isSpaceEnabled",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "quorum",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_quorum",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setQuorum"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_target",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setTarget"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "initParams",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "target",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "constructor": {
            "params": {
              "_owner": "Address of the owner of this contract.",
              "_quorum": "The quorum required to execute a proposal.",
              "_spaces": "Array of whitelisted space contracts.",
              "_target": "Address of the avatar that this module will pass transactions to."
            }
          },
          "disableSpace(address)": {
            "params": {
              "space": "Address of the space."
            }
          },
          "enableSpace(address)": {
            "params": {
              "space": "Address of the space."
            }
          },
          "execute(uint256,(address,uint32,address,uint32,uint32,uint8,bytes32,uint256),uint256,uint256,uint256,bytes)": {
            "params": {
              "payload": "The encoded transactions to execute.",
              "proposal": "The proposal to execute.",
              "votesAbstain": "The number of abstaining votes.",
              "votesAgainst": "The number of votes against the proposal.",
              "votesFor": "The number of votes in favor of the proposal."
            }
          },
          "getProposalStatus((address,uint32,address,uint32,uint32,uint8,bytes32,uint256),uint256,uint256,uint256)": {
            "params": {
              "proposal": "The proposal struct.",
              "votesAbstain": "The number of votes abstaining from the proposal.",
              "votesAgainst": "The number of votes against the proposal.",
              "votesFor": "The number of votes for the proposal."
            }
          },
          "isSpaceEnabled(address)": {
            "params": {
              "space": "Address of the space."
            },
            "returns": {
              "_0": "uint256 whether the space is enabled."
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "setTarget(address)": {
            "params": {
              "_target": "The new target address."
            }
          },
          "setUp(bytes)": {
            "params": {
              "initParams": "ABI encoded parameters, in the same order as the constructor."
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "constructor": {
            "notice": "Constructor"
          },
          "disableSpace(address)": {
            "notice": "Disable a space."
          },
          "enableSpace(address)": {
            "notice": "Enable a space."
          },
          "execute(uint256,(address,uint32,address,uint32,uint32,uint8,bytes32,uint256),uint256,uint256,uint256,bytes)": {
            "notice": "Executes a proposal from the avatar contract if the proposal outcome is accepted.         Must be called by a whitelisted space contract."
          },
          "getProposalStatus((address,uint32,address,uint32,uint32,uint8,bytes32,uint256),uint256,uint256,uint256)": {
            "notice": "Returns the status of a proposal that uses a simple quorum.        A proposal is accepted if the for votes exceeds the against votes        and a quorum of (for + abstain) votes is reached."
          },
          "getStrategyType()": {
            "notice": "Returns the trategy type string."
          },
          "isSpaceEnabled(address)": {
            "notice": "Check if a space is enabled."
          },
          "quorum()": {
            "notice": "The quorum required to execute a proposal using this strategy."
          },
          "setTarget(address)": {
            "notice": "Sets the target address."
          },
          "setUp(bytes)": {
            "notice": "Initialization function, should be called immediately after deploying a new proxy to this contract."
          },
          "target()": {
            "notice": "Address of the avatar that this module will pass transactions to."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@gnosis.pm/safe-contracts/=lib/safe-contracts/",
        "@murky/=lib/murky/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@prb/test/=lib/prb-test/src/",
        "@zodiac/=lib/zodiac/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-gas-snapshot/=lib/forge-gas-snapshot/src/",
        "forge-std/=lib/forge-std/src/",
        "murky/=lib/murky/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "prb-test/=lib/prb-test/src/",
        "safe-contracts/=lib/safe-contracts/contracts/",
        "zodiac/=lib/zodiac/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 10000
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "src/execution-strategies/AvatarExecutionStrategy.sol": "AvatarExecutionStrategy"
      },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888",
        "urls": [
          "bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a",
          "dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0xe798cadb41e2da274913e4b3183a80f50fb057a42238fe8467e077268100ec27",
        "urls": [
          "bzz-raw://899f850f7df5a270bccfb765d70069959ca1c20d3a7381c1c3bda8a3ffee1935",
          "dweb:/ipfs/QmVdnAqwyX2L3nX2HDA5WKGtVBFyH1nKE9A1k7fZnPBkhP"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183",
        "urls": [
          "bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06",
          "dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/safe-contracts/contracts/common/Enum.sol": {
        "keccak256": "0x473e45b1a5cc47be494b0e123c9127f0c11c1e0992a321ae5a644c0bfdb2c14f",
        "urls": [
          "bzz-raw://948e6d5a8bd7377f7795b6e28584eab9be5c0a8db240bf5e606744a175238c3d",
          "dweb:/ipfs/QmQQaUmQfpuejV41jbxKSTgEBYYCcVTjCsDMgf2htgz6ej"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/zodiac/contracts/interfaces/IAvatar.sol": {
        "keccak256": "0xcd5508ffe596eef8fbccfd5fc4f10a34397773547ce64e212d48b5212865ec1f",
        "urls": [
          "bzz-raw://1655ba8b760132ebd702cc806fcdad50a44d320fbeca14be00e35b0171bd35cf",
          "dweb:/ipfs/QmcbB5HpCoEQCTHKWxHS3HpFmgaB4AcZxZYtvQk2QEyvN2"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/execution-strategies/AvatarExecutionStrategy.sol": {
        "keccak256": "0x41511e3e9e763758679536541df713631b29a149bfdf2e913c23ae5ea361eb8d",
        "urls": [
          "bzz-raw://212079056c75ecb62664b47d8d04ac98a023e0d47fa8dfba2a178507b3a7565d",
          "dweb:/ipfs/QmWi62s2WdXx8FD1gGMQdLVhgyTZ3M35NLM1RWZArue6BQ"
        ],
        "license": "MIT"
      },
      "src/execution-strategies/SimpleQuorumExecutionStrategy.sol": {
        "keccak256": "0xc2a6b0f16db0bea374831e6595bd5aaaf3e25655509f465c96c2b10fbeebf96a",
        "urls": [
          "bzz-raw://9a9190fa8ab92ea8b9b61f743c61409e1cd10cadd4a3d366e84c103a14bbbe58",
          "dweb:/ipfs/QmUSrWkooVgGo6RewmYK4DUV2iYa3HbBJfaMvcm2CEkdGu"
        ],
        "license": "MIT"
      },
      "src/interfaces/IExecutionStrategy.sol": {
        "keccak256": "0x9b9679eff484ba280e87813d75011d80a3001c0aefb6f50c7a4ca5110c842173",
        "urls": [
          "bzz-raw://cc195aca37c2e778fd58f367191cee3c16a9cf03eeb13be387d650e92866dfcd",
          "dweb:/ipfs/QmW4sJB3i3ZGUtJx3hUuuiVfEHVFvpxFufv3zM8QxuJPDu"
        ],
        "license": "MIT"
      },
      "src/interfaces/execution-strategies/IExecutionStrategyErrors.sol": {
        "keccak256": "0x8a1c904a4f3573013dbe8b55e3322dc929c9d6e56dc4cfe7a8e7866834661430",
        "urls": [
          "bzz-raw://358d063db15582f772bd49400a90b5087fa6768068581494f87a5ba1eb9ef20a",
          "dweb:/ipfs/QmSovbYrxxMXvyhWTfAuZYcUDhJ1VRZca4XjiE1e8vv9Yb"
        ],
        "license": "MIT"
      },
      "src/types.sol": {
        "keccak256": "0xcdc5465d75fd7bdbde15892a0ef01f16fb8ab48907e4183acb860af91c93fee4",
        "urls": [
          "bzz-raw://bc76c16a6ecc59eb6dc5c53d032d691f8bc08b417d41ef87960a54713bbd2e7f",
          "dweb:/ipfs/QmZbvxxmZEyus5hX5ThYD6qDuaTjpWR8FLZLGTEDKKBDsb"
        ],
        "license": "MIT"
      },
      "src/utils/SpaceManager.sol": {
        "keccak256": "0x49b571f018ca9b35a5714ca4cf78c59aab4d1cedfe25748ca71156fa76318a4c",
        "urls": [
          "bzz-raw://3709747d17e7cf86261a1b1174d0ee6e485b3dfeaceb1de6d958c7f1307ac61b",
          "dweb:/ipfs/QmdfwyDix3o3ebPqnwbVJb8pEVcZknDAaaAEUxQoe4N7W3"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/execution-strategies/AvatarExecutionStrategy.sol",
    "id": 39014,
    "exportedSymbols": {
      "AvatarExecutionStrategy": [
        39013
      ],
      "IAvatar": [
        35789
      ],
      "MetaTransaction": [
        43220
      ],
      "Proposal": [
        43182
      ],
      "ProposalStatus": [
        43204
      ],
      "SimpleQuorumExecutionStrategy": [
        39655
      ]
    },
    "nodeType": "SourceUnit",
    "src": "33:4580:75",
    "nodes": [
      {
        "id": 38752,
        "nodeType": "PragmaDirective",
        "src": "33:24:75",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".18"
        ]
      },
      {
        "id": 38754,
        "nodeType": "ImportDirective",
        "src": "59:57:75",
        "nodes": [],
        "absolutePath": "lib/zodiac/contracts/interfaces/IAvatar.sol",
        "file": "@zodiac/interfaces/IAvatar.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 39014,
        "sourceUnit": 35790,
        "symbolAliases": [
          {
            "foreign": {
              "id": 38753,
              "name": "IAvatar",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 35789,
              "src": "68:7:75",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 38756,
        "nodeType": "ImportDirective",
        "src": "117:84:75",
        "nodes": [],
        "absolutePath": "src/execution-strategies/SimpleQuorumExecutionStrategy.sol",
        "file": "./SimpleQuorumExecutionStrategy.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 39014,
        "sourceUnit": 39656,
        "symbolAliases": [
          {
            "foreign": {
              "id": 38755,
              "name": "SimpleQuorumExecutionStrategy",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 39655,
              "src": "126:29:75",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 38760,
        "nodeType": "ImportDirective",
        "src": "202:73:75",
        "nodes": [],
        "absolutePath": "src/types.sol",
        "file": "../types.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 39014,
        "sourceUnit": 43281,
        "symbolAliases": [
          {
            "foreign": {
              "id": 38757,
              "name": "MetaTransaction",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 43220,
              "src": "211:15:75",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 38758,
              "name": "Proposal",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 43182,
              "src": "228:8:75",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 38759,
              "name": "ProposalStatus",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 43204,
              "src": "238:14:75",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 39013,
        "nodeType": "ContractDefinition",
        "src": "490:4122:75",
        "nodes": [
          {
            "id": 38775,
            "nodeType": "EventDefinition",
            "src": "849:104:75",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 38764,
              "nodeType": "StructuredDocumentation",
              "src": "562:282:75",
              "text": "@notice Emitted when a new Avatar Execution Strategy is initialized.\n @param _owner Address of the owner of the strategy.\n @param _target Address of the avatar that this module will pass transactions to.\n @param _spaces Array of whitelisted space contracts."
            },
            "eventSelector": "683bbcd71b259e230416d974e6911d22117ec0de423b17abfcb832bafbd244bf",
            "name": "AvatarExecutionStrategySetUp",
            "nameLocation": "855:28:75",
            "parameters": {
              "id": 38774,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38766,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "892:6:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 38775,
                  "src": "884:14:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38765,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "884:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38768,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_target",
                  "nameLocation": "908:7:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 38775,
                  "src": "900:15:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38767,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "900:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38771,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_spaces",
                  "nameLocation": "927:7:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 38775,
                  "src": "917:17:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 38769,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "917:7:75",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 38770,
                    "nodeType": "ArrayTypeName",
                    "src": "917:9:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38773,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_quorum",
                  "nameLocation": "944:7:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 38775,
                  "src": "936:15:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38772,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "936:7:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "883:69:75"
            }
          },
          {
            "id": 38780,
            "nodeType": "EventDefinition",
            "src": "1061:43:75",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 38776,
              "nodeType": "StructuredDocumentation",
              "src": "959:97:75",
              "text": "@notice Emitted each time the Target is set.\n @param newTarget The new target address."
            },
            "eventSelector": "3bfb4bbf112628248058745a3c57e35b13369386e474b8e56c552f3063a4a196",
            "name": "TargetSet",
            "nameLocation": "1067:9:75",
            "parameters": {
              "id": 38779,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38778,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newTarget",
                  "nameLocation": "1093:9:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 38780,
                  "src": "1077:25:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38777,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1077:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1076:27:75"
            }
          },
          {
            "id": 38783,
            "nodeType": "VariableDeclaration",
            "src": "1192:21:75",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 38781,
              "nodeType": "StructuredDocumentation",
              "src": "1110:77:75",
              "text": "@notice Address of the avatar that this module will pass transactions to."
            },
            "functionSelector": "d4b83992",
            "mutability": "mutable",
            "name": "target",
            "nameLocation": "1207:6:75",
            "scope": 39013,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 38782,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1192:7:75",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 38811,
            "nodeType": "FunctionDefinition",
            "src": "1525:203:75",
            "nodes": [],
            "body": {
              "id": 38810,
              "nodeType": "Block",
              "src": "1613:115:75",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    38797
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 38797,
                      "mutability": "mutable",
                      "name": "initParams",
                      "nameLocation": "1636:10:75",
                      "nodeType": "VariableDeclaration",
                      "scope": 38810,
                      "src": "1623:23:75",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 38796,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1623:5:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 38805,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 38800,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38786,
                        "src": "1660:6:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 38801,
                        "name": "_target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38788,
                        "src": "1668:7:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 38802,
                        "name": "_spaces",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38791,
                        "src": "1677:7:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "id": 38803,
                        "name": "_quorum",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38793,
                        "src": "1686:7:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 38798,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "1649:3:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 38799,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1653:6:75",
                      "memberName": "encode",
                      "nodeType": "MemberAccess",
                      "src": "1649:10:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 38804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1649:45:75",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1623:71:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 38807,
                        "name": "initParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38797,
                        "src": "1710:10:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 38806,
                      "name": "setUp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38870,
                      "src": "1704:5:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory)"
                      }
                    },
                    "id": 38808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1704:17:75",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38809,
                  "nodeType": "ExpressionStatement",
                  "src": "1704:17:75"
                }
              ]
            },
            "documentation": {
              "id": 38784,
              "nodeType": "StructuredDocumentation",
              "src": "1220:300:75",
              "text": "@notice Constructor\n @param _owner Address of the owner of this contract.\n @param _target Address of the avatar that this module will pass transactions to.\n @param _spaces Array of whitelisted space contracts.\n @param _quorum The quorum required to execute a proposal."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 38794,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38786,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "1545:6:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 38811,
                  "src": "1537:14:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38785,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1537:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38788,
                  "mutability": "mutable",
                  "name": "_target",
                  "nameLocation": "1561:7:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 38811,
                  "src": "1553:15:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38787,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1553:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38791,
                  "mutability": "mutable",
                  "name": "_spaces",
                  "nameLocation": "1587:7:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 38811,
                  "src": "1570:24:75",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 38789,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1570:7:75",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 38790,
                    "nodeType": "ArrayTypeName",
                    "src": "1570:9:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38793,
                  "mutability": "mutable",
                  "name": "_quorum",
                  "nameLocation": "1604:7:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 38811,
                  "src": "1596:15:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38792,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1596:7:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1536:76:75"
            },
            "returnParameters": {
              "id": 38795,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1613:0:75"
            },
            "scope": 39013,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 38870,
            "nodeType": "FunctionDefinition",
            "src": "1938:509:75",
            "nodes": [],
            "body": {
              "id": 38869,
              "nodeType": "Block",
              "src": "1997:450:75",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    38820,
                    38822,
                    38825,
                    38827
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 38820,
                      "mutability": "mutable",
                      "name": "_owner",
                      "nameLocation": "2016:6:75",
                      "nodeType": "VariableDeclaration",
                      "scope": 38869,
                      "src": "2008:14:75",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 38819,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2008:7:75",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 38822,
                      "mutability": "mutable",
                      "name": "_target",
                      "nameLocation": "2032:7:75",
                      "nodeType": "VariableDeclaration",
                      "scope": 38869,
                      "src": "2024:15:75",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 38821,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2024:7:75",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 38825,
                      "mutability": "mutable",
                      "name": "_spaces",
                      "nameLocation": "2058:7:75",
                      "nodeType": "VariableDeclaration",
                      "scope": 38869,
                      "src": "2041:24:75",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 38823,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2041:7:75",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 38824,
                        "nodeType": "ArrayTypeName",
                        "src": "2041:9:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 38827,
                      "mutability": "mutable",
                      "name": "_quorum",
                      "nameLocation": "2075:7:75",
                      "nodeType": "VariableDeclaration",
                      "scope": 38869,
                      "src": "2067:15:75",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 38826,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2067:7:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 38842,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 38830,
                        "name": "initParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38814,
                        "src": "2110:10:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 38832,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2135:7:75",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 38831,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2135:7:75",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 38834,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2144:7:75",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 38833,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2144:7:75",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "baseExpression": {
                              "id": 38836,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2153:7:75",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 38835,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2153:7:75",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 38837,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2153:9:75",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_array$_t_address_$dyn_memory_ptr_$",
                              "typeString": "type(address[] memory)"
                            }
                          },
                          {
                            "id": 38839,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2164:7:75",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 38838,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2164:7:75",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 38840,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2134:38:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_address_$_$_t_type$_t_array$_t_address_$dyn_memory_ptr_$_$_t_type$_t_uint256_$_$",
                          "typeString": "tuple(type(address),type(address),type(address[] memory),type(uint256))"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_address_$_$_t_type$_t_array$_t_address_$dyn_memory_ptr_$_$_t_type$_t_uint256_$_$",
                          "typeString": "tuple(type(address),type(address),type(address[] memory),type(uint256))"
                        }
                      ],
                      "expression": {
                        "id": 38828,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "2086:3:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 38829,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "2090:6:75",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "2086:10:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 38841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2086:96:75",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_payable_$_t_address_payable_$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$",
                      "typeString": "tuple(address payable,address payable,address[] memory,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2007:175:75"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 38843,
                      "name": "__Ownable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25646,
                      "src": "2192:14:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 38844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2192:16:75",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38845,
                  "nodeType": "ExpressionStatement",
                  "src": "2192:16:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 38847,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38820,
                        "src": "2236:6:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 38846,
                      "name": "transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25725,
                      "src": "2218:17:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 38848,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2218:25:75",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38849,
                  "nodeType": "ExpressionStatement",
                  "src": "2218:25:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 38851,
                        "name": "_spaces",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38825,
                        "src": "2273:7:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      ],
                      "id": 38850,
                      "name": "__SpaceManager_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44247,
                      "src": "2253:19:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address[] memory)"
                      }
                    },
                    "id": 38852,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2253:28:75",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38853,
                  "nodeType": "ExpressionStatement",
                  "src": "2253:28:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 38855,
                        "name": "_quorum",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38827,
                        "src": "2328:7:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 38854,
                      "name": "__SimpleQuorumExecutionStrategy_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39481,
                      "src": "2291:36:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 38856,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2291:45:75",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38857,
                  "nodeType": "ExpressionStatement",
                  "src": "2291:45:75"
                },
                {
                  "expression": {
                    "id": 38860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 38858,
                      "name": "target",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38783,
                      "src": "2346:6:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 38859,
                      "name": "_target",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38822,
                      "src": "2355:7:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2346:16:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 38861,
                  "nodeType": "ExpressionStatement",
                  "src": "2346:16:75"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 38863,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38820,
                        "src": "2406:6:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 38864,
                        "name": "_target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38822,
                        "src": "2414:7:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 38865,
                        "name": "_spaces",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38825,
                        "src": "2423:7:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "id": 38866,
                        "name": "_quorum",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38827,
                        "src": "2432:7:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 38862,
                      "name": "AvatarExecutionStrategySetUp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38775,
                      "src": "2377:28:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address[] memory,uint256)"
                      }
                    },
                    "id": 38867,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2377:63:75",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38868,
                  "nodeType": "EmitStatement",
                  "src": "2372:68:75"
                }
              ]
            },
            "documentation": {
              "id": 38812,
              "nodeType": "StructuredDocumentation",
              "src": "1734:199:75",
              "text": "@notice Initialization function, should be called immediately after deploying a new proxy to this contract.\n @param initParams ABI encoded parameters, in the same order as the constructor."
            },
            "functionSelector": "a4f9edbf",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 38817,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 38816,
                  "name": "initializer",
                  "nameLocations": [
                    "1985:11:75"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 26211,
                  "src": "1985:11:75"
                },
                "nodeType": "ModifierInvocation",
                "src": "1985:11:75"
              }
            ],
            "name": "setUp",
            "nameLocation": "1947:5:75",
            "parameters": {
              "id": 38815,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38814,
                  "mutability": "mutable",
                  "name": "initParams",
                  "nameLocation": "1966:10:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 38870,
                  "src": "1953:23:75",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 38813,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1953:5:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1952:25:75"
            },
            "returnParameters": {
              "id": 38818,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1997:0:75"
            },
            "scope": 39013,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 38887,
            "nodeType": "FunctionDefinition",
            "src": "2541:121:75",
            "nodes": [],
            "body": {
              "id": 38886,
              "nodeType": "Block",
              "src": "2596:66:75",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 38880,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 38878,
                      "name": "target",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38783,
                      "src": "2606:6:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 38879,
                      "name": "_target",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38873,
                      "src": "2615:7:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2606:16:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 38881,
                  "nodeType": "ExpressionStatement",
                  "src": "2606:16:75"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 38883,
                        "name": "_target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38873,
                        "src": "2647:7:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 38882,
                      "name": "TargetSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38780,
                      "src": "2637:9:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 38884,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2637:18:75",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38885,
                  "nodeType": "EmitStatement",
                  "src": "2632:23:75"
                }
              ]
            },
            "documentation": {
              "id": 38871,
              "nodeType": "StructuredDocumentation",
              "src": "2453:83:75",
              "text": "@notice Sets the target address.\n @param _target The new target address."
            },
            "functionSelector": "776d1a01",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 38876,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 38875,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "2586:9:75"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 25665,
                  "src": "2586:9:75"
                },
                "nodeType": "ModifierInvocation",
                "src": "2586:9:75"
              }
            ],
            "name": "setTarget",
            "nameLocation": "2550:9:75",
            "parameters": {
              "id": 38874,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38873,
                  "mutability": "mutable",
                  "name": "_target",
                  "nameLocation": "2568:7:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 38887,
                  "src": "2560:15:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38872,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2560:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2559:17:75"
            },
            "returnParameters": {
              "id": 38877,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2596:0:75"
            },
            "scope": 39013,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 38939,
            "nodeType": "FunctionDefinition",
            "src": "3139:562:75",
            "nodes": [],
            "body": {
              "id": 38938,
              "nodeType": "Block",
              "src": "3374:327:75",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    38909
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 38909,
                      "mutability": "mutable",
                      "name": "proposalStatus",
                      "nameLocation": "3399:14:75",
                      "nodeType": "VariableDeclaration",
                      "scope": 38938,
                      "src": "3384:29:75",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProposalStatus_$43204",
                        "typeString": "enum ProposalStatus"
                      },
                      "typeName": {
                        "id": 38908,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 38907,
                          "name": "ProposalStatus",
                          "nameLocations": [
                            "3384:14:75"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 43204,
                          "src": "3384:14:75"
                        },
                        "referencedDeclaration": 43204,
                        "src": "3384:14:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ProposalStatus_$43204",
                          "typeString": "enum ProposalStatus"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 38916,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 38911,
                        "name": "proposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38893,
                        "src": "3434:8:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$43182_memory_ptr",
                          "typeString": "struct Proposal memory"
                        }
                      },
                      {
                        "id": 38912,
                        "name": "votesFor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38895,
                        "src": "3444:8:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 38913,
                        "name": "votesAgainst",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38897,
                        "src": "3454:12:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 38914,
                        "name": "votesAbstain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38899,
                        "src": "3468:12:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Proposal_$43182_memory_ptr",
                          "typeString": "struct Proposal memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 38910,
                      "name": "getProposalStatus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39612,
                      "src": "3416:17:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Proposal_$43182_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_enum$_ProposalStatus_$43204_$",
                        "typeString": "function (struct Proposal memory,uint256,uint256,uint256) view returns (enum ProposalStatus)"
                      }
                    },
                    "id": 38915,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3416:65:75",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProposalStatus_$43204",
                      "typeString": "enum ProposalStatus"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3384:97:75"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 38927,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_enum$_ProposalStatus_$43204",
                            "typeString": "enum ProposalStatus"
                          },
                          "id": 38920,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 38917,
                            "name": "proposalStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38909,
                            "src": "3496:14:75",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ProposalStatus_$43204",
                              "typeString": "enum ProposalStatus"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "expression": {
                              "id": 38918,
                              "name": "ProposalStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 43204,
                              "src": "3514:14:75",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_ProposalStatus_$43204_$",
                                "typeString": "type(enum ProposalStatus)"
                              }
                            },
                            "id": 38919,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "3529:8:75",
                            "memberName": "Accepted",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 43200,
                            "src": "3514:23:75",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ProposalStatus_$43204",
                              "typeString": "enum ProposalStatus"
                            }
                          },
                          "src": "3496:41:75",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 38921,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3495:43:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_enum$_ProposalStatus_$43204",
                            "typeString": "enum ProposalStatus"
                          },
                          "id": 38925,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 38922,
                            "name": "proposalStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38909,
                            "src": "3543:14:75",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ProposalStatus_$43204",
                              "typeString": "enum ProposalStatus"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "expression": {
                              "id": 38923,
                              "name": "ProposalStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 43204,
                              "src": "3561:14:75",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_ProposalStatus_$43204_$",
                                "typeString": "type(enum ProposalStatus)"
                              }
                            },
                            "id": 38924,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "3576:20:75",
                            "memberName": "VotingPeriodAccepted",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 43199,
                            "src": "3561:35:75",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ProposalStatus_$43204",
                              "typeString": "enum ProposalStatus"
                            }
                          },
                          "src": "3543:53:75",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 38926,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3542:55:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3495:102:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 38933,
                  "nodeType": "IfStatement",
                  "src": "3491:177:75",
                  "trueBody": {
                    "id": 38932,
                    "nodeType": "Block",
                    "src": "3599:69:75",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 38929,
                              "name": "proposalStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 38909,
                              "src": "3642:14:75",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ProposalStatus_$43204",
                                "typeString": "enum ProposalStatus"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_ProposalStatus_$43204",
                                "typeString": "enum ProposalStatus"
                              }
                            ],
                            "id": 38928,
                            "name": "InvalidProposalStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42486,
                            "src": "3620:21:75",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_enum$_ProposalStatus_$43204_$returns$__$",
                              "typeString": "function (enum ProposalStatus) pure"
                            }
                          },
                          "id": 38930,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3620:37:75",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 38931,
                        "nodeType": "RevertStatement",
                        "src": "3613:44:75"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 38935,
                        "name": "payload",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38901,
                        "src": "3686:7:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 38934,
                      "name": "_execute",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39002,
                      "src": "3677:8:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory)"
                      }
                    },
                    "id": 38936,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3677:17:75",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38937,
                  "nodeType": "ExpressionStatement",
                  "src": "3677:17:75"
                }
              ]
            },
            "baseFunctions": [
              39514
            ],
            "documentation": {
              "id": 38888,
              "nodeType": "StructuredDocumentation",
              "src": "2668:466:75",
              "text": "@notice Executes a proposal from the avatar contract if the proposal outcome is accepted.\n         Must be called by a whitelisted space contract.\n @param proposal The proposal to execute.\n @param votesFor The number of votes in favor of the proposal.\n @param votesAgainst The number of votes against the proposal.\n @param votesAbstain The number of abstaining votes.\n @param payload The encoded transactions to execute."
            },
            "functionSelector": "a1908c6a",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 38905,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 38904,
                  "name": "onlySpace",
                  "nameLocations": [
                    "3364:9:75"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 44338,
                  "src": "3364:9:75"
                },
                "nodeType": "ModifierInvocation",
                "src": "3364:9:75"
              }
            ],
            "name": "execute",
            "nameLocation": "3148:7:75",
            "overrides": {
              "id": 38903,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3355:8:75"
            },
            "parameters": {
              "id": 38902,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38890,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 38939,
                  "src": "3165:7:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38889,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3165:7:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38893,
                  "mutability": "mutable",
                  "name": "proposal",
                  "nameLocation": "3215:8:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 38939,
                  "src": "3199:24:75",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Proposal_$43182_memory_ptr",
                    "typeString": "struct Proposal"
                  },
                  "typeName": {
                    "id": 38892,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 38891,
                      "name": "Proposal",
                      "nameLocations": [
                        "3199:8:75"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 43182,
                      "src": "3199:8:75"
                    },
                    "referencedDeclaration": 43182,
                    "src": "3199:8:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proposal_$43182_storage_ptr",
                      "typeString": "struct Proposal"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38895,
                  "mutability": "mutable",
                  "name": "votesFor",
                  "nameLocation": "3241:8:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 38939,
                  "src": "3233:16:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38894,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3233:7:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38897,
                  "mutability": "mutable",
                  "name": "votesAgainst",
                  "nameLocation": "3267:12:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 38939,
                  "src": "3259:20:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38896,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3259:7:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38899,
                  "mutability": "mutable",
                  "name": "votesAbstain",
                  "nameLocation": "3297:12:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 38939,
                  "src": "3289:20:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38898,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3289:7:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38901,
                  "mutability": "mutable",
                  "name": "payload",
                  "nameLocation": "3332:7:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 38939,
                  "src": "3319:20:75",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 38900,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3319:5:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3155:190:75"
            },
            "returnParameters": {
              "id": 38906,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3374:0:75"
            },
            "scope": 39013,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 39002,
            "nodeType": "FunctionDefinition",
            "src": "3854:583:75",
            "nodes": [],
            "body": {
              "id": 39001,
              "nodeType": "Block",
              "src": "3903:534:75",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    38949
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 38949,
                      "mutability": "mutable",
                      "name": "transactions",
                      "nameLocation": "3938:12:75",
                      "nodeType": "VariableDeclaration",
                      "scope": 39001,
                      "src": "3913:37:75",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_MetaTransaction_$43220_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct MetaTransaction[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 38947,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 38946,
                            "name": "MetaTransaction",
                            "nameLocations": [
                              "3913:15:75"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 43220,
                            "src": "3913:15:75"
                          },
                          "referencedDeclaration": 43220,
                          "src": "3913:15:75",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MetaTransaction_$43220_storage_ptr",
                            "typeString": "struct MetaTransaction"
                          }
                        },
                        "id": 38948,
                        "nodeType": "ArrayTypeName",
                        "src": "3913:17:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_MetaTransaction_$43220_storage_$dyn_storage_ptr",
                          "typeString": "struct MetaTransaction[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 38957,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 38952,
                        "name": "payload",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38942,
                        "src": "3964:7:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "baseExpression": {
                              "id": 38953,
                              "name": "MetaTransaction",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 43220,
                              "src": "3974:15:75",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_MetaTransaction_$43220_storage_ptr_$",
                                "typeString": "type(struct MetaTransaction storage pointer)"
                              }
                            },
                            "id": 38954,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3974:17:75",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_array$_t_struct$_MetaTransaction_$43220_memory_ptr_$dyn_memory_ptr_$",
                              "typeString": "type(struct MetaTransaction memory[] memory)"
                            }
                          }
                        ],
                        "id": 38955,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "3973:19:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_array$_t_struct$_MetaTransaction_$43220_memory_ptr_$dyn_memory_ptr_$",
                          "typeString": "type(struct MetaTransaction memory[] memory)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_array$_t_struct$_MetaTransaction_$43220_memory_ptr_$dyn_memory_ptr_$",
                          "typeString": "type(struct MetaTransaction memory[] memory)"
                        }
                      ],
                      "expression": {
                        "id": 38950,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "3953:3:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 38951,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "3957:6:75",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "3953:10:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 38956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3953:40:75",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_MetaTransaction_$43220_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct MetaTransaction memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3913:80:75"
                },
                {
                  "body": {
                    "id": 38999,
                    "nodeType": "Block",
                    "src": "4053:378:75",
                    "statements": [
                      {
                        "assignments": [
                          38970
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 38970,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "4072:7:75",
                            "nodeType": "VariableDeclaration",
                            "scope": 38999,
                            "src": "4067:12:75",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 38969,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "4067:4:75",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 38992,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 38975,
                                  "name": "transactions",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38949,
                                  "src": "4141:12:75",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_MetaTransaction_$43220_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "struct MetaTransaction memory[] memory"
                                  }
                                },
                                "id": 38977,
                                "indexExpression": {
                                  "id": 38976,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38959,
                                  "src": "4154:1:75",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4141:15:75",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_MetaTransaction_$43220_memory_ptr",
                                  "typeString": "struct MetaTransaction memory"
                                }
                              },
                              "id": 38978,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4157:2:75",
                              "memberName": "to",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 43210,
                              "src": "4141:18:75",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 38979,
                                  "name": "transactions",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38949,
                                  "src": "4177:12:75",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_MetaTransaction_$43220_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "struct MetaTransaction memory[] memory"
                                  }
                                },
                                "id": 38981,
                                "indexExpression": {
                                  "id": 38980,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38959,
                                  "src": "4190:1:75",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4177:15:75",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_MetaTransaction_$43220_memory_ptr",
                                  "typeString": "struct MetaTransaction memory"
                                }
                              },
                              "id": 38982,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4193:5:75",
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 43212,
                              "src": "4177:21:75",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 38983,
                                  "name": "transactions",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38949,
                                  "src": "4216:12:75",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_MetaTransaction_$43220_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "struct MetaTransaction memory[] memory"
                                  }
                                },
                                "id": 38985,
                                "indexExpression": {
                                  "id": 38984,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38959,
                                  "src": "4229:1:75",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4216:15:75",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_MetaTransaction_$43220_memory_ptr",
                                  "typeString": "struct MetaTransaction memory"
                                }
                              },
                              "id": 38986,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4232:4:75",
                              "memberName": "data",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 43214,
                              "src": "4216:20:75",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 38987,
                                  "name": "transactions",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38949,
                                  "src": "4254:12:75",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_MetaTransaction_$43220_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "struct MetaTransaction memory[] memory"
                                  }
                                },
                                "id": 38989,
                                "indexExpression": {
                                  "id": 38988,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38959,
                                  "src": "4267:1:75",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4254:15:75",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_MetaTransaction_$43220_memory_ptr",
                                  "typeString": "struct MetaTransaction memory"
                                }
                              },
                              "id": 38990,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4270:9:75",
                              "memberName": "operation",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 43217,
                              "src": "4254:25:75",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Operation_$35701",
                                "typeString": "enum Enum.Operation"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_enum$_Operation_$35701",
                                "typeString": "enum Enum.Operation"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 38972,
                                  "name": "target",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38783,
                                  "src": "4090:6:75",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 38971,
                                "name": "IAvatar",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 35789,
                                "src": "4082:7:75",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IAvatar_$35789_$",
                                  "typeString": "type(contract IAvatar)"
                                }
                              },
                              "id": 38973,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4082:15:75",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IAvatar_$35789",
                                "typeString": "contract IAvatar"
                              }
                            },
                            "id": 38974,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4098:25:75",
                            "memberName": "execTransactionFromModule",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35750,
                            "src": "4082:41:75",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_enum$_Operation_$35701_$returns$_t_bool_$",
                              "typeString": "function (address,uint256,bytes memory,enum Enum.Operation) external returns (bool)"
                            }
                          },
                          "id": 38991,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4082:211:75",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4067:226:75"
                      },
                      {
                        "condition": {
                          "id": 38994,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "4386:8:75",
                          "subExpression": {
                            "id": 38993,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38970,
                            "src": "4387:7:75",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 38998,
                        "nodeType": "IfStatement",
                        "src": "4382:38:75",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 38995,
                              "name": "ExecutionFailed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42489,
                              "src": "4403:15:75",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 38996,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4403:17:75",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 38997,
                          "nodeType": "RevertStatement",
                          "src": "4396:24:75"
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 38965,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 38962,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38959,
                      "src": "4023:1:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 38963,
                        "name": "transactions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38949,
                        "src": "4027:12:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_MetaTransaction_$43220_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct MetaTransaction memory[] memory"
                        }
                      },
                      "id": 38964,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4040:6:75",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4027:19:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4023:23:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 39000,
                  "initializationExpression": {
                    "assignments": [
                      38959
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 38959,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4016:1:75",
                        "nodeType": "VariableDeclaration",
                        "scope": 39000,
                        "src": "4008:9:75",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 38958,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4008:7:75",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 38961,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 38960,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4020:1:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4008:13:75"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 38967,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4048:3:75",
                      "subExpression": {
                        "id": 38966,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38959,
                        "src": "4048:1:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 38968,
                    "nodeType": "ExpressionStatement",
                    "src": "4048:3:75"
                  },
                  "nodeType": "ForStatement",
                  "src": "4003:428:75"
                }
              ]
            },
            "documentation": {
              "id": 38940,
              "nodeType": "StructuredDocumentation",
              "src": "3707:142:75",
              "text": "@notice Decodes and executes a batch of transactions from the avatar contract.\n @param payload The encoded transactions to execute."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_execute",
            "nameLocation": "3863:8:75",
            "parameters": {
              "id": 38943,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38942,
                  "mutability": "mutable",
                  "name": "payload",
                  "nameLocation": "3885:7:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 39002,
                  "src": "3872:20:75",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 38941,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3872:5:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3871:22:75"
            },
            "returnParameters": {
              "id": 38944,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3903:0:75"
            },
            "scope": 39013,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 39012,
            "nodeType": "FunctionDefinition",
            "src": "4492:118:75",
            "nodes": [],
            "body": {
              "id": 39011,
              "nodeType": "Block",
              "src": "4566:44:75",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "hexValue": "53696d706c6551756f72756d417661746172",
                    "id": 39009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4583:20:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c6b424df83e7c7c494d72036a8dbf29b3cdbdadcbd03398081a41b5e3ac2762b",
                      "typeString": "literal_string \"SimpleQuorumAvatar\""
                    },
                    "value": "SimpleQuorumAvatar"
                  },
                  "functionReturnParameters": 39008,
                  "id": 39010,
                  "nodeType": "Return",
                  "src": "4576:27:75"
                }
              ]
            },
            "baseFunctions": [
              39654
            ],
            "documentation": {
              "id": 39003,
              "nodeType": "StructuredDocumentation",
              "src": "4443:44:75",
              "text": "@notice Returns the trategy type string."
            },
            "functionSelector": "0eb9b15a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStrategyType",
            "nameLocation": "4501:15:75",
            "overrides": {
              "id": 39005,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4533:8:75"
            },
            "parameters": {
              "id": 39004,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4516:2:75"
            },
            "returnParameters": {
              "id": 39008,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39007,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 39012,
                  "src": "4551:13:75",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 39006,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4551:6:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4550:15:75"
            },
            "scope": 39013,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 38762,
              "name": "SimpleQuorumExecutionStrategy",
              "nameLocations": [
                "526:29:75"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 39655,
              "src": "526:29:75"
            },
            "id": 38763,
            "nodeType": "InheritanceSpecifier",
            "src": "526:29:75"
          }
        ],
        "canonicalName": "AvatarExecutionStrategy",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 38761,
          "nodeType": "StructuredDocumentation",
          "src": "277:213:75",
          "text": "@title Avatar Execution Strategy\n @notice Used to execute proposal transactions from an Avatar contract.\n @dev An Avatar contract is any contract that implements the IAvatar interface, eg a Gnosis Safe."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          39013,
          39655,
          44339,
          25751,
          26771,
          26309,
          42387,
          42490
        ],
        "name": "AvatarExecutionStrategy",
        "nameLocation": "499:23:75",
        "scope": 39014,
        "usedErrors": [
          42486,
          42489,
          44202
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 75
}