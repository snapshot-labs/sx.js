{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "_spaces",
          "type": "address[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "ExecutionFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidPayload",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "enum ProposalStatus",
          "name": "status",
          "type": "uint8"
        }
      ],
      "name": "InvalidProposalStatus",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidSpace",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransactionsFailed",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_target",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "_spaces",
          "type": "address[]"
        }
      ],
      "name": "AvatarExecutionStrategySetUp",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "space",
          "type": "address"
        }
      ],
      "name": "SpaceDisabled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "space",
          "type": "address"
        }
      ],
      "name": "SpaceEnabled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newTarget",
          "type": "address"
        }
      ],
      "name": "TargetSet",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "space",
          "type": "address"
        }
      ],
      "name": "disableSpace",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "space",
          "type": "address"
        }
      ],
      "name": "enableSpace",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "snapshotTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "startTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "minEndTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "maxEndTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "bytes32",
              "name": "executionPayloadHash",
              "type": "bytes32"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "addy",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "params",
                  "type": "bytes"
                }
              ],
              "internalType": "struct Strategy",
              "name": "executionStrategy",
              "type": "tuple"
            },
            {
              "internalType": "enum FinalizationStatus",
              "name": "finalizationStatus",
              "type": "uint8"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "addy",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "params",
                  "type": "bytes"
                }
              ],
              "internalType": "struct Strategy[]",
              "name": "votingStrategies",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct Proposal",
          "name": "proposal",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "votesFor",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "votesAgainst",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "votesAbstain",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "payload",
          "type": "bytes"
        }
      ],
      "name": "execute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "snapshotTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "startTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "minEndTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "maxEndTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "bytes32",
              "name": "executionPayloadHash",
              "type": "bytes32"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "addy",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "params",
                  "type": "bytes"
                }
              ],
              "internalType": "struct Strategy",
              "name": "executionStrategy",
              "type": "tuple"
            },
            {
              "internalType": "enum FinalizationStatus",
              "name": "finalizationStatus",
              "type": "uint8"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "addy",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "params",
                  "type": "bytes"
                }
              ],
              "internalType": "struct Strategy[]",
              "name": "votingStrategies",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct Proposal",
          "name": "proposal",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "votesFor",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "votesAgainst",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "votesAbstain",
          "type": "uint256"
        }
      ],
      "name": "getProposalStatus",
      "outputs": [
        {
          "internalType": "enum ProposalStatus",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "snapshotTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "startTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "minEndTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "maxEndTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "bytes32",
              "name": "executionPayloadHash",
              "type": "bytes32"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "addy",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "params",
                  "type": "bytes"
                }
              ],
              "internalType": "struct Strategy",
              "name": "executionStrategy",
              "type": "tuple"
            },
            {
              "internalType": "enum FinalizationStatus",
              "name": "finalizationStatus",
              "type": "uint8"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "addy",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "params",
                  "type": "bytes"
                }
              ],
              "internalType": "struct Strategy[]",
              "name": "votingStrategies",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct Proposal",
          "name": "proposal",
          "type": "tuple"
        }
      ],
      "name": "getQuorum",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "space",
          "type": "address"
        }
      ],
      "name": "isSpaceEnabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        }
      ],
      "name": "setTarget",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "initParams",
          "type": "bytes"
        }
      ],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "target",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060409080825234620003e15762001c488038038091620000228285620003e6565b8339810190606081830312620003e1576200003d8162000420565b906020916200004e83830162000420565b858301516001600160401b039591939091868311620003e1576200009c9262000078920162000435565b926200008d87519485928784019586620004ac565b03601f198101845283620003e6565b60009384549160ff92838160081c161593848095620003d4575b8015620003bc575b620000c99062000506565b60019560ff19928688858316178b55620003aa575b508051810193606082860312620003a657620000fa9062000420565b94620001088b830162000420565b946060830151918211620003a2576200012892908a019101890162000435565b9160018060a01b038080961694169462000153838b5460081c166200014d816200056a565b6200056a565b6200015e33620005cb565b33816033541603620003605784156200030d579087916200017f86620005cb565b8a54620001a5858260081c161580968197620002ff575b8115620002db575b5062000506565b8484848316178d55620002c9575b5090918a905b62000276575b5050507f621a036730af1cc915beba86ec9f773f11d2983a09e67fa9d62c6cebedf2364e9392916200020f9162000250575b606680546001600160a01b03191685179055895193849384620004ac565b0390a162000227575b835161160e90816200061a8239f35b60008051602062001c288339815191529261ff001981541690558351908152a138808062000218565b61ff0019895416895560008051602062001c28833981519152888b51898152a1620001f1565b8451811015620002c357818a8260051b87010151168b5260658a528b8b2089848254161790556000198114620002af57880188620001b9565b634e487b7160e01b8b52601160045260248bfd5b620001bf565b61ffff1916610101178b5538620001b3565b905085303b159182620002f2575b5050386200019e565b84161490508538620002e9565b905085818416109062000196565b8a5162461bcd60e51b8152600481018a9052602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b6064898c519062461bcd60e51b825280600483015260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b8a80fd5b8980fd5b61ffff191661010117895538620000de565b50303b158015620000be5750818116600114620000be565b50600181831610620000b6565b600080fd5b601f909101601f19168101906001600160401b038211908210176200040a57604052565b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b0382168203620003e157565b9080601f83011215620003e1578151906001600160401b0382116200040a578160051b604051936020936200046d85840187620003e6565b85528380860192820101928311620003e1578301905b82821062000492575050505090565b838091620004a08462000420565b81520191019062000483565b916060830190608060018060a01b0394858095168152602094859316838201526060604082015286518094520194019160005b828110620004ef57505050505090565b8351851686529481019492810192600101620004df565b156200050e57565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b156200057257565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b603380546001600160a01b039283166001600160a01b031982168117909255604051919216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a356fe608060405260048036101561001357600080fd5b60003560e01c80633f6253c214610a00578063414ac1cc146109a85780636efd971c1461095c578063715018a6146108d7578063776d1a011461084a5780638da5cb5b146108165780639e33d81114610766578063a4f9edbf146102e4578063aa92548c14610290578063d4b839921461025c578063d92d4ea0146101735763f2fde38b146100a157600080fd5b3461016e57602060031936011261016e576100ba610f88565b906100c3611222565b73ffffffffffffffffffffffffffffffffffffffff8216156100ea576100e8826112a1565b005b6084906020604051917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b600080fd5b503461016e57602060031936011261016e5773ffffffffffffffffffffffffffffffffffffffff6101a2610f88565b6101aa611222565b169081158015610244575b61021c577fc3dc08a46232e8d0a95510120799f1e68e0aa28c88730b8b0127d5ff4565b4b06020838060005260658252604060002060017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00825416179055604051908152a1005b6040517fc3b48cf1000000000000000000000000000000000000000000000000000000008152fd5b5081600052606560205260ff604060002054166101b5565b3461016e57600060031936011261016e57602073ffffffffffffffffffffffffffffffffffffffff60665416604051908152f35b503461016e57602060031936011261016e5780359067ffffffffffffffff821161016e576102c560a0916020933691016110b1565b0151015160208180518101031261016e57602080910151604051908152f35b503461016e5760208060031936011261016e5767ffffffffffffffff90823582811161016e576103179036908501610fe5565b916000549360ff808660081c16159283809461075a575b8015610744575b61033e90611310565b6001967fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0090858983831617600055610715575b50865187019260608888860195031261016e5761038f87890161139b565b9261039c60408a0161139b565b98606081015191821161016e57019184603f8401121561016e5787830151946103c486611099565b936103d26040519586610f07565b868552898501906040829860051b82010192831161016e5760408b9101915b8383106106fd575050505073ffffffffffffffffffffffffffffffffffffffff808095169916956104318360005460081c1661042c816113bc565b6113bc565b61043a336112a1565b610442611222565b891561067a575089906104548a6112a1565b600054610477848260081c16158095819661066d575b811561064c575b50611310565b83838383161760005561061d575b506000825b6105df575b505050610589575b837fffffffffffffffffffffffff0000000000000000000000000000000000000000606698949854161760665560405193606085019385528685015260606040850152518092526080830195906000905b888483106105715787877f621a036730af1cc915beba86ec9f773f11d2983a09e67fa9d62c6cebedf2364e888c0389a161051e57005b7f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff60005416600055604051908152a1005b835182168952978701979287019291909101906104e8565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff600054166000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498866040518a8152a1610497565b84518110156106185780866105f761061293886114d8565b511660005260658b526040600020848482541617905561147c565b8261048a565b61048f565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000166101011760005538610485565b905084303b159182610661575b505038610471565b84161490508438610659565b905084818416109061046a565b60849089604051917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b81906107088461139b565b8152019101908a906103f1565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000166101011760005538610371565b50303b1580156103355750868216600114610335565b5060018288161061032e565b503461016e57602060031936011261016e5773ffffffffffffffffffffffffffffffffffffffff610795610f88565b61079d611222565b169081600052606560205260ff604060002054161561021c577f665604bfe8ee87044ba1f1fd2fb47fe92983c9e187acbb442debf97d3e581921602083806000526065825260406000207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008154169055604051908152a1005b3461016e57600060031936011261016e57602073ffffffffffffffffffffffffffffffffffffffff60335416604051908152f35b3461016e57602060031936011261016e57600073ffffffffffffffffffffffffffffffffffffffff61087a610f88565b610882611222565b16807fffffffffffffffffffffffff00000000000000000000000000000000000000006066541617606655604051907f3bfb4bbf112628248058745a3c57e35b13369386e474b8e56c552f3063a4a1968383a2f35b3461016e57600060031936011261016e576108f0611222565b60006033547fffffffffffffffffffffffff000000000000000000000000000000000000000081166033558173ffffffffffffffffffffffffffffffffffffffff60405192167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08284a3f35b3461016e57602060031936011261016e5773ffffffffffffffffffffffffffffffffffffffff61098a610f88565b166000526065602052602060ff604060002054166040519015158152f35b503461016e57608060031936011261016e5780359067ffffffffffffffff821161016e576109df6109f0916109fc933691016110b1565b60643590604435906024359061151b565b604051918291826111e0565b0390f35b503461016e5760a060031936011261016e57803567ffffffffffffffff811161016e57610a3090369083016110b1565b60843567ffffffffffffffff811161016e57610a4f9036908401610fe5565b9033600052606560205260ff6040600020541615610ede57606490610a7b82356044356024358461151b565b6007811015610eb057600381141580610ea5575b610e6d5750608001518251906020840191822003610e4457825183019060208483031261016e575167ffffffffffffffff811161016e5760208201603f82860101121561016e576020818501015191610ae783611099565b94610af56040519687610f07565b83865260208601926020830160408660051b83850101011161016e57604081830101935b60408660051b83850101018510610cec5788888860005b82518110156100e85773ffffffffffffffffffffffffffffffffffffffff806066541690610b5e83866114d8565b515116906020610b6e84876114d8565b510151906040610b7e85886114d8565b510151926060610b8e86896114d8565b510151936002851015610cbe5790600060209493928a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f604051998a98899788957f468721a7000000000000000000000000000000000000000000000000000000008752860152602485015260806044850152845190816084860152610c1e8260a4978d8989019101611447565b8d850152011681010301925af1908115610cb257600091610c77575b5015610c4e57610c499061147c565b610b30565b836040517facfdb444000000000000000000000000000000000000000000000000000000008152fd5b90506020813d602011610caa575b81610c9260209383610f07565b8101031261016e5751801515810361016e5785610c3a565b3d9150610c85565b6040513d6000823e3d90fd5b6021897f4e487b71000000000000000000000000000000000000000000000000000000006000525260246000fd5b845167ffffffffffffffff811161016e5760807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe082858701018703011261016e576040519081608081011067ffffffffffffffff608084011117610e165760808201604052610d61604082868801010161139b565b8252848401810160608101516020840152608001519067ffffffffffffffff821161016e5760208701605f8383888a01010101121561016e57604082828789010101015191610daf83610fab565b90610dbd6040519283610f07565b8382526020890160608583868b8d01010101011161016e5760a093610def9160606020850191868b8d01010101611447565b6040840152848601010151600281101561016e576060820152815260209485019401610b19565b60418b7f4e487b71000000000000000000000000000000000000000000000000000000006000525260246000fd5b836040517f7c6953f9000000000000000000000000000000000000000000000000000000008152fd5b84610ea16040519283927fe6ace38e00000000000000000000000000000000000000000000000000000000845283016111e0565b0390fd5b506002811415610a8f565b6021857f4e487b71000000000000000000000000000000000000000000000000000000006000525260246000fd5b826040517fc3b48cf1000000000000000000000000000000000000000000000000000000008152fd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117610f4857604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b359063ffffffff8216820361016e57565b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361016e57565b67ffffffffffffffff8111610f4857601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b81601f8201121561016e57803590610ffc82610fab565b9261100a6040519485610f07565b8284526020838301011161016e57816000926020809301838601378301015290565b91909160408184031261016e57604080519167ffffffffffffffff91830182811184821017610f48576040528294813573ffffffffffffffffffffffffffffffffffffffff8116810361016e578452602082013592831161016e576020926110949201610fe5565b910152565b67ffffffffffffffff8111610f485760051b60200190565b919091610100808285031261016e576040519081019167ffffffffffffffff9282811084821117610f485760405281946110ea82610f77565b83526020916110fa838201610f77565b8385015261110a60408201610f77565b604085015261111b60608201610f77565b60608501526080810135608085015260a081013585811161016e578261114291830161102c565b60a085015260c0810135600381101561016e5760c085015260e08101359085821161016e570181601f8201121561016e57803561117e81611099565b9561118c6040519788610f07565b818752848088019260051b8401019380851161016e57858401925b8584106111bb575050505050505060e00152565b833583811161016e5787916111d5848480948a010161102c565b8152019301926111a7565b9190602083019260078210156111f35752565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff60335416330361124357565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6033549073ffffffffffffffffffffffffffffffffffffffff80911691827fffffffffffffffffffffffff0000000000000000000000000000000000000000821617603355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e06000604051a3565b1561131757565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152fd5b519073ffffffffffffffffffffffffffffffffffffffff8216820361016e57565b156113c357565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152fd5b918091926000905b828210611467575011611460575050565b6000910152565b9150806020918301518186015201829161144f565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146114a95760010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b80518210156114ec5760209160051b010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b919092602060a0840151015160208180518101031261016e57602061154c9101519161154784876115f5565b6115f5565b101592836115eb575b505060c08101805160038110156111f35760020361157557505050600690565b5160038110156111f35760010361158d575050600490565b63ffffffff908160208201511642106000146115ab57505050600090565b604081015182164210156115c157505050600190565b60600151164210156115dc57156115d757600290565b600190565b156115e657600390565b600590565b1191503880611555565b811981116114a957019056fea164736f6c634300080f000a7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498",
    "sourceMap": "394:3781:49:-:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;394:3781:49;;;;;;;;;;1234:36;394:3781;;;;;:::i;:::-;;1234:36;394:3781;;1234:36;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;-1:-1:-1;394:3781:49;;;;;;;;;;;3290:14:18;3336:34;;;;;;-1:-1:-1;3335:108:18;;;;-1:-1:-1;3314:201:18;;;:::i;:::-;394:3781:49;;;;;;;;;;;;;3551:65:18;;-1:-1:-1;394:3781:49;;;1682:87;;394:3781;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;1682:87;;;;394:3781;;;;:::i;:::-;;;;;;;;;;;;;;5355:69:18;394:3781:49;;;;;;5355:69:18;;;:::i;:::-;;:::i;:::-;1195:12:17;929:10:20;1195:12:17;:::i;:::-;929:10:20;394:3781:49;1513:6:17;394:3781:49;;1662:23:17;394:3781:49;;2409:22:17;;394:3781:49;;2503:8:17;;;;;;:::i;:::-;394:3781:49;;3314:201:18;394:3781:49;;;;;3290:14:18;3336:34;;;;;;-1:-1:-1;3335:108:18;;;;-1:-1:-1;3314:201:18;;:::i;:::-;394:3781:49;;;;;;;;3551:65:18;;-1:-1:-1;791:13:68;;;;786:95;394:3781:49;;;786:95:68;3636:99:18;;;1909:54:49;3636:99:18;;;1909:54:49;3636:99:18;;;786:95:68;1878:16:49;394:3781;;-1:-1:-1;;;;;;394:3781:49;;;;;;;;;;;1909:54;:::i;:::-;;;;3636:99:18;;786:95:68;394:3781:49;;;;;;;;;3636:99:18;-1:-1:-1;;;;;;;;;;;394:3781:49;;;;;;;;;;;;;3710:14:18;3636:99;;;;;;394:3781:49;;;;;;;-1:-1:-1;;;;;;;;;;;394:3781:49;;;;;;3710:14:18;3636:99;;826:3:68;394:3781:49;;806:18:68;;;;;394:3781:49;;;;;;;;;;;;845:6:68;394:3781:49;;;;;;;;;;;;;;;;;;;;;;791:13:68;;394:3781:49;-1:-1:-1;;;394:3781:49;;;;;;;;806:18:68;;;3551:65:18;-1:-1:-1;;394:3781:49;;;;;3551:65:18;;;3335:108;3415:4;;;;1476:19:19;:23;3376:66:18;;;;3335:108;;;;;;3376:66;394:3781:49;;3425:17:18;;-1:-1:-1;3376:66:18;;;;3336:34;394:3781:49;;;;;;3354:16:18;3336:34;;;394:3781:49;;;-1:-1:-1;;;394:3781:49;;;;;;;;;;;;;;;;;;-1:-1:-1;;;394:3781:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3551:65:18;-1:-1:-1;;394:3781:49;;;;;3551:65:18;;;3335:108;3415:4;;1476:19:19;:23;3376:66:18;;3335:108;3376:66;-1:-1:-1;394:3781:49;;;;3425:17:18;3335:108;;3336:34;394:3781:49;;;;;3354:16:18;3336:34;;394:3781:49;-1:-1:-1;394:3781:49;;;1234:36;394:3781;;;-1:-1:-1;;394:3781:49;;;;-1:-1:-1;;;;;394:3781:49;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;394:3781:49;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;394:3781:49;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;394:3781:49;;;;;;;;;;;;;;;;;-1:-1:-1;;;394:3781:49;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;394:3781:49;;;;;;;;;;;;;;;;;-1:-1:-1;;;394:3781:49;;;;;;;2673:187:17;2765:6;394:3781:49;;-1:-1:-1;;;;;394:3781:49;;;-1:-1:-1;;;;;;394:3781:49;;;;;;;;;;;;;2813:40:17;;-1:-1:-1;;2813:40:17;2673:187::o",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405260048036101561001357600080fd5b60003560e01c80633f6253c214610a00578063414ac1cc146109a85780636efd971c1461095c578063715018a6146108d7578063776d1a011461084a5780638da5cb5b146108165780639e33d81114610766578063a4f9edbf146102e4578063aa92548c14610290578063d4b839921461025c578063d92d4ea0146101735763f2fde38b146100a157600080fd5b3461016e57602060031936011261016e576100ba610f88565b906100c3611222565b73ffffffffffffffffffffffffffffffffffffffff8216156100ea576100e8826112a1565b005b6084906020604051917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b600080fd5b503461016e57602060031936011261016e5773ffffffffffffffffffffffffffffffffffffffff6101a2610f88565b6101aa611222565b169081158015610244575b61021c577fc3dc08a46232e8d0a95510120799f1e68e0aa28c88730b8b0127d5ff4565b4b06020838060005260658252604060002060017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00825416179055604051908152a1005b6040517fc3b48cf1000000000000000000000000000000000000000000000000000000008152fd5b5081600052606560205260ff604060002054166101b5565b3461016e57600060031936011261016e57602073ffffffffffffffffffffffffffffffffffffffff60665416604051908152f35b503461016e57602060031936011261016e5780359067ffffffffffffffff821161016e576102c560a0916020933691016110b1565b0151015160208180518101031261016e57602080910151604051908152f35b503461016e5760208060031936011261016e5767ffffffffffffffff90823582811161016e576103179036908501610fe5565b916000549360ff808660081c16159283809461075a575b8015610744575b61033e90611310565b6001967fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0090858983831617600055610715575b50865187019260608888860195031261016e5761038f87890161139b565b9261039c60408a0161139b565b98606081015191821161016e57019184603f8401121561016e5787830151946103c486611099565b936103d26040519586610f07565b868552898501906040829860051b82010192831161016e5760408b9101915b8383106106fd575050505073ffffffffffffffffffffffffffffffffffffffff808095169916956104318360005460081c1661042c816113bc565b6113bc565b61043a336112a1565b610442611222565b891561067a575089906104548a6112a1565b600054610477848260081c16158095819661066d575b811561064c575b50611310565b83838383161760005561061d575b506000825b6105df575b505050610589575b837fffffffffffffffffffffffff0000000000000000000000000000000000000000606698949854161760665560405193606085019385528685015260606040850152518092526080830195906000905b888483106105715787877f621a036730af1cc915beba86ec9f773f11d2983a09e67fa9d62c6cebedf2364e888c0389a161051e57005b7f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff60005416600055604051908152a1005b835182168952978701979287019291909101906104e8565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff600054166000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498866040518a8152a1610497565b84518110156106185780866105f761061293886114d8565b511660005260658b526040600020848482541617905561147c565b8261048a565b61048f565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000166101011760005538610485565b905084303b159182610661575b505038610471565b84161490508438610659565b905084818416109061046a565b60849089604051917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b81906107088461139b565b8152019101908a906103f1565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000166101011760005538610371565b50303b1580156103355750868216600114610335565b5060018288161061032e565b503461016e57602060031936011261016e5773ffffffffffffffffffffffffffffffffffffffff610795610f88565b61079d611222565b169081600052606560205260ff604060002054161561021c577f665604bfe8ee87044ba1f1fd2fb47fe92983c9e187acbb442debf97d3e581921602083806000526065825260406000207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008154169055604051908152a1005b3461016e57600060031936011261016e57602073ffffffffffffffffffffffffffffffffffffffff60335416604051908152f35b3461016e57602060031936011261016e57600073ffffffffffffffffffffffffffffffffffffffff61087a610f88565b610882611222565b16807fffffffffffffffffffffffff00000000000000000000000000000000000000006066541617606655604051907f3bfb4bbf112628248058745a3c57e35b13369386e474b8e56c552f3063a4a1968383a2f35b3461016e57600060031936011261016e576108f0611222565b60006033547fffffffffffffffffffffffff000000000000000000000000000000000000000081166033558173ffffffffffffffffffffffffffffffffffffffff60405192167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08284a3f35b3461016e57602060031936011261016e5773ffffffffffffffffffffffffffffffffffffffff61098a610f88565b166000526065602052602060ff604060002054166040519015158152f35b503461016e57608060031936011261016e5780359067ffffffffffffffff821161016e576109df6109f0916109fc933691016110b1565b60643590604435906024359061151b565b604051918291826111e0565b0390f35b503461016e5760a060031936011261016e57803567ffffffffffffffff811161016e57610a3090369083016110b1565b60843567ffffffffffffffff811161016e57610a4f9036908401610fe5565b9033600052606560205260ff6040600020541615610ede57606490610a7b82356044356024358461151b565b6007811015610eb057600381141580610ea5575b610e6d5750608001518251906020840191822003610e4457825183019060208483031261016e575167ffffffffffffffff811161016e5760208201603f82860101121561016e576020818501015191610ae783611099565b94610af56040519687610f07565b83865260208601926020830160408660051b83850101011161016e57604081830101935b60408660051b83850101018510610cec5788888860005b82518110156100e85773ffffffffffffffffffffffffffffffffffffffff806066541690610b5e83866114d8565b515116906020610b6e84876114d8565b510151906040610b7e85886114d8565b510151926060610b8e86896114d8565b510151936002851015610cbe5790600060209493928a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f604051998a98899788957f468721a7000000000000000000000000000000000000000000000000000000008752860152602485015260806044850152845190816084860152610c1e8260a4978d8989019101611447565b8d850152011681010301925af1908115610cb257600091610c77575b5015610c4e57610c499061147c565b610b30565b836040517facfdb444000000000000000000000000000000000000000000000000000000008152fd5b90506020813d602011610caa575b81610c9260209383610f07565b8101031261016e5751801515810361016e5785610c3a565b3d9150610c85565b6040513d6000823e3d90fd5b6021897f4e487b71000000000000000000000000000000000000000000000000000000006000525260246000fd5b845167ffffffffffffffff811161016e5760807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe082858701018703011261016e576040519081608081011067ffffffffffffffff608084011117610e165760808201604052610d61604082868801010161139b565b8252848401810160608101516020840152608001519067ffffffffffffffff821161016e5760208701605f8383888a01010101121561016e57604082828789010101015191610daf83610fab565b90610dbd6040519283610f07565b8382526020890160608583868b8d01010101011161016e5760a093610def9160606020850191868b8d01010101611447565b6040840152848601010151600281101561016e576060820152815260209485019401610b19565b60418b7f4e487b71000000000000000000000000000000000000000000000000000000006000525260246000fd5b836040517f7c6953f9000000000000000000000000000000000000000000000000000000008152fd5b84610ea16040519283927fe6ace38e00000000000000000000000000000000000000000000000000000000845283016111e0565b0390fd5b506002811415610a8f565b6021857f4e487b71000000000000000000000000000000000000000000000000000000006000525260246000fd5b826040517fc3b48cf1000000000000000000000000000000000000000000000000000000008152fd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117610f4857604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b359063ffffffff8216820361016e57565b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361016e57565b67ffffffffffffffff8111610f4857601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b81601f8201121561016e57803590610ffc82610fab565b9261100a6040519485610f07565b8284526020838301011161016e57816000926020809301838601378301015290565b91909160408184031261016e57604080519167ffffffffffffffff91830182811184821017610f48576040528294813573ffffffffffffffffffffffffffffffffffffffff8116810361016e578452602082013592831161016e576020926110949201610fe5565b910152565b67ffffffffffffffff8111610f485760051b60200190565b919091610100808285031261016e576040519081019167ffffffffffffffff9282811084821117610f485760405281946110ea82610f77565b83526020916110fa838201610f77565b8385015261110a60408201610f77565b604085015261111b60608201610f77565b60608501526080810135608085015260a081013585811161016e578261114291830161102c565b60a085015260c0810135600381101561016e5760c085015260e08101359085821161016e570181601f8201121561016e57803561117e81611099565b9561118c6040519788610f07565b818752848088019260051b8401019380851161016e57858401925b8584106111bb575050505050505060e00152565b833583811161016e5787916111d5848480948a010161102c565b8152019301926111a7565b9190602083019260078210156111f35752565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff60335416330361124357565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6033549073ffffffffffffffffffffffffffffffffffffffff80911691827fffffffffffffffffffffffff0000000000000000000000000000000000000000821617603355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e06000604051a3565b1561131757565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152fd5b519073ffffffffffffffffffffffffffffffffffffffff8216820361016e57565b156113c357565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152fd5b918091926000905b828210611467575011611460575050565b6000910152565b9150806020918301518186015201829161144f565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146114a95760010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b80518210156114ec5760209160051b010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b919092602060a0840151015160208180518101031261016e57602061154c9101519161154784876115f5565b6115f5565b101592836115eb575b505060c08101805160038110156111f35760020361157557505050600690565b5160038110156111f35760010361158d575050600490565b63ffffffff908160208201511642106000146115ab57505050600090565b604081015182164210156115c157505050600190565b60600151164210156115dc57156115d757600290565b600190565b156115e657600390565b600590565b1191503880611555565b811981116114a957019056fea164736f6c634300080f000a",
    "sourceMap": "394:3781:49:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;394:3781:49;;;;;;;:::i;:::-;1303:62:17;;;:::i;:::-;394:3781:49;;;2409:22:17;394:3781:49;;2503:8:17;;;:::i;:::-;394:3781:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;394:3781:49;;;;;;;;:::i;:::-;1303:62:17;;:::i;:::-;394:3781:49;1035:19:68;;;:44;;;;394:3781:49;1031:71:68;;1147:19;394:3781:49;;;;;1112:6:68;394:3781:49;;;;;1128:4:68;394:3781:49;;;;;;;;;;;;1147:19:68;394:3781:49;1031:71:68;394:3781:49;;1088:14:68;;;;1035:44;394:3781:49;;;;1661:6:68;394:3781:49;;;;;;;;1035:44:68;;394:3781:49;;;;;-1:-1:-1;;394:3781:49;;;;;;;860:21;394:3781;;;;;;;;;;;;;;-1:-1:-1;;394:3781:49;;;;;;;;;;;;;;1897:26:50;394:3781:49;;;;;;;:::i;:::-;1897:26:50;;:33;;394:3781:49;;;;1886:56:50;;394:3781:49;;;;;1886:56:50;;;394:3781:49;;;;;;;;;;;;;;-1:-1:-1;;394:3781:49;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;3290:14:18;3336:34;;;;;;394:3781:49;3335:108:18;;;;394:3781:49;3314:201:18;;;:::i;:::-;3540:1;394:3781:49;;;;;;;;;;;3551:65:18;;394:3781:49;;;;1682:87;;;394:3781;1682:87;;;;394:3781;;;;;;1682:87;;;394:3781;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5355:69:18;394:3781:49;;;;;;5355:69:18;;;:::i;:::-;;:::i;:::-;1195:12:17;929:10:20;1195:12:17;:::i;:::-;1303:62;;:::i;:::-;2409:22;;394:3781:49;;2503:8:17;;;;;;:::i;:::-;394:3781:49;;3314:201:18;394:3781:49;;;;;3290:14:18;3336:34;;;;;;394:3781:49;3335:108:18;;;;394:3781:49;3314:201:18;;:::i;:::-;394:3781:49;;;;;;;;3551:65:18;;394:3781:49;-1:-1:-1;394:3781:49;791:13:68;3540:1:18;;;786:95:68;3636:99:18;;;;;786:95:68;394:3781:49;;1878:16;394:3781;;;;;;1878:16;394:3781;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1909:54;;;;;;;;3636:99:18;;394:3781:49;3636:99:18;3710:14;394:3781:49;;;;;;;;;;;;3710:14:18;3636:99;394:3781:49;;;;;;;;;;;;;;;;;;;;;;3636:99:18;394:3781:49;;;;;;3710:14:18;394:3781:49;;;;;;3710:14:18;3636:99;;826:3:68;394:3781:49;;806:18:68;;;;;852:10;;;826:3;852:10;;;:::i;:::-;394:3781:49;;;;845:6:68;394:3781:49;;;;;;;;;;;;;826:3:68;:::i;:::-;791:13;;;806:18;;;3551:65:18;394:3781:49;;;;;;3551:65:18;;;3335:108;3415:4;;;;1476:19:19;:23;3376:66:18;;;;3335:108;;;;;;3376:66;394:3781:49;;3425:17:18;;-1:-1:-1;3376:66:18;;;;3336:34;394:3781:49;;;;;;3354:16:18;3336:34;;;394:3781:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;3551:65:18;394:3781:49;;;;;;3551:65:18;;;3335:108;3415:4;;1476:19:19;:23;3376:66:18;;3335:108;3376:66;-1:-1:-1;394:3781:49;;;3441:1:18;3425:17;3335:108;;3336:34;394:3781:49;3369:1:18;394:3781:49;;;3354:16:18;3336:34;;394:3781:49;;;;;;-1:-1:-1;;394:3781:49;;;;;;;;:::i;:::-;1303:62:17;;:::i;:::-;394:3781:49;;;;;1324:6:68;394:3781:49;;;;;;;;1323:14:68;1319:41;;1406:20;394:3781:49;;;;;1324:6:68;394:3781:49;;;;;;;;;;;;;;;;1406:20:68;394:3781:49;;;;;;-1:-1:-1;;394:3781:49;;;;;;;1513:6:17;394:3781:49;;;;;;;;;;;;;-1:-1:-1;;394:3781:49;;;;;;;;;:::i;:::-;1303:62:17;;:::i;:::-;394:3781:49;;;2170:16;394:3781;;;2170:16;394:3781;;;2201:18;;;;;394:3781;;;;;;-1:-1:-1;;394:3781:49;;;;;1303:62:17;;:::i;:::-;394:3781:49;2765:6:17;394:3781:49;;;;2765:6:17;394:3781:49;;;;;;;2813:40:17;;;;394:3781:49;;;;;;-1:-1:-1;;394:3781:49;;;;;;;;:::i;:::-;;;;1661:6:68;394:3781:49;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;394:3781:49;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;394:3781:49;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;2904:10;;394:3781;;1661:6:68;394:3781:49;;;;;;;;1743:30:68;1739:57;;394:3781:49;;2958:65;394:3781;;;;;;2958:65;;:::i;:::-;394:3781;;;;;;3056:23;3038:41;;;3037:102;;;394:3781;3033:177;;3327:29;394:3781;3327:29;394:3781;;;;;;;3360:18;;;3327:51;3323:80;;394:3781;;3690:40;;394:3781;;;;;;;;;;;;;;;3690:40;;394:3781;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;3690:40;394:3781;3690:40;;394:3781;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3745:13;;;394:3781;3785:3;394:3781;;3760:23;;;;;394:3781;;3827:6;394:3781;;3878:15;;;;;:::i;:::-;;394:3781;;3914:15;394:3781;3914:15;;;;:::i;:::-;;:21;394:3781;3953:15;394:3781;3953:15;;;;:::i;:::-;;:20;;3991:15;394:3781;3991:15;;;;:::i;:::-;;:25;394:3781;;;;;;;;;;;;;;;;;;;3819:211;;;;;;;394:3781;3819:211;;;;394:3781;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;3819:211;;;;;;;;;;394:3781;3819:211;;;3785:3;4122:8;;4118:38;;3785:3;;;:::i;:::-;3745:13;;4118:38;394:3781;;;4139:17;;;;3819:211;;;394:3781;3819:211;;394:3781;3819:211;;;;;;394:3781;3819:211;;;:::i;:::-;;;394:3781;;;;;;;;;;;;3819:211;;;;;;-1:-1:-1;3819:211:49;;;394:3781;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;3690:40;;394:3781;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;3690:40;;394:3781;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3323:80;394:3781;;;3387:16;;;;3033:177;394:3781;3162:37;394:3781;;3162:37;;;;;;;;;:::i;:::-;;;;3037:102;3085:53;3103:35;3085:53;;;3037:102;;394:3781;;;;;;;;;;1739:57:68;394:3781:49;;;1782:14:68;;;;394:3781:49;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;394:3781:49;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;394:3781:49;;;;;-1:-1:-1;394:3781:49;1599:130:17;394:3781:49;1513:6:17;394:3781:49;;929:10:20;1662:23:17;394:3781:49;;1599:130:17:o;394:3781:49:-;;;;;;;;;;;;;;;;;;;;;;;2673:187:17;2765:6;394:3781:49;;;;;;;;;;;;2765:6:17;394:3781:49;;2813:40:17;-1:-1:-1;394:3781:49;;2813:40:17;2673:187::o;394:3781:49:-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;421:1356:50;;;;734:33;:26;;;;:33;;;394:3781:49;;;723:56:50;;394:3781:49;;;;734:33:50;2159:41;723:56;;394:3781:49;2159:25:50;;;;;:::i;:::-;:41;:::i;:::-;2217:21;;805:110;;;;421:1356;929:27;;;;;394:3781:49;;;;;;;;960:28:50;929:59;960:28;;1004:31;;;1011:24;1004:31;:::o;925:846::-;394:3781:49;;;;;;;;1056:58:50;394:3781:49;;1130:30:50;;1137:23;1130:30;:::o;1052:719::-;394:3781:49;1199:23:50;;734:33;1199:23;;394:3781:49;;1181:15:50;:41;1177:594;394:3781:49;;;1238:33:50;;;-1:-1:-1;1238:33:50;:::o;1177:594::-;1310:24;;;394:3781:49;;;1181:15:50;1292:42;394:3781:49;;;1350:34:50;;;394:3781:49;1350:34:50;:::o;1288:483::-;1423:24;;394:3781:49;;1181:15:50;1405:42;394:3781:49;;;1463:162:50;;;960:28;1495:42;:::o;1463:162::-;394:3781:49;1576:34:50;:::o;1401:370::-;1641:130;;;394:3781:49;1669:30:50;:::o;1641:130::-;1737:23;1730:30;:::o;805:110::-;2359:25;;-1:-1:-1;805:110:50;;;;394:3781:49;;;;;;;;;:::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "disableSpace(address)": "9e33d811",
    "enableSpace(address)": "d92d4ea0",
    "execute((uint32,uint32,uint32,uint32,bytes32,(address,bytes),uint8,(address,bytes)[]),uint256,uint256,uint256,bytes)": "3f6253c2",
    "getProposalStatus((uint32,uint32,uint32,uint32,bytes32,(address,bytes),uint8,(address,bytes)[]),uint256,uint256,uint256)": "414ac1cc",
    "getQuorum((uint32,uint32,uint32,uint32,bytes32,(address,bytes),uint8,(address,bytes)[]))": "aa92548c",
    "isSpaceEnabled(address)": "6efd971c",
    "owner()": "8da5cb5b",
    "renounceOwnership()": "715018a6",
    "setTarget(address)": "776d1a01",
    "setUp(bytes)": "a4f9edbf",
    "target()": "d4b83992",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_spaces\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ExecutionFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPayload\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"enum ProposalStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"name\":\"InvalidProposalStatus\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSpace\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransactionsFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"_spaces\",\"type\":\"address[]\"}],\"name\":\"AvatarExecutionStrategySetUp\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"space\",\"type\":\"address\"}],\"name\":\"SpaceDisabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"space\",\"type\":\"address\"}],\"name\":\"SpaceEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newTarget\",\"type\":\"address\"}],\"name\":\"TargetSet\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"space\",\"type\":\"address\"}],\"name\":\"disableSpace\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"space\",\"type\":\"address\"}],\"name\":\"enableSpace\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"snapshotTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"startTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"minEndTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"maxEndTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"executionPayloadHash\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"addy\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"internalType\":\"struct Strategy\",\"name\":\"executionStrategy\",\"type\":\"tuple\"},{\"internalType\":\"enum FinalizationStatus\",\"name\":\"finalizationStatus\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"addy\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"internalType\":\"struct Strategy[]\",\"name\":\"votingStrategies\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Proposal\",\"name\":\"proposal\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"votesFor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votesAgainst\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votesAbstain\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"snapshotTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"startTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"minEndTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"maxEndTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"executionPayloadHash\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"addy\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"internalType\":\"struct Strategy\",\"name\":\"executionStrategy\",\"type\":\"tuple\"},{\"internalType\":\"enum FinalizationStatus\",\"name\":\"finalizationStatus\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"addy\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"internalType\":\"struct Strategy[]\",\"name\":\"votingStrategies\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Proposal\",\"name\":\"proposal\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"votesFor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votesAgainst\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votesAbstain\",\"type\":\"uint256\"}],\"name\":\"getProposalStatus\",\"outputs\":[{\"internalType\":\"enum ProposalStatus\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"snapshotTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"startTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"minEndTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"maxEndTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"executionPayloadHash\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"addy\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"internalType\":\"struct Strategy\",\"name\":\"executionStrategy\",\"type\":\"tuple\"},{\"internalType\":\"enum FinalizationStatus\",\"name\":\"finalizationStatus\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"addy\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"internalType\":\"struct Strategy[]\",\"name\":\"votingStrategies\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Proposal\",\"name\":\"proposal\",\"type\":\"tuple\"}],\"name\":\"getQuorum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"space\",\"type\":\"address\"}],\"name\":\"isSpaceEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"}],\"name\":\"setTarget\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"initParams\",\"type\":\"bytes\"}],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"target\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An Avatar contract is any contract that implements the IAvatar interface, eg a Gnosis Safe.\",\"errors\":{\"InvalidProposalStatus(uint8)\":[{\"params\":{\"status\":\"The current status of the proposal.\"}}]},\"events\":{\"AvatarExecutionStrategySetUp(address,address,address[])\":{\"details\":\"Emitted each time a new Avatar Execution Strategy is deployed.\"},\"TargetSet(address)\":{\"details\":\"Emitted each time the Target is set.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_owner\":\"Address of the owner of this contract.\",\"_spaces\":\"Array of whitelisted space contracts.\",\"_target\":\"Address of the avatar that this module will pass transactions to.\"}},\"disableSpace(address)\":{\"params\":{\"space\":\"Address of the space.\"}},\"enableSpace(address)\":{\"params\":{\"space\":\"Address of the space.\"}},\"execute((uint32,uint32,uint32,uint32,bytes32,(address,bytes),uint8,(address,bytes)[]),uint256,uint256,uint256,bytes)\":{\"params\":{\"payload\":\"The encoded transactions to execute.\",\"proposal\":\"The proposal to execute.\",\"votesAbstain\":\"The number of abstaining votes.\",\"votesAgainst\":\"The number of votes against the proposal.\",\"votesFor\":\"The number of votes in favor of the proposal.\"}},\"isSpaceEnabled(address)\":{\"params\":{\"space\":\"Address of the space.\"},\"returns\":{\"_0\":\"bool whether the space is enabled.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setTarget(address)\":{\"params\":{\"_target\":\"Address of the avatar that this module will pass transactions to.\"}},\"setUp(bytes)\":{\"params\":{\"initParams\":\"ABI encoded parameters, in the same order as the constructor.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"target\":{\"details\":\"Address of the avatar that this module will pass transactions to.\"}},\"title\":\"Avatar Execution Strategy - An Execution strategy that executes transactions on an Avatar contract\",\"version\":1},\"userdoc\":{\"errors\":{\"ExecutionFailed()\":[{\"notice\":\"Thrown when the execution of a proposal fails.\"}],\"InvalidPayload()\":[{\"notice\":\"Thrown when the execution payload supplied to the execution strategy is not equal to the payload supplied when the proposal was created.\"}],\"InvalidProposalStatus(uint8)\":[{\"notice\":\"Thrown when the current status of a proposal does not allow the desired action.\"}]},\"events\":{\"SpaceDisabled(address)\":{\"notice\":\"Emitted when a space is disabled.\"},\"SpaceEnabled(address)\":{\"notice\":\"Emitted when a space is enabled.\"}},\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Constructor\"},\"disableSpace(address)\":{\"notice\":\"Disable a space.\"},\"enableSpace(address)\":{\"notice\":\"Enable a space.\"},\"execute((uint32,uint32,uint32,uint32,bytes32,(address,bytes),uint8,(address,bytes)[]),uint256,uint256,uint256,bytes)\":{\"notice\":\"Executes a proposal from the avatar contract if the proposal outcome is accepted.         Must be called by a whitelisted space contract.\"},\"isSpaceEnabled(address)\":{\"notice\":\"Check if a space is enabled.\"},\"setTarget(address)\":{\"notice\":\"Sets the target address\"},\"setUp(bytes)\":{\"notice\":\"Initialize function, should be called immediately after deploying a new proxy to this contract.Can only be called once.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/execution-strategies/AvatarExecutionStrategy.sol\":\"AvatarExecutionStrategy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[\":@gnosis.pm/safe-contracts/=lib/safe-contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@prb/test/=lib/prb-test/src/\",\":@zodiac/=lib/zodiac/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":prb-test/=lib/prb-test/src/\",\":safe-contracts/=lib/safe-contracts/contracts/\",\":solidity-bytes-utils/=lib/solidity-bytes-utils/contracts/\",\":zodiac/=lib/zodiac/contracts/\"],\"viaIR\":true},\"sources\":{\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x225cc1ec33efd35c90e78aec0792ed9751cd6217e646271172421e96e2e2cc0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c6adbd216e40ca2387835b8618c82e7153cb826023d38943bbb0c2e992644aa\",\"dweb:/ipfs/QmZeejwEkm7iH9NHih7dPbuNqivuFn27EkgJesgByzS9wD\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xe798cadb41e2da274913e4b3183a80f50fb057a42238fe8467e077268100ec27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://899f850f7df5a270bccfb765d70069959ca1c20d3a7381c1c3bda8a3ffee1935\",\"dweb:/ipfs/QmVdnAqwyX2L3nX2HDA5WKGtVBFyH1nKE9A1k7fZnPBkhP\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/safe-contracts/contracts/common/Enum.sol\":{\"keccak256\":\"0x473e45b1a5cc47be494b0e123c9127f0c11c1e0992a321ae5a644c0bfdb2c14f\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://948e6d5a8bd7377f7795b6e28584eab9be5c0a8db240bf5e606744a175238c3d\",\"dweb:/ipfs/QmQQaUmQfpuejV41jbxKSTgEBYYCcVTjCsDMgf2htgz6ej\"]},\"lib/zodiac/contracts/interfaces/IAvatar.sol\":{\"keccak256\":\"0xcd5508ffe596eef8fbccfd5fc4f10a34397773547ce64e212d48b5212865ec1f\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://1655ba8b760132ebd702cc806fcdad50a44d320fbeca14be00e35b0171bd35cf\",\"dweb:/ipfs/QmcbB5HpCoEQCTHKWxHS3HpFmgaB4AcZxZYtvQk2QEyvN2\"]},\"src/execution-strategies/AvatarExecutionStrategy.sol\":{\"keccak256\":\"0x255e5f1b5619475f505a428ccd4e015c615c775381c24eeb22d29b597f70957c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ef3807e0a8689f00aea2da1e0e5cc98ea03050522c36657abd9408910bd2bb8\",\"dweb:/ipfs/Qmf9vkTfZtApSnv3Jv6abfUsPZsJtbviwETDXiK7d3nepP\"]},\"src/execution-strategies/SimpleQuorumExecutionStrategy.sol\":{\"keccak256\":\"0x1c521dcef8dad384c98a2dcef1a486174332132e25d7028169193d0a12f892a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dfe6f7e2dd9b99b46aed86604744d98e5d95ef92afc3cd1b65c6b53f45b16e3b\",\"dweb:/ipfs/QmYwZThqywLhRSyA5JDZMwsGgG9SsoU4TAT4iQuHMWMSuH\"]},\"src/interfaces/IExecutionStrategy.sol\":{\"keccak256\":\"0x145e821fed9563b2e3f0aafac87a73b672738e24410e466b2bed0d5999524e71\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c7a11a5c790f3cbd0079dfed44b9cd6332c152099557fd0f4c9d6574d5e85819\",\"dweb:/ipfs/QmV48kcRh9EKfggf8uv9aEfSXBk3b8G1ooBxuGbDanp55P\"]},\"src/interfaces/execution-strategies/IExecutionStrategyErrors.sol\":{\"keccak256\":\"0x77513dcd3a14004fcdde82676bd8e76055543f31780104068ad6e92a479dd12a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://98a2053bbe93ef0510f00ad0e326359f295f2bb7205286544b42d49552fef7fd\",\"dweb:/ipfs/Qmdm5P5JtCfBMYVNyY7ryRWUrUZNK4Wjt66nRUE5f2sMKP\"]},\"src/types.sol\":{\"keccak256\":\"0xe0e229dc0f5df238cb8d0db6414c42528d622c5c954eb1c7229cc7534b46804d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9fa12cf13bc455ad4667f0093c4ff97f70b50fc7e8eff966246735140f6038db\",\"dweb:/ipfs/QmUUJXUzCN5E7AnubaEiTArPhhEHXM6pRh91YXxmZA63FR\"]},\"src/utils/SpaceManager.sol\":{\"keccak256\":\"0xa3ee4b3e319df8846af6a73494519bc028c9dab6cb987a83e23422cefc607633\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3506b8c3690ad2e2a071b51ed30c7b013a99304fe2ce8957c358bef98fdc2899\",\"dweb:/ipfs/QmYcQW3J1gJ3pmwPmUTCq2mLZEwbKnckY8M2CgBjahAqoH\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_target",
              "type": "address"
            },
            {
              "internalType": "address[]",
              "name": "_spaces",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ExecutionFailed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidPayload"
        },
        {
          "inputs": [
            {
              "internalType": "enum ProposalStatus",
              "name": "status",
              "type": "uint8"
            }
          ],
          "type": "error",
          "name": "InvalidProposalStatus"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidSpace"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransactionsFailed"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "_target",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "_spaces",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AvatarExecutionStrategySetUp",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "space",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SpaceDisabled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "space",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SpaceEnabled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newTarget",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "TargetSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "space",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "disableSpace"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "space",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "enableSpace"
        },
        {
          "inputs": [
            {
              "internalType": "struct Proposal",
              "name": "proposal",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "snapshotTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "startTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "minEndTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "maxEndTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "bytes32",
                  "name": "executionPayloadHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "struct Strategy",
                  "name": "executionStrategy",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "addy",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "params",
                      "type": "bytes"
                    }
                  ]
                },
                {
                  "internalType": "enum FinalizationStatus",
                  "name": "finalizationStatus",
                  "type": "uint8"
                },
                {
                  "internalType": "struct Strategy[]",
                  "name": "votingStrategies",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "addy",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "params",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "votesFor",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "votesAgainst",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "votesAbstain",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "payload",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "execute"
        },
        {
          "inputs": [
            {
              "internalType": "struct Proposal",
              "name": "proposal",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "snapshotTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "startTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "minEndTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "maxEndTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "bytes32",
                  "name": "executionPayloadHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "struct Strategy",
                  "name": "executionStrategy",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "addy",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "params",
                      "type": "bytes"
                    }
                  ]
                },
                {
                  "internalType": "enum FinalizationStatus",
                  "name": "finalizationStatus",
                  "type": "uint8"
                },
                {
                  "internalType": "struct Strategy[]",
                  "name": "votingStrategies",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "addy",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "params",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "votesFor",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "votesAgainst",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "votesAbstain",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getProposalStatus",
          "outputs": [
            {
              "internalType": "enum ProposalStatus",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Proposal",
              "name": "proposal",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "snapshotTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "startTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "minEndTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "maxEndTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "bytes32",
                  "name": "executionPayloadHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "struct Strategy",
                  "name": "executionStrategy",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "addy",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "params",
                      "type": "bytes"
                    }
                  ]
                },
                {
                  "internalType": "enum FinalizationStatus",
                  "name": "finalizationStatus",
                  "type": "uint8"
                },
                {
                  "internalType": "struct Strategy[]",
                  "name": "votingStrategies",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "addy",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "params",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "getQuorum",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "space",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isSpaceEnabled",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_target",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setTarget"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "initParams",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "target",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "constructor": {
            "params": {
              "_owner": "Address of the owner of this contract.",
              "_spaces": "Array of whitelisted space contracts.",
              "_target": "Address of the avatar that this module will pass transactions to."
            }
          },
          "disableSpace(address)": {
            "params": {
              "space": "Address of the space."
            }
          },
          "enableSpace(address)": {
            "params": {
              "space": "Address of the space."
            }
          },
          "execute((uint32,uint32,uint32,uint32,bytes32,(address,bytes),uint8,(address,bytes)[]),uint256,uint256,uint256,bytes)": {
            "params": {
              "payload": "The encoded transactions to execute.",
              "proposal": "The proposal to execute.",
              "votesAbstain": "The number of abstaining votes.",
              "votesAgainst": "The number of votes against the proposal.",
              "votesFor": "The number of votes in favor of the proposal."
            }
          },
          "isSpaceEnabled(address)": {
            "params": {
              "space": "Address of the space."
            },
            "returns": {
              "_0": "bool whether the space is enabled."
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "setTarget(address)": {
            "params": {
              "_target": "Address of the avatar that this module will pass transactions to."
            }
          },
          "setUp(bytes)": {
            "params": {
              "initParams": "ABI encoded parameters, in the same order as the constructor."
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "constructor": {
            "notice": "Constructor"
          },
          "disableSpace(address)": {
            "notice": "Disable a space."
          },
          "enableSpace(address)": {
            "notice": "Enable a space."
          },
          "execute((uint32,uint32,uint32,uint32,bytes32,(address,bytes),uint8,(address,bytes)[]),uint256,uint256,uint256,bytes)": {
            "notice": "Executes a proposal from the avatar contract if the proposal outcome is accepted.         Must be called by a whitelisted space contract."
          },
          "isSpaceEnabled(address)": {
            "notice": "Check if a space is enabled."
          },
          "setTarget(address)": {
            "notice": "Sets the target address"
          },
          "setUp(bytes)": {
            "notice": "Initialize function, should be called immediately after deploying a new proxy to this contract.Can only be called once."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@gnosis.pm/safe-contracts/=lib/safe-contracts/",
        ":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        ":@prb/test/=lib/prb-test/src/",
        ":@zodiac/=lib/zodiac/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-gas-snapshot/=lib/forge-gas-snapshot/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":prb-test/=lib/prb-test/src/",
        ":safe-contracts/=lib/safe-contracts/contracts/",
        ":solidity-bytes-utils/=lib/solidity-bytes-utils/contracts/",
        ":zodiac/=lib/zodiac/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 10000
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "src/execution-strategies/AvatarExecutionStrategy.sol": "AvatarExecutionStrategy"
      },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x225cc1ec33efd35c90e78aec0792ed9751cd6217e646271172421e96e2e2cc0f",
        "urls": [
          "bzz-raw://6c6adbd216e40ca2387835b8618c82e7153cb826023d38943bbb0c2e992644aa",
          "dweb:/ipfs/QmZeejwEkm7iH9NHih7dPbuNqivuFn27EkgJesgByzS9wD"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888",
        "urls": [
          "bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a",
          "dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0xe798cadb41e2da274913e4b3183a80f50fb057a42238fe8467e077268100ec27",
        "urls": [
          "bzz-raw://899f850f7df5a270bccfb765d70069959ca1c20d3a7381c1c3bda8a3ffee1935",
          "dweb:/ipfs/QmVdnAqwyX2L3nX2HDA5WKGtVBFyH1nKE9A1k7fZnPBkhP"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183",
        "urls": [
          "bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06",
          "dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/safe-contracts/contracts/common/Enum.sol": {
        "keccak256": "0x473e45b1a5cc47be494b0e123c9127f0c11c1e0992a321ae5a644c0bfdb2c14f",
        "urls": [
          "bzz-raw://948e6d5a8bd7377f7795b6e28584eab9be5c0a8db240bf5e606744a175238c3d",
          "dweb:/ipfs/QmQQaUmQfpuejV41jbxKSTgEBYYCcVTjCsDMgf2htgz6ej"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/zodiac/contracts/interfaces/IAvatar.sol": {
        "keccak256": "0xcd5508ffe596eef8fbccfd5fc4f10a34397773547ce64e212d48b5212865ec1f",
        "urls": [
          "bzz-raw://1655ba8b760132ebd702cc806fcdad50a44d320fbeca14be00e35b0171bd35cf",
          "dweb:/ipfs/QmcbB5HpCoEQCTHKWxHS3HpFmgaB4AcZxZYtvQk2QEyvN2"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/execution-strategies/AvatarExecutionStrategy.sol": {
        "keccak256": "0x255e5f1b5619475f505a428ccd4e015c615c775381c24eeb22d29b597f70957c",
        "urls": [
          "bzz-raw://5ef3807e0a8689f00aea2da1e0e5cc98ea03050522c36657abd9408910bd2bb8",
          "dweb:/ipfs/Qmf9vkTfZtApSnv3Jv6abfUsPZsJtbviwETDXiK7d3nepP"
        ],
        "license": "MIT"
      },
      "src/execution-strategies/SimpleQuorumExecutionStrategy.sol": {
        "keccak256": "0x1c521dcef8dad384c98a2dcef1a486174332132e25d7028169193d0a12f892a6",
        "urls": [
          "bzz-raw://dfe6f7e2dd9b99b46aed86604744d98e5d95ef92afc3cd1b65c6b53f45b16e3b",
          "dweb:/ipfs/QmYwZThqywLhRSyA5JDZMwsGgG9SsoU4TAT4iQuHMWMSuH"
        ],
        "license": "MIT"
      },
      "src/interfaces/IExecutionStrategy.sol": {
        "keccak256": "0x145e821fed9563b2e3f0aafac87a73b672738e24410e466b2bed0d5999524e71",
        "urls": [
          "bzz-raw://c7a11a5c790f3cbd0079dfed44b9cd6332c152099557fd0f4c9d6574d5e85819",
          "dweb:/ipfs/QmV48kcRh9EKfggf8uv9aEfSXBk3b8G1ooBxuGbDanp55P"
        ],
        "license": "MIT"
      },
      "src/interfaces/execution-strategies/IExecutionStrategyErrors.sol": {
        "keccak256": "0x77513dcd3a14004fcdde82676bd8e76055543f31780104068ad6e92a479dd12a",
        "urls": [
          "bzz-raw://98a2053bbe93ef0510f00ad0e326359f295f2bb7205286544b42d49552fef7fd",
          "dweb:/ipfs/Qmdm5P5JtCfBMYVNyY7ryRWUrUZNK4Wjt66nRUE5f2sMKP"
        ],
        "license": "MIT"
      },
      "src/types.sol": {
        "keccak256": "0xe0e229dc0f5df238cb8d0db6414c42528d622c5c954eb1c7229cc7534b46804d",
        "urls": [
          "bzz-raw://9fa12cf13bc455ad4667f0093c4ff97f70b50fc7e8eff966246735140f6038db",
          "dweb:/ipfs/QmUUJXUzCN5E7AnubaEiTArPhhEHXM6pRh91YXxmZA63FR"
        ],
        "license": "MIT"
      },
      "src/utils/SpaceManager.sol": {
        "keccak256": "0xa3ee4b3e319df8846af6a73494519bc028c9dab6cb987a83e23422cefc607633",
        "urls": [
          "bzz-raw://3506b8c3690ad2e2a071b51ed30c7b013a99304fe2ce8957c358bef98fdc2899",
          "dweb:/ipfs/QmYcQW3J1gJ3pmwPmUTCq2mLZEwbKnckY8M2CgBjahAqoH"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/execution-strategies/AvatarExecutionStrategy.sol",
    "id": 33503,
    "exportedSymbols": {
      "AddressUpgradeable": [
        25667
      ],
      "AvatarExecutionStrategy": [
        33502
      ],
      "Choice": [
        34319
      ],
      "ContextUpgradeable": [
        25709
      ],
      "Enum": [
        30820
      ],
      "FinalizationStatus": [
        34307
      ],
      "IAvatar": [
        30907
      ],
      "IExecutionStrategy": [
        33814
      ],
      "IExecutionStrategyErrors": [
        33904
      ],
      "IndexedStrategy": [
        34303
      ],
      "Initializable": [
        25383
      ],
      "MetaTransaction": [
        34335
      ],
      "OwnableUpgradeable": [
        25214
      ],
      "Proposal": [
        34293
      ],
      "ProposalStatus": [
        34315
      ],
      "SimpleQuorumExecutionStrategy": [
        33694
      ],
      "SpaceManager": [
        34814
      ],
      "Strategy": [
        34298
      ],
      "Vote": [
        34325
      ],
      "console2": [
        25082
      ]
    },
    "nodeType": "SourceUnit",
    "src": "33:4143:49",
    "nodes": [
      {
        "id": 33256,
        "nodeType": "PragmaDirective",
        "src": "33:24:49",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 33257,
        "nodeType": "ImportDirective",
        "src": "59:40:49",
        "nodes": [],
        "absolutePath": "lib/zodiac/contracts/interfaces/IAvatar.sol",
        "file": "@zodiac/interfaces/IAvatar.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33503,
        "sourceUnit": 30908,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 33258,
        "nodeType": "ImportDirective",
        "src": "100:45:49",
        "nodes": [],
        "absolutePath": "src/execution-strategies/SimpleQuorumExecutionStrategy.sol",
        "file": "./SimpleQuorumExecutionStrategy.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33503,
        "sourceUnit": 33695,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 33259,
        "nodeType": "ImportDirective",
        "src": "146:35:49",
        "nodes": [],
        "absolutePath": "src/utils/SpaceManager.sol",
        "file": "../utils/SpaceManager.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33503,
        "sourceUnit": 34815,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 33502,
        "nodeType": "ContractDefinition",
        "src": "394:3781:49",
        "nodes": [
          {
            "id": 33266,
            "nodeType": "ErrorDefinition",
            "src": "480:27:49",
            "nodes": [],
            "errorSelector": "50e006fd",
            "name": "TransactionsFailed",
            "nameLocation": "486:18:49",
            "parameters": {
              "id": 33265,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "504:2:49"
            }
          },
          {
            "id": 33276,
            "nodeType": "EventDefinition",
            "src": "589:87:49",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 33267,
              "nodeType": "StructuredDocumentation",
              "src": "513:71:49",
              "text": "@dev Emitted each time a new Avatar Execution Strategy is deployed."
            },
            "eventSelector": "621a036730af1cc915beba86ec9f773f11d2983a09e67fa9d62c6cebedf2364e",
            "name": "AvatarExecutionStrategySetUp",
            "nameLocation": "595:28:49",
            "parameters": {
              "id": 33275,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33269,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "632:6:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 33276,
                  "src": "624:14:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33268,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "624:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33271,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_target",
                  "nameLocation": "648:7:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 33276,
                  "src": "640:15:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33270,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "640:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33274,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_spaces",
                  "nameLocation": "667:7:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 33276,
                  "src": "657:17:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 33272,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "657:7:49",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 33273,
                    "nodeType": "ArrayTypeName",
                    "src": "657:9:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "623:52:49"
            }
          },
          {
            "id": 33281,
            "nodeType": "EventDefinition",
            "src": "732:43:49",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 33277,
              "nodeType": "StructuredDocumentation",
              "src": "682:45:49",
              "text": "@dev Emitted each time the Target is set."
            },
            "eventSelector": "3bfb4bbf112628248058745a3c57e35b13369386e474b8e56c552f3063a4a196",
            "name": "TargetSet",
            "nameLocation": "738:9:49",
            "parameters": {
              "id": 33280,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33279,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newTarget",
                  "nameLocation": "764:9:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 33281,
                  "src": "748:25:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33278,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "748:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "747:27:49"
            }
          },
          {
            "id": 33284,
            "nodeType": "VariableDeclaration",
            "src": "860:21:49",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 33282,
              "nodeType": "StructuredDocumentation",
              "src": "781:74:49",
              "text": "@dev Address of the avatar that this module will pass transactions to."
            },
            "functionSelector": "d4b83992",
            "mutability": "mutable",
            "name": "target",
            "nameLocation": "875:6:49",
            "scope": 33502,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 33283,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "860:7:49",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 33309,
            "nodeType": "FunctionDefinition",
            "src": "1127:177:49",
            "nodes": [],
            "body": {
              "id": 33308,
              "nodeType": "Block",
              "src": "1198:106:49",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    33296
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33296,
                      "mutability": "mutable",
                      "name": "initParams",
                      "nameLocation": "1221:10:49",
                      "nodeType": "VariableDeclaration",
                      "scope": 33308,
                      "src": "1208:23:49",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 33295,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1208:5:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33303,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 33299,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33287,
                        "src": "1245:6:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 33300,
                        "name": "_target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33289,
                        "src": "1253:7:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 33301,
                        "name": "_spaces",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33292,
                        "src": "1262:7:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      ],
                      "expression": {
                        "id": 33297,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "1234:3:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 33298,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encode",
                      "nodeType": "MemberAccess",
                      "src": "1234:10:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 33302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1234:36:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1208:62:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33305,
                        "name": "initParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33296,
                        "src": "1286:10:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 33304,
                      "name": "setUp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33359,
                      "src": "1280:5:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory)"
                      }
                    },
                    "id": 33306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1280:17:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33307,
                  "nodeType": "ExpressionStatement",
                  "src": "1280:17:49"
                }
              ]
            },
            "documentation": {
              "id": 33285,
              "nodeType": "StructuredDocumentation",
              "src": "888:234:49",
              "text": "@notice Constructor\n @param _owner Address of the owner of this contract.\n @param _target Address of the avatar that this module will pass transactions to.\n @param _spaces Array of whitelisted space contracts."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 33293,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33287,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "1147:6:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 33309,
                  "src": "1139:14:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33286,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1139:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33289,
                  "mutability": "mutable",
                  "name": "_target",
                  "nameLocation": "1163:7:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 33309,
                  "src": "1155:15:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33288,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1155:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33292,
                  "mutability": "mutable",
                  "name": "_spaces",
                  "nameLocation": "1189:7:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 33309,
                  "src": "1172:24:49",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 33290,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1172:7:49",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 33291,
                    "nodeType": "ArrayTypeName",
                    "src": "1172:9:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1138:59:49"
            },
            "returnParameters": {
              "id": 33294,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1198:0:49"
            },
            "scope": 33502,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 33359,
            "nodeType": "FunctionDefinition",
            "src": "1551:419:49",
            "nodes": [],
            "body": {
              "id": 33358,
              "nodeType": "Block",
              "src": "1610:360:49",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    33318,
                    33320,
                    33323
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33318,
                      "mutability": "mutable",
                      "name": "_owner",
                      "nameLocation": "1629:6:49",
                      "nodeType": "VariableDeclaration",
                      "scope": 33358,
                      "src": "1621:14:49",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 33317,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1621:7:49",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 33320,
                      "mutability": "mutable",
                      "name": "_target",
                      "nameLocation": "1645:7:49",
                      "nodeType": "VariableDeclaration",
                      "scope": 33358,
                      "src": "1637:15:49",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 33319,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1637:7:49",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 33323,
                      "mutability": "mutable",
                      "name": "_spaces",
                      "nameLocation": "1671:7:49",
                      "nodeType": "VariableDeclaration",
                      "scope": 33358,
                      "src": "1654:24:49",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 33321,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1654:7:49",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 33322,
                        "nodeType": "ArrayTypeName",
                        "src": "1654:9:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33336,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 33326,
                        "name": "initParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33312,
                        "src": "1706:10:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 33328,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1731:7:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 33327,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1731:7:49",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 33330,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1740:7:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 33329,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1740:7:49",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "baseExpression": {
                              "id": 33332,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1749:7:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 33331,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1749:7:49",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 33333,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1749:9:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_array$_t_address_$dyn_memory_ptr_$",
                              "typeString": "type(address[] memory)"
                            }
                          }
                        ],
                        "id": 33334,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1730:29:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_address_$_$_t_type$_t_array$_t_address_$dyn_memory_ptr_$_$",
                          "typeString": "tuple(type(address),type(address),type(address[] memory))"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_address_$_$_t_type$_t_array$_t_address_$dyn_memory_ptr_$_$",
                          "typeString": "tuple(type(address),type(address),type(address[] memory))"
                        }
                      ],
                      "expression": {
                        "id": 33324,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "1682:3:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 33325,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "1682:10:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 33335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1682:87:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_payable_$_t_address_payable_$_t_array$_t_address_$dyn_memory_ptr_$",
                      "typeString": "tuple(address payable,address payable,address[] memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1620:149:49"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 33337,
                      "name": "__Ownable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25109,
                      "src": "1779:14:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 33338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1779:16:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33339,
                  "nodeType": "ExpressionStatement",
                  "src": "1779:16:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33341,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33318,
                        "src": "1823:6:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 33340,
                      "name": "transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25188,
                      "src": "1805:17:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 33342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1805:25:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33343,
                  "nodeType": "ExpressionStatement",
                  "src": "1805:25:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33345,
                        "name": "_spaces",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33323,
                        "src": "1860:7:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      ],
                      "id": 33344,
                      "name": "__SpaceManager_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34726,
                      "src": "1840:19:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address[] memory)"
                      }
                    },
                    "id": 33346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1840:28:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33347,
                  "nodeType": "ExpressionStatement",
                  "src": "1840:28:49"
                },
                {
                  "expression": {
                    "id": 33350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 33348,
                      "name": "target",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33284,
                      "src": "1878:6:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 33349,
                      "name": "_target",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33320,
                      "src": "1887:7:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1878:16:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 33351,
                  "nodeType": "ExpressionStatement",
                  "src": "1878:16:49"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 33353,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33318,
                        "src": "1938:6:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 33354,
                        "name": "_target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33320,
                        "src": "1946:7:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 33355,
                        "name": "_spaces",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33323,
                        "src": "1955:7:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      ],
                      "id": 33352,
                      "name": "AvatarExecutionStrategySetUp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33276,
                      "src": "1909:28:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address[] memory)"
                      }
                    },
                    "id": 33356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1909:54:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33357,
                  "nodeType": "EmitStatement",
                  "src": "1904:59:49"
                }
              ]
            },
            "documentation": {
              "id": 33310,
              "nodeType": "StructuredDocumentation",
              "src": "1310:236:49",
              "text": "@notice Initialize function, should be called immediately after deploying a new proxy to this contract.\n @param initParams ABI encoded parameters, in the same order as the constructor.\n @notice Can only be called once."
            },
            "functionSelector": "a4f9edbf",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 33315,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 33314,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 25285,
                  "src": "1598:11:49"
                },
                "nodeType": "ModifierInvocation",
                "src": "1598:11:49"
              }
            ],
            "name": "setUp",
            "nameLocation": "1560:5:49",
            "parameters": {
              "id": 33313,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33312,
                  "mutability": "mutable",
                  "name": "initParams",
                  "nameLocation": "1579:10:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 33359,
                  "src": "1566:23:49",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 33311,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1566:5:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1565:25:49"
            },
            "returnParameters": {
              "id": 33316,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1610:0:49"
            },
            "scope": 33502,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 33376,
            "nodeType": "FunctionDefinition",
            "src": "2105:121:49",
            "nodes": [],
            "body": {
              "id": 33375,
              "nodeType": "Block",
              "src": "2160:66:49",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 33369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 33367,
                      "name": "target",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33284,
                      "src": "2170:6:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 33368,
                      "name": "_target",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33362,
                      "src": "2179:7:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2170:16:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 33370,
                  "nodeType": "ExpressionStatement",
                  "src": "2170:16:49"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 33372,
                        "name": "_target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33362,
                        "src": "2211:7:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 33371,
                      "name": "TargetSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33281,
                      "src": "2201:9:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 33373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2201:18:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33374,
                  "nodeType": "EmitStatement",
                  "src": "2196:23:49"
                }
              ]
            },
            "documentation": {
              "id": 33360,
              "nodeType": "StructuredDocumentation",
              "src": "1976:124:49",
              "text": "@notice Sets the target address\n @param _target Address of the avatar that this module will pass transactions to."
            },
            "functionSelector": "776d1a01",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 33365,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 33364,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 25128,
                  "src": "2150:9:49"
                },
                "nodeType": "ModifierInvocation",
                "src": "2150:9:49"
              }
            ],
            "name": "setTarget",
            "nameLocation": "2114:9:49",
            "parameters": {
              "id": 33363,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33362,
                  "mutability": "mutable",
                  "name": "_target",
                  "nameLocation": "2132:7:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 33376,
                  "src": "2124:15:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33361,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2124:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2123:17:49"
            },
            "returnParameters": {
              "id": 33366,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2160:0:49"
            },
            "scope": 33502,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 33438,
            "nodeType": "FunctionDefinition",
            "src": "2703:735:49",
            "nodes": [],
            "body": {
              "id": 33437,
              "nodeType": "Block",
              "src": "2916:522:49",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    33398
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33398,
                      "mutability": "mutable",
                      "name": "proposalStatus",
                      "nameLocation": "2941:14:49",
                      "nodeType": "VariableDeclaration",
                      "scope": 33437,
                      "src": "2926:29:49",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProposalStatus_$34315",
                        "typeString": "enum ProposalStatus"
                      },
                      "typeName": {
                        "id": 33397,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 33396,
                          "name": "ProposalStatus",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 34315,
                          "src": "2926:14:49"
                        },
                        "referencedDeclaration": 34315,
                        "src": "2926:14:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ProposalStatus_$34315",
                          "typeString": "enum ProposalStatus"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33405,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 33400,
                        "name": "proposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33380,
                        "src": "2976:8:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$34293_memory_ptr",
                          "typeString": "struct Proposal memory"
                        }
                      },
                      {
                        "id": 33401,
                        "name": "votesFor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33382,
                        "src": "2986:8:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 33402,
                        "name": "votesAgainst",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33384,
                        "src": "2996:12:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 33403,
                        "name": "votesAbstain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33386,
                        "src": "3010:12:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Proposal_$34293_memory_ptr",
                          "typeString": "struct Proposal memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 33399,
                      "name": "getProposalStatus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33633,
                      "src": "2958:17:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Proposal_$34293_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_enum$_ProposalStatus_$34315_$",
                        "typeString": "function (struct Proposal memory,uint256,uint256,uint256) view returns (enum ProposalStatus)"
                      }
                    },
                    "id": 33404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2958:65:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProposalStatus_$34315",
                      "typeString": "enum ProposalStatus"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2926:97:49"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 33416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_enum$_ProposalStatus_$34315",
                            "typeString": "enum ProposalStatus"
                          },
                          "id": 33409,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 33406,
                            "name": "proposalStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33398,
                            "src": "3038:14:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ProposalStatus_$34315",
                              "typeString": "enum ProposalStatus"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "expression": {
                              "id": 33407,
                              "name": "ProposalStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34315,
                              "src": "3056:14:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_ProposalStatus_$34315_$",
                                "typeString": "type(enum ProposalStatus)"
                              }
                            },
                            "id": 33408,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Accepted",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 34311,
                            "src": "3056:23:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ProposalStatus_$34315",
                              "typeString": "enum ProposalStatus"
                            }
                          },
                          "src": "3038:41:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 33410,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3037:43:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_enum$_ProposalStatus_$34315",
                            "typeString": "enum ProposalStatus"
                          },
                          "id": 33414,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 33411,
                            "name": "proposalStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33398,
                            "src": "3085:14:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ProposalStatus_$34315",
                              "typeString": "enum ProposalStatus"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "expression": {
                              "id": 33412,
                              "name": "ProposalStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34315,
                              "src": "3103:14:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_ProposalStatus_$34315_$",
                                "typeString": "type(enum ProposalStatus)"
                              }
                            },
                            "id": 33413,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "VotingPeriodAccepted",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 34310,
                            "src": "3103:35:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ProposalStatus_$34315",
                              "typeString": "enum ProposalStatus"
                            }
                          },
                          "src": "3085:53:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 33415,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3084:55:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3037:102:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 33422,
                  "nodeType": "IfStatement",
                  "src": "3033:177:49",
                  "trueBody": {
                    "id": 33421,
                    "nodeType": "Block",
                    "src": "3141:69:49",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 33418,
                              "name": "proposalStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33398,
                              "src": "3184:14:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ProposalStatus_$34315",
                                "typeString": "enum ProposalStatus"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_ProposalStatus_$34315",
                                "typeString": "enum ProposalStatus"
                              }
                            ],
                            "id": 33417,
                            "name": "InvalidProposalStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33897,
                            "src": "3162:21:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_enum$_ProposalStatus_$34315_$returns$__$",
                              "typeString": "function (enum ProposalStatus) pure"
                            }
                          },
                          "id": 33419,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3162:37:49",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33420,
                        "nodeType": "RevertStatement",
                        "src": "3155:44:49"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 33428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 33423,
                        "name": "proposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33380,
                        "src": "3327:8:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$34293_memory_ptr",
                          "typeString": "struct Proposal memory"
                        }
                      },
                      "id": 33424,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "executionPayloadHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 34282,
                      "src": "3327:29:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 33426,
                          "name": "payload",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33388,
                          "src": "3370:7:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 33425,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "3360:9:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 33427,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3360:18:49",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "3327:51:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 33432,
                  "nodeType": "IfStatement",
                  "src": "3323:80:49",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 33429,
                        "name": "InvalidPayload",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33903,
                        "src": "3387:14:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 33430,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3387:16:49",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 33431,
                    "nodeType": "RevertStatement",
                    "src": "3380:23:49"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33434,
                        "name": "payload",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33388,
                        "src": "3423:7:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 33433,
                      "name": "_execute",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33501,
                      "src": "3414:8:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory)"
                      }
                    },
                    "id": 33435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3414:17:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33436,
                  "nodeType": "ExpressionStatement",
                  "src": "3414:17:49"
                }
              ]
            },
            "baseFunctions": [
              33523
            ],
            "documentation": {
              "id": 33377,
              "nodeType": "StructuredDocumentation",
              "src": "2232:466:49",
              "text": "@notice Executes a proposal from the avatar contract if the proposal outcome is accepted.\n         Must be called by a whitelisted space contract.\n @param proposal The proposal to execute.\n @param votesFor The number of votes in favor of the proposal.\n @param votesAgainst The number of votes against the proposal.\n @param votesAbstain The number of abstaining votes.\n @param payload The encoded transactions to execute."
            },
            "functionSelector": "3f6253c2",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 33392,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "2904:3:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 33393,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "2904:10:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 33394,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 33391,
                  "name": "onlySpace",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 34813,
                  "src": "2894:9:49"
                },
                "nodeType": "ModifierInvocation",
                "src": "2894:21:49"
              }
            ],
            "name": "execute",
            "nameLocation": "2712:7:49",
            "overrides": {
              "id": 33390,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2885:8:49"
            },
            "parameters": {
              "id": 33389,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33380,
                  "mutability": "mutable",
                  "name": "proposal",
                  "nameLocation": "2745:8:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 33438,
                  "src": "2729:24:49",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Proposal_$34293_memory_ptr",
                    "typeString": "struct Proposal"
                  },
                  "typeName": {
                    "id": 33379,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 33378,
                      "name": "Proposal",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 34293,
                      "src": "2729:8:49"
                    },
                    "referencedDeclaration": 34293,
                    "src": "2729:8:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proposal_$34293_storage_ptr",
                      "typeString": "struct Proposal"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33382,
                  "mutability": "mutable",
                  "name": "votesFor",
                  "nameLocation": "2771:8:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 33438,
                  "src": "2763:16:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33381,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2763:7:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33384,
                  "mutability": "mutable",
                  "name": "votesAgainst",
                  "nameLocation": "2797:12:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 33438,
                  "src": "2789:20:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33383,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2789:7:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33386,
                  "mutability": "mutable",
                  "name": "votesAbstain",
                  "nameLocation": "2827:12:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 33438,
                  "src": "2819:20:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33385,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2819:7:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33388,
                  "mutability": "mutable",
                  "name": "payload",
                  "nameLocation": "2862:7:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 33438,
                  "src": "2849:20:49",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 33387,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2849:5:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2719:156:49"
            },
            "returnParameters": {
              "id": 33395,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2916:0:49"
            },
            "scope": 33502,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 33501,
            "nodeType": "FunctionDefinition",
            "src": "3591:582:49",
            "nodes": [],
            "body": {
              "id": 33500,
              "nodeType": "Block",
              "src": "3640:533:49",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    33448
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33448,
                      "mutability": "mutable",
                      "name": "transactions",
                      "nameLocation": "3675:12:49",
                      "nodeType": "VariableDeclaration",
                      "scope": 33500,
                      "src": "3650:37:49",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_MetaTransaction_$34335_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct MetaTransaction[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 33446,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 33445,
                            "name": "MetaTransaction",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 34335,
                            "src": "3650:15:49"
                          },
                          "referencedDeclaration": 34335,
                          "src": "3650:15:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MetaTransaction_$34335_storage_ptr",
                            "typeString": "struct MetaTransaction"
                          }
                        },
                        "id": 33447,
                        "nodeType": "ArrayTypeName",
                        "src": "3650:17:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_MetaTransaction_$34335_storage_$dyn_storage_ptr",
                          "typeString": "struct MetaTransaction[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33456,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 33451,
                        "name": "payload",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33441,
                        "src": "3701:7:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "baseExpression": {
                              "id": 33452,
                              "name": "MetaTransaction",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34335,
                              "src": "3711:15:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_MetaTransaction_$34335_storage_ptr_$",
                                "typeString": "type(struct MetaTransaction storage pointer)"
                              }
                            },
                            "id": 33453,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3711:17:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_array$_t_struct$_MetaTransaction_$34335_memory_ptr_$dyn_memory_ptr_$",
                              "typeString": "type(struct MetaTransaction memory[] memory)"
                            }
                          }
                        ],
                        "id": 33454,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "3710:19:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_array$_t_struct$_MetaTransaction_$34335_memory_ptr_$dyn_memory_ptr_$",
                          "typeString": "type(struct MetaTransaction memory[] memory)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_array$_t_struct$_MetaTransaction_$34335_memory_ptr_$dyn_memory_ptr_$",
                          "typeString": "type(struct MetaTransaction memory[] memory)"
                        }
                      ],
                      "expression": {
                        "id": 33449,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "3690:3:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 33450,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "3690:10:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 33455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3690:40:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_MetaTransaction_$34335_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct MetaTransaction memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3650:80:49"
                },
                {
                  "body": {
                    "id": 33498,
                    "nodeType": "Block",
                    "src": "3790:377:49",
                    "statements": [
                      {
                        "assignments": [
                          33469
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33469,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "3809:7:49",
                            "nodeType": "VariableDeclaration",
                            "scope": 33498,
                            "src": "3804:12:49",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 33468,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "3804:4:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33491,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 33474,
                                  "name": "transactions",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33448,
                                  "src": "3878:12:49",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_MetaTransaction_$34335_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "struct MetaTransaction memory[] memory"
                                  }
                                },
                                "id": 33476,
                                "indexExpression": {
                                  "id": 33475,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33458,
                                  "src": "3891:1:49",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3878:15:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_MetaTransaction_$34335_memory_ptr",
                                  "typeString": "struct MetaTransaction memory"
                                }
                              },
                              "id": 33477,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "to",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 34327,
                              "src": "3878:18:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 33478,
                                  "name": "transactions",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33448,
                                  "src": "3914:12:49",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_MetaTransaction_$34335_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "struct MetaTransaction memory[] memory"
                                  }
                                },
                                "id": 33480,
                                "indexExpression": {
                                  "id": 33479,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33458,
                                  "src": "3927:1:49",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3914:15:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_MetaTransaction_$34335_memory_ptr",
                                  "typeString": "struct MetaTransaction memory"
                                }
                              },
                              "id": 33481,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 34329,
                              "src": "3914:21:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 33482,
                                  "name": "transactions",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33448,
                                  "src": "3953:12:49",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_MetaTransaction_$34335_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "struct MetaTransaction memory[] memory"
                                  }
                                },
                                "id": 33484,
                                "indexExpression": {
                                  "id": 33483,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33458,
                                  "src": "3966:1:49",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3953:15:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_MetaTransaction_$34335_memory_ptr",
                                  "typeString": "struct MetaTransaction memory"
                                }
                              },
                              "id": 33485,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "data",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 34331,
                              "src": "3953:20:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 33486,
                                  "name": "transactions",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33448,
                                  "src": "3991:12:49",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_MetaTransaction_$34335_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "struct MetaTransaction memory[] memory"
                                  }
                                },
                                "id": 33488,
                                "indexExpression": {
                                  "id": 33487,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33458,
                                  "src": "4004:1:49",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3991:15:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_MetaTransaction_$34335_memory_ptr",
                                  "typeString": "struct MetaTransaction memory"
                                }
                              },
                              "id": 33489,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "operation",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 34334,
                              "src": "3991:25:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Operation_$30819",
                                "typeString": "enum Enum.Operation"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_enum$_Operation_$30819",
                                "typeString": "enum Enum.Operation"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 33471,
                                  "name": "target",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33284,
                                  "src": "3827:6:49",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 33470,
                                "name": "IAvatar",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30907,
                                "src": "3819:7:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IAvatar_$30907_$",
                                  "typeString": "type(contract IAvatar)"
                                }
                              },
                              "id": 33472,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3819:15:49",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IAvatar_$30907",
                                "typeString": "contract IAvatar"
                              }
                            },
                            "id": 33473,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "execTransactionFromModule",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 30868,
                            "src": "3819:41:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_enum$_Operation_$30819_$returns$_t_bool_$",
                              "typeString": "function (address,uint256,bytes memory,enum Enum.Operation) external returns (bool)"
                            }
                          },
                          "id": 33490,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3819:211:49",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3804:226:49"
                      },
                      {
                        "condition": {
                          "id": 33493,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "4122:8:49",
                          "subExpression": {
                            "id": 33492,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33469,
                            "src": "4123:7:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 33497,
                        "nodeType": "IfStatement",
                        "src": "4118:38:49",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 33494,
                              "name": "ExecutionFailed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33900,
                              "src": "4139:15:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 33495,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4139:17:49",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 33496,
                          "nodeType": "RevertStatement",
                          "src": "4132:24:49"
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 33464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 33461,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33458,
                      "src": "3760:1:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 33462,
                        "name": "transactions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33448,
                        "src": "3764:12:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_MetaTransaction_$34335_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct MetaTransaction memory[] memory"
                        }
                      },
                      "id": 33463,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3764:19:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3760:23:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 33499,
                  "initializationExpression": {
                    "assignments": [
                      33458
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 33458,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3753:1:49",
                        "nodeType": "VariableDeclaration",
                        "scope": 33499,
                        "src": "3745:9:49",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 33457,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3745:7:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 33460,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 33459,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3757:1:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3745:13:49"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 33466,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3785:3:49",
                      "subExpression": {
                        "id": 33465,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33458,
                        "src": "3785:1:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 33467,
                    "nodeType": "ExpressionStatement",
                    "src": "3785:3:49"
                  },
                  "nodeType": "ForStatement",
                  "src": "3740:427:49"
                }
              ]
            },
            "documentation": {
              "id": 33439,
              "nodeType": "StructuredDocumentation",
              "src": "3444:142:49",
              "text": "@notice Decodes and executes a batch of transactions from the avatar contract.\n @param payload The encoded transactions to execute."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_execute",
            "nameLocation": "3600:8:49",
            "parameters": {
              "id": 33442,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33441,
                  "mutability": "mutable",
                  "name": "payload",
                  "nameLocation": "3622:7:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 33501,
                  "src": "3609:20:49",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 33440,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3609:5:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3608:22:49"
            },
            "returnParameters": {
              "id": 33443,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3640:0:49"
            },
            "scope": 33502,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 33261,
              "name": "SpaceManager",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 34814,
              "src": "430:12:49"
            },
            "id": 33262,
            "nodeType": "InheritanceSpecifier",
            "src": "430:12:49"
          },
          {
            "baseName": {
              "id": 33263,
              "name": "SimpleQuorumExecutionStrategy",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 33694,
              "src": "444:29:49"
            },
            "id": 33264,
            "nodeType": "InheritanceSpecifier",
            "src": "444:29:49"
          }
        ],
        "canonicalName": "AvatarExecutionStrategy",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 33260,
          "nodeType": "StructuredDocumentation",
          "src": "183:211:49",
          "text": "@title Avatar Execution Strategy - An Execution strategy that executes transactions on an Avatar contract\n @dev An Avatar contract is any contract that implements the IAvatar interface, eg a Gnosis Safe."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          33502,
          33694,
          33814,
          33904,
          34814,
          25214,
          25709,
          25383
        ],
        "name": "AvatarExecutionStrategy",
        "nameLocation": "403:23:49",
        "scope": 33503,
        "usedErrors": [
          33266,
          33897,
          33900,
          33903,
          34681
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 49
}