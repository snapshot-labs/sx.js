{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "_spaces",
          "type": "address[]"
        },
        {
          "internalType": "uint256",
          "name": "_quorum",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "ExecutionFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidPayload",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "enum ProposalStatus",
          "name": "status",
          "type": "uint8"
        }
      ],
      "name": "InvalidProposalStatus",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidSpace",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_target",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "_spaces",
          "type": "address[]"
        }
      ],
      "name": "AvatarExecutionStrategySetUp",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "space",
          "type": "address"
        }
      ],
      "name": "SpaceDisabled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "space",
          "type": "address"
        }
      ],
      "name": "SpaceEnabled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newTarget",
          "type": "address"
        }
      ],
      "name": "TargetSet",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "space",
          "type": "address"
        }
      ],
      "name": "disableSpace",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "space",
          "type": "address"
        }
      ],
      "name": "enableSpace",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "snapshotTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "startTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "minEndTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "maxEndTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "bytes32",
              "name": "executionPayloadHash",
              "type": "bytes32"
            },
            {
              "internalType": "contract IExecutionStrategy",
              "name": "executionStrategy",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "author",
              "type": "address"
            },
            {
              "internalType": "enum FinalizationStatus",
              "name": "finalizationStatus",
              "type": "uint8"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "addy",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "params",
                  "type": "bytes"
                }
              ],
              "internalType": "struct Strategy[]",
              "name": "votingStrategies",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct Proposal",
          "name": "proposal",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "votesFor",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "votesAgainst",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "votesAbstain",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "payload",
          "type": "bytes"
        }
      ],
      "name": "execute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "snapshotTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "startTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "minEndTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "maxEndTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "bytes32",
              "name": "executionPayloadHash",
              "type": "bytes32"
            },
            {
              "internalType": "contract IExecutionStrategy",
              "name": "executionStrategy",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "author",
              "type": "address"
            },
            {
              "internalType": "enum FinalizationStatus",
              "name": "finalizationStatus",
              "type": "uint8"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "addy",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "params",
                  "type": "bytes"
                }
              ],
              "internalType": "struct Strategy[]",
              "name": "votingStrategies",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct Proposal",
          "name": "proposal",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "votesFor",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "votesAgainst",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "votesAbstain",
          "type": "uint256"
        }
      ],
      "name": "getProposalStatus",
      "outputs": [
        {
          "internalType": "enum ProposalStatus",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getStrategyType",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "space",
          "type": "address"
        }
      ],
      "name": "isSpaceEnabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "quorum",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        }
      ],
      "name": "setTarget",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "initParams",
          "type": "bytes"
        }
      ],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "target",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "488:4031:60:-:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;488:4031:60;;;;;;;;;;;;;:::i;:::-;;;;;;;1364:45;;;;488:4031;;;;;;;;;;;;;;;;;;;1364:45;488:4031;;;;;;;;;;;;;;:::i;:::-;;;;;;;1364:45;;;;;;;;;:::i;:::-;-1:-1:-1;488:4031:60;;;;;;;;;;3290:14:21;3336:34;;;;;;-1:-1:-1;3335:108:21;;;;-1:-1:-1;488:4031:60;;;;;;;;;;;;;;;;3551:65:21;;-1:-1:-1;488:4031:60;;;1838:96;;488:4031;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;1838:96;;;;;;488:4031;1838:96;;488:4031;;;;:::i;:::-;;;;;;;;5355:69:21;488:4031:60;;;;;;5355:69:21;;;:::i;:::-;;:::i;:::-;1195:12:17;929:10:24;1195:12:17;:::i;:::-;929:10:24;488:4031:60;1513:6:17;488:4031:60;;1662:23:17;488:4031:60;;2409:22:17;;488:4031:60;;2503:8:17;;;:::i;:::-;5355:69:21;488:4031:60;;;;;;5355:69:21;:::i;:::-;893:13:85;;488:4031:60;;;888:95:85;488:4031:60;;;2129:54;488:4031;;;;;5355:69:21;488:4031:60;;;;;;;5355:69:21;:::i;:::-;540:16:62;488:4031:60;;;;;;;;2098:16;488:4031;;;2098:16;488:4031;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2129:54;;;3636:99:21;;888:95:85;488:4031:60;;;;;;;;;3636:99:21;3710:14;488:4031:60;;;;;;;;;;;3710:14:21;3636:99;;;;;;928:3:85;488:4031:60;;908:18:85;;;;;488:4031:60;;;;;;;;;;;;947:6:85;488:4031:60;;;;;;;;;;;;;;;;;;;;;;893:13:85;;488:4031:60;-1:-1:-1;;;488:4031:60;;;;;;;;908:18:85;;;488:4031:60;;;-1:-1:-1;;;488:4031:60;;;;;;;;;;;;;;;;;;-1:-1:-1;;;488:4031:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3551:65:21;-1:-1:-1;;488:4031:60;;;;;3551:65:21;;;488:4031:60;;;-1:-1:-1;;;488:4031:60;;;;;;;;;;;;;;;;;;-1:-1:-1;;;488:4031:60;;;;;;;3335:108:21;3415:4;;1476:19:23;:23;3376:66:21;;3335:108;3376:66;488:4031:60;;;;;3425:17:21;3335:108;;3336:34;488:4031:60;;;;;3354:16:21;3336:34;;488:4031:60;-1:-1:-1;488:4031:60;;;1364:45;488:4031;;;-1:-1:-1;;488:4031:60;;;;-1:-1:-1;;;;;488:4031:60;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;488:4031:60;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;488:4031:60;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;488:4031:60;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;488:4031:60;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;488:4031:60;;;;;;;;;;;;;;;;;-1:-1:-1;;;488:4031:60;;;;;;;2673:187:17;2765:6;488:4031:60;;-1:-1:-1;;;;;488:4031:60;;;-1:-1:-1;;;;;;488:4031:60;;;;;;;;;;2813:40:17;-1:-1:-1;;2813:40:17;2673:187::o",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080806040526004908136101561001557600080fd5b60003560e01c9081630eb9b15a14610e7b5750806312eadade14610e235780631703a01814610e055780636b12e4c4146109205780636efd971c146108d4578063715018a614610854578063776d1a01146107cc5780638da5cb5b146107985780639e33d811146106e8578063a4f9edbf1461029f578063d4b839921461026b578063d92d4ea0146101825763f2fde38b146100b057600080fd5b3461017d57602060031936011261017d576100c9611000565b906100d26112f7565b73ffffffffffffffffffffffffffffffffffffffff8216156100f9576100f782611376565b005b6084906020604051917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b600080fd5b503461017d57602060031936011261017d5773ffffffffffffffffffffffffffffffffffffffff6101b1611000565b6101b96112f7565b169081158015610253575b61022b577fc3dc08a46232e8d0a95510120799f1e68e0aa28c88730b8b0127d5ff4565b4b06020838060005260658252604060002060017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00825416179055604051908152a1005b6040517fc3b48cf1000000000000000000000000000000000000000000000000000000008152fd5b5081600052606560205260ff604060002054166101c4565b3461017d57600060031936011261017d57602073ffffffffffffffffffffffffffffffffffffffff60675416604051908152f35b503461017d5760208060031936011261017d5767ffffffffffffffff91803583811161017d576102d29036908301611096565b926000549160ff94858460081c1615928380946106dc575b80156106c6575b15610643576001947fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0090858783831617600055610614575b50825183019260808189860195031261017d576103478882016113e3565b91610354604083016113e3565b93606083015190811161017d5782019185603f8401121561017d57898301519561037d87611044565b9361038b6040519586610f7f565b8785528b8501906040829960051b82010192831161017d5760408d9101915b8383106105fc5750505050608001519073ffffffffffffffffffffffffffffffffffffffff808095169516966103ef8c60005460081c166103ea81611404565b611404565b6103f833611376565b6104006112f7565b851561057957508890610414869596611376565b6104248c60005460081c16611404565b6000825b610532575b5050506104416000549a8b60081c16611404565b606655847fffffffffffffffffffffffff0000000000000000000000000000000000000000606754161760675560405194606086019286528886015260606040860152518091526080840192916000905b878984841061051a578b91897f621a036730af1cc915beba86ec9f773f11d2983a09e67fa9d62c6cebedf2364e8a8a038ba16104ca57005b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff7f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989316600055604051908152a1005b85518316875295860195909401939190910190610492565b849695965181101561057157808661054d61056893886114eb565b511660005260658d526040600020848482541617905561148f565b82969596610428565b95949561042d565b6084908b604051917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b8190610607846113e3565b8152019101908c906103aa565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000166101011760005538610329565b60848387604051917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152fd5b50303b1580156102f157506001878616146102f1565b506001878616106102ea565b503461017d57602060031936011261017d5773ffffffffffffffffffffffffffffffffffffffff610717611000565b61071f6112f7565b169081600052606560205260ff604060002054161561022b577f665604bfe8ee87044ba1f1fd2fb47fe92983c9e187acbb442debf97d3e581921602083806000526065825260406000207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008154169055604051908152a1005b3461017d57600060031936011261017d57602073ffffffffffffffffffffffffffffffffffffffff60335416604051908152f35b3461017d57602060031936011261017d5773ffffffffffffffffffffffffffffffffffffffff6107fa611000565b6108026112f7565b16807fffffffffffffffffffffffff000000000000000000000000000000000000000060675416176067557f3bfb4bbf112628248058745a3c57e35b13369386e474b8e56c552f3063a4a196600080a2005b3461017d57600060031936011261017d5761086d6112f7565b600073ffffffffffffffffffffffffffffffffffffffff6033547fffffffffffffffffffffffff00000000000000000000000000000000000000008116603355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b3461017d57602060031936011261017d5773ffffffffffffffffffffffffffffffffffffffff610902611000565b166000526065602052602060ff604060002054166040519015158152f35b503461017d5760a060031936011261017d57803567ffffffffffffffff811161017d5761095090369083016110dd565b6084803567ffffffffffffffff811161017d576109709036908501611096565b9133600052606560205260ff6040600020541615610ddc5761099a6064356044356024358461152e565b6007811015610dae57600381141580610da3575b610d6b575060800151918051926020820193842003610d4257805181019260208285031261017d57519067ffffffffffffffff821161017d5760208401603f83830101121561017d576020828201015190610a0882611044565b94610a166040519687610f7f565b82865260208601906020810160408560051b87860101011161017d57604085840101915b60408560051b87860101018310610bd75788888860005b82518110156100f75773ffffffffffffffffffffffffffffffffffffffff806067541690610a7f83866114eb565b515116906020610a8f84876114eb565b510151906040610a9f85886114eb565b510151926060610aaf86896114eb565b5101516002811015610ba957906000896020959493610b0c604051988997889687957f468721a70000000000000000000000000000000000000000000000000000000087528601526024850152608060448501528b840190610f3c565b90606483015203925af1908115610b9d57600091610b62575b5015610b3957610b349061148f565b610a51565b836040517facfdb444000000000000000000000000000000000000000000000000000000008152fd5b90506020813d602011610b95575b81610b7d60209383610f7f565b8101031261017d5751801515810361017d5785610b25565b3d9150610b70565b6040513d6000823e3d90fd5b6021897f4e487b71000000000000000000000000000000000000000000000000000000006000525260246000fd5b82519067ffffffffffffffff821161017d5760a07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe083898801018503011261017d57604051918260a081011067ffffffffffffffff60a085011117610d145760a08301604052610c4d6040828a890101016113e3565b83528588018101606081015160208501526080015167ffffffffffffffff811161017d5760208501605f82848c8b01010101121561017d578060408a9284848b0101010151886060828487610ca18361105c565b97610caf604051998a610f7f565b83895260208d019501010101011161017d578a6060610cd8938660208701938d01010101610f19565b604084015260a08189880101015191600283101561017d5760608401929092528588010160c00151608083015290815260209283019201610a3a565b60418b7f4e487b71000000000000000000000000000000000000000000000000000000006000525260246000fd5b836040517f7c6953f9000000000000000000000000000000000000000000000000000000008152fd5b84610d9f6040519283927fe6ace38e00000000000000000000000000000000000000000000000000000000845283016112b5565b0390fd5b5060028114156109ae565b6021857f4e487b71000000000000000000000000000000000000000000000000000000006000525260246000fd5b836040517fc3b48cf1000000000000000000000000000000000000000000000000000000008152fd5b3461017d57600060031936011261017d576020606654604051908152f35b503461017d57608060031936011261017d5780359067ffffffffffffffff821161017d57610e5a610e6b91610e77933691016110dd565b60643590604435906024359061152e565b604051918291826112b5565b0390f35b90503461017d57600060031936011261017d576040810181811067ffffffffffffffff821117610eeb57610e779250604052601281527f53696d706c6551756f72756d41766174617200000000000000000000000000006020820152604051918291602083526020830190610f3c565b6041837f4e487b71000000000000000000000000000000000000000000000000000000006000525260246000fd5b60005b838110610f2c5750506000910152565b8181015183820152602001610f1c565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f602093610f7881518092818752878088019101610f19565b0116010190565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117610fc057604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b359063ffffffff8216820361017d57565b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361017d57565b359073ffffffffffffffffffffffffffffffffffffffff8216820361017d57565b67ffffffffffffffff8111610fc05760051b60200190565b67ffffffffffffffff8111610fc057601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b81601f8201121561017d578035906110ad8261105c565b926110bb6040519485610f7f565b8284526020838301011161017d57816000926020809301838601378301015290565b919061012092838183031261017d5760409384519081019267ffffffffffffffff9382811085821117610fc0578652819561111784610fef565b8352602091611127838601610fef565b83850152611136828601610fef565b8285015261114660608601610fef565b60608501526080850135608085015260a085013573ffffffffffffffffffffffffffffffffffffffff8116810361017d5760a085015261118860c08601611023565b60c085015260e0850135600381101561017d5760e085015261010094858101359087821161017d57019181601f8401121561017d578235906111c982611044565b976111d68251998a610f7f565b82895285808a019360051b8601019484861161017d57868101935b8685106112045750505050505050500152565b843583811161017d57820190847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0838903011261017d57845190858201828110868211176112875786526112598a8401611023565b8252858301359185831161017d57611278898c80969581960101611096565b838201528152019401936111f1565b602460007f4e487b710000000000000000000000000000000000000000000000000000000081526041600452fd5b9190602083019260078210156112c85752565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff60335416330361131857565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6033549073ffffffffffffffffffffffffffffffffffffffff80911691827fffffffffffffffffffffffff0000000000000000000000000000000000000000821617603355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b519073ffffffffffffffffffffffffffffffffffffffff8216820361017d57565b1561140b57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146114bc5760010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b80518210156114ff5760209160051b010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9190926115476066549161154284876115f0565b6115f0565b101592836115e6575b505060e08101805160038110156112c85760020361157057505050600690565b5160038110156112c857600103611588575050600490565b63ffffffff908160208201511642106000146115a657505050600090565b604081015182164210156115bc57505050600190565b60600151164210156115d757156115d257600290565b600190565b156115e157600390565b600590565b1191503880611550565b919082018092116114bc5756fea164736f6c6343000812000a",
    "sourceMap": "488:4031:60:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;488:4031:60;;;;;;;:::i;:::-;1303:62:17;;;:::i;:::-;488:4031:60;;;2409:22:17;488:4031:60;;2503:8:17;;;:::i;:::-;488:4031:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;488:4031:60;;;;;;;;:::i;:::-;1303:62:17;;:::i;:::-;488:4031:60;1137:19:85;;;:44;;;;488:4031:60;1133:71:85;;1249:19;488:4031:60;;;;;1214:6:85;488:4031:60;;;;;1230:4:85;488:4031:60;;;;;;;;;;;;1249:19:85;488:4031:60;1133:71:85;488:4031:60;;1190:14:85;;;;1137:44;488:4031:60;;;;1763:6:85;488:4031:60;;;;;;;;1137:44:85;;488:4031:60;;;;;-1:-1:-1;;488:4031:60;;;;;;;907:21;488:4031;;;;;;;;;;;;;;;-1:-1:-1;;488:4031:60;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;3290:14:21;3336:34;;;;;;488:4031:60;3335:108:21;;;;488:4031:60;;;;3540:1:21;488:4031:60;;;;;;;;;;;3551:65:21;;488:4031:60;;;;1838:96;;;488:4031;1838:96;;;;488:4031;;;;;;1838:96;;;488:4031;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5355:69:21;488:4031:60;;;;;;5355:69:21;;;:::i;:::-;;:::i;:::-;1195:12:17;929:10:24;1195:12:17;:::i;:::-;1303:62;;:::i;:::-;2409:22;;488:4031:60;;2503:8:17;;;;;;;;:::i;:::-;5355:69:21;488:4031:60;;;;;;5355:69:21;:::i;:::-;488:4031:60;893:13:85;3540:1:21;;;888:95:85;488:4031:60;;;5355:69:21;488:4031:60;;;;;;;5355:69:21;:::i;:::-;540:16:62;488:4031:60;;;2098:16;488:4031;;;2098:16;488:4031;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2129:54;;;;;;;;;3636:99:21;;488:4031:60;3636:99:21;488:4031:60;3710:14:21;488:4031:60;;;;;;;;;3710:14:21;488:4031:60;;;;;;;;;;;;;;;;;;;;;;;928:3:85;488:4031:60;;;;;908:18:85;;;;;954:10;;;928:3;954:10;;;:::i;:::-;488:4031:60;;;;947:6:85;488:4031:60;;;;;;;;;;;;;928:3:85;:::i;:::-;893:13;;;;;;908:18;;;;;;488:4031:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;3551:65:21;488:4031:60;;;;;;3551:65:21;;;488:4031:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3335:108:21;3415:4;;1476:19:23;:23;3376:66:21;;3335:108;3376:66;488:4031:60;3441:1:21;488:4031:60;;;3425:17:21;3335:108;;3336:34;488:4031:60;3369:1:21;488:4031:60;;;3354:16:21;3336:34;;488:4031:60;;;;;;-1:-1:-1;;488:4031:60;;;;;;;;:::i;:::-;1303:62:17;;:::i;:::-;488:4031:60;;;;;1426:6:85;488:4031:60;;;;;;;;1425:14:85;1421:41;;1508:20;488:4031:60;;;;;1426:6:85;488:4031:60;;;;;;;;;;;;;;;;1508:20:85;488:4031:60;;;;;;-1:-1:-1;;488:4031:60;;;;;;;1513:6:17;488:4031:60;;;;;;;;;;;;;-1:-1:-1;;488:4031:60;;;;;;;;:::i;:::-;1303:62:17;;:::i;:::-;488:4031:60;;;2390:16;488:4031;;;2390:16;488:4031;2421:18;488:4031;2421:18;;488:4031;;;;;;-1:-1:-1;;488:4031:60;;;;;1303:62:17;;:::i;:::-;488:4031:60;;2765:6:17;488:4031:60;;;;2765:6:17;488:4031:60;;2813:40:17;;;;488:4031:60;;;;;;-1:-1:-1;;488:4031:60;;;;;;;;:::i;:::-;;;;1763:6:85;488:4031:60;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;488:4031:60;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;3124:10;;488:4031;;1763:6:85;488:4031:60;;;;;;;;1845:30:85;1841:57;;3178:65:60;488:4031;;;;;;3178:65;;:::i;:::-;488:4031;;;;;;3276:23;3258:41;;;3257:102;;;488:4031;3253:177;;3547:29;488:4031;3547:29;488:4031;;;;;;;;3580:18;;;3547:51;3543:80;;488:4031;;3910:40;;488:4031;;;;;;;;;;;;;;;;3910:40;;488:4031;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;3910:40;488:4031;3910:40;;488:4031;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3965:13;;;488:4031;4005:3;488:4031;;3980:23;;;;;488:4031;;4047:6;488:4031;;4098:15;;;;;:::i;:::-;;488:4031;;4134:15;488:4031;4134:15;;;;:::i;:::-;;:21;488:4031;4173:15;488:4031;4173:15;;;;:::i;:::-;;:20;;4211:15;488:4031;4211:15;;;;:::i;:::-;;:25;488:4031;;;;;;;;;;;;;;;;;4039:211;;;;;;;488:4031;4039:211;;;;488:4031;;;;;;;;;;;;;;;:::i;:::-;;;;;;4039:211;;;;;;;;;488:4031;4039:211;;;4005:3;4342:8;;4338:38;;4005:3;;;:::i;:::-;3965:13;;4338:38;488:4031;;;4359:17;;;;4039:211;;;488:4031;4039:211;;488:4031;4039:211;;;;;;488:4031;4039:211;;;:::i;:::-;;;488:4031;;;;;;;;;;;;4039:211;;;;;;-1:-1:-1;4039:211:60;;;488:4031;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;3910:40;;488:4031;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;3910:40;;488:4031;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3543:80;488:4031;;;3607:16;;;;3253:177;488:4031;3382:37;488:4031;;3382:37;;;;;;;;;:::i;:::-;;;;3257:102;3305:53;3323:35;3305:53;;;3257:102;;488:4031;;;;;;;;;;1841:57:85;488:4031:60;;;1884:14:85;;;;488:4031:60;;;;;-1:-1:-1;;488:4031:60;;;;;;360:21:62;488:4031:60;;;;;;;;;;;;;-1:-1:-1;;488:4031:60;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;488:4031:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;488:4031:60;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;488:4031:60;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;488:4031:60;;;;;-1:-1:-1;488:4031:60;1599:130:17;488:4031:60;1513:6:17;488:4031:60;;929:10:24;1662:23:17;488:4031:60;;1599:130:17:o;488:4031:60:-;;;;;;;;;;;;;;;;;;;;;;;2673:187:17;2765:6;488:4031:60;;;;;;;;;;;;2765:6:17;488:4031:60;;2813:40:17;-1:-1:-1;2813:40:17;;2673:187::o;488:4031:60:-;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;774:1197:62;;;;2181:41;1014:6;488:4031:60;2181:25:62;;;;;:::i;:::-;:41;:::i;:::-;2239:21;;999:110;;;;774:1197;1123:27;;;;;488:4031:60;;;;;;;;1154:28:62;1123:59;1154:28;;1198:31;;;1205:24;1198:31;:::o;1119:846::-;488:4031:60;;;;;;;;1250:58:62;488:4031:60;;1324:30:62;;1331:23;1324:30;:::o;1246:719::-;488:4031:60;1393:23:62;;;;;488:4031:60;;1375:15:62;:41;1371:594;488:4031:60;;;1432:33:62;;;-1:-1:-1;1432:33:62;:::o;1371:594::-;1504:24;;;488:4031:60;;;1375:15:62;1486:42;488:4031:60;;;1544:34:62;;;488:4031:60;1544:34:62;:::o;1482:483::-;1617:24;;488:4031:60;;1375:15:62;1599:42;488:4031:60;;;1657:162:62;;;1154:28;1689:42;:::o;1657:162::-;488:4031:60;1770:34:62;:::o;1595:370::-;1835:130;;;488:4031:60;1863:30:62;:::o;1835:130::-;1931:23;1924:30;:::o;999:110::-;2381:25;;-1:-1:-1;999:110:62;;;;488:4031:60;;;;;;;;;;:::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "disableSpace(address)": "9e33d811",
    "enableSpace(address)": "d92d4ea0",
    "execute((uint32,uint32,uint32,uint32,bytes32,address,address,uint8,(address,bytes)[]),uint256,uint256,uint256,bytes)": "6b12e4c4",
    "getProposalStatus((uint32,uint32,uint32,uint32,bytes32,address,address,uint8,(address,bytes)[]),uint256,uint256,uint256)": "12eadade",
    "getStrategyType()": "0eb9b15a",
    "isSpaceEnabled(address)": "6efd971c",
    "owner()": "8da5cb5b",
    "quorum()": "1703a018",
    "renounceOwnership()": "715018a6",
    "setTarget(address)": "776d1a01",
    "setUp(bytes)": "a4f9edbf",
    "target()": "d4b83992",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_spaces\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_quorum\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ExecutionFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPayload\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"enum ProposalStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"name\":\"InvalidProposalStatus\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSpace\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"_spaces\",\"type\":\"address[]\"}],\"name\":\"AvatarExecutionStrategySetUp\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"space\",\"type\":\"address\"}],\"name\":\"SpaceDisabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"space\",\"type\":\"address\"}],\"name\":\"SpaceEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newTarget\",\"type\":\"address\"}],\"name\":\"TargetSet\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"space\",\"type\":\"address\"}],\"name\":\"disableSpace\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"space\",\"type\":\"address\"}],\"name\":\"enableSpace\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"snapshotTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"startTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"minEndTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"maxEndTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"executionPayloadHash\",\"type\":\"bytes32\"},{\"internalType\":\"contract IExecutionStrategy\",\"name\":\"executionStrategy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"enum FinalizationStatus\",\"name\":\"finalizationStatus\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"addy\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"internalType\":\"struct Strategy[]\",\"name\":\"votingStrategies\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Proposal\",\"name\":\"proposal\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"votesFor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votesAgainst\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votesAbstain\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"snapshotTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"startTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"minEndTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"maxEndTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"executionPayloadHash\",\"type\":\"bytes32\"},{\"internalType\":\"contract IExecutionStrategy\",\"name\":\"executionStrategy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"enum FinalizationStatus\",\"name\":\"finalizationStatus\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"addy\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"internalType\":\"struct Strategy[]\",\"name\":\"votingStrategies\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Proposal\",\"name\":\"proposal\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"votesFor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votesAgainst\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votesAbstain\",\"type\":\"uint256\"}],\"name\":\"getProposalStatus\",\"outputs\":[{\"internalType\":\"enum ProposalStatus\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStrategyType\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"space\",\"type\":\"address\"}],\"name\":\"isSpaceEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quorum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"}],\"name\":\"setTarget\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"initParams\",\"type\":\"bytes\"}],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"target\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An Avatar contract is any contract that implements the IAvatar interface, eg a Gnosis Safe.\",\"errors\":{\"InvalidProposalStatus(uint8)\":[{\"params\":{\"status\":\"The current status of the proposal.\"}}]},\"events\":{\"AvatarExecutionStrategySetUp(address,address,address[])\":{\"details\":\"Emitted each time a new Avatar Execution Strategy is deployed.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"TargetSet(address)\":{\"details\":\"Emitted each time the Target is set.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_owner\":\"Address of the owner of this contract.\",\"_quorum\":\"The quorum required to execute a proposal.\",\"_spaces\":\"Array of whitelisted space contracts.\",\"_target\":\"Address of the avatar that this module will pass transactions to.\"}},\"disableSpace(address)\":{\"params\":{\"space\":\"Address of the space.\"}},\"enableSpace(address)\":{\"params\":{\"space\":\"Address of the space.\"}},\"execute((uint32,uint32,uint32,uint32,bytes32,address,address,uint8,(address,bytes)[]),uint256,uint256,uint256,bytes)\":{\"params\":{\"payload\":\"The encoded transactions to execute.\",\"proposal\":\"The proposal to execute.\",\"votesAbstain\":\"The number of abstaining votes.\",\"votesAgainst\":\"The number of votes against the proposal.\",\"votesFor\":\"The number of votes in favor of the proposal.\"}},\"isSpaceEnabled(address)\":{\"params\":{\"space\":\"Address of the space.\"},\"returns\":{\"_0\":\"bool whether the space is enabled.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setTarget(address)\":{\"params\":{\"_target\":\"Address of the avatar that this module will pass transactions to.\"}},\"setUp(bytes)\":{\"params\":{\"initParams\":\"ABI encoded parameters, in the same order as the constructor.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"target\":{\"details\":\"Address of the avatar that this module will pass transactions to.\"}},\"title\":\"Avatar Execution Strategy - An Execution strategy that executes transactions on an Avatar contract\",\"version\":1},\"userdoc\":{\"errors\":{\"ExecutionFailed()\":[{\"notice\":\"Thrown when the execution of a proposal fails.\"}],\"InvalidPayload()\":[{\"notice\":\"Thrown when the execution payload supplied to the execution strategy is not equal to the payload supplied when the proposal was created.\"}],\"InvalidProposalStatus(uint8)\":[{\"notice\":\"Thrown when the current status of a proposal does not allow the desired action.\"}]},\"events\":{\"SpaceDisabled(address)\":{\"notice\":\"Emitted when a space is disabled.\"},\"SpaceEnabled(address)\":{\"notice\":\"Emitted when a space is enabled.\"}},\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Constructor\"},\"disableSpace(address)\":{\"notice\":\"Disable a space.\"},\"enableSpace(address)\":{\"notice\":\"Enable a space.\"},\"execute((uint32,uint32,uint32,uint32,bytes32,address,address,uint8,(address,bytes)[]),uint256,uint256,uint256,bytes)\":{\"notice\":\"Executes a proposal from the avatar contract if the proposal outcome is accepted.         Must be called by a whitelisted space contract.\"},\"isSpaceEnabled(address)\":{\"notice\":\"Check if a space is enabled.\"},\"setTarget(address)\":{\"notice\":\"Sets the target address\"},\"setUp(bytes)\":{\"notice\":\"Initialize function, should be called immediately after deploying a new proxy to this contract.Can only be called once.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/execution-strategies/AvatarExecutionStrategy.sol\":\"AvatarExecutionStrategy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[\":@gnosis.pm/safe-contracts/=lib/safe-contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@prb/test/=lib/prb-test/src/\",\":@zodiac/=lib/zodiac/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":prb-test/=lib/prb-test/src/\",\":safe-contracts/=lib/safe-contracts/contracts/\",\":zodiac/=lib/zodiac/contracts/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xe798cadb41e2da274913e4b3183a80f50fb057a42238fe8467e077268100ec27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://899f850f7df5a270bccfb765d70069959ca1c20d3a7381c1c3bda8a3ffee1935\",\"dweb:/ipfs/QmVdnAqwyX2L3nX2HDA5WKGtVBFyH1nKE9A1k7fZnPBkhP\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/safe-contracts/contracts/common/Enum.sol\":{\"keccak256\":\"0x473e45b1a5cc47be494b0e123c9127f0c11c1e0992a321ae5a644c0bfdb2c14f\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://948e6d5a8bd7377f7795b6e28584eab9be5c0a8db240bf5e606744a175238c3d\",\"dweb:/ipfs/QmQQaUmQfpuejV41jbxKSTgEBYYCcVTjCsDMgf2htgz6ej\"]},\"lib/zodiac/contracts/interfaces/IAvatar.sol\":{\"keccak256\":\"0xcd5508ffe596eef8fbccfd5fc4f10a34397773547ce64e212d48b5212865ec1f\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://1655ba8b760132ebd702cc806fcdad50a44d320fbeca14be00e35b0171bd35cf\",\"dweb:/ipfs/QmcbB5HpCoEQCTHKWxHS3HpFmgaB4AcZxZYtvQk2QEyvN2\"]},\"src/execution-strategies/AvatarExecutionStrategy.sol\":{\"keccak256\":\"0x0cca3add19c9e7a9217c6bd0083807f75570611a5c2f6ae3f89cf4df29dd6c50\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2a4ffc194e88c31ecc60f41c3ae723129f2af771deb6403e24f83307762c14c\",\"dweb:/ipfs/QmbzcE1YqYBY6XpazcxXzX9K5PdJPKQzmYpnqWWrRbSnt7\"]},\"src/execution-strategies/SimpleQuorumExecutionStrategy.sol\":{\"keccak256\":\"0x7fbbf4f53dbd0a66dfe3eeb3d531a0c1405ae5bfc01eac1fc730dc2aa6c8df15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8601fb8bd397526bb7e9d367d5358168334737435a675bb8b7a031672da3e864\",\"dweb:/ipfs/QmSRgrfodN9FzKbBtawodvfwhDDaomeZkG4VWDAkNuanHo\"]},\"src/interfaces/IExecutionStrategy.sol\":{\"keccak256\":\"0x641b22408afae2225f451724a25536b7237ca0be5bb4eed6fa4049cfdbee4f47\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8de2ce3c2d23b4302594a6584a2b679f574e03182ae63547533cb519a8127ce1\",\"dweb:/ipfs/Qma22mCuJreVqGLY3BPSb1gVkMQ3bzPZRPghUFoeBQrtb1\"]},\"src/interfaces/execution-strategies/IExecutionStrategyErrors.sol\":{\"keccak256\":\"0x50e9d34682598a16c623476385a1d10e62b69c46ac07258d5d4de55a918e2eb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://64f878026d6eba929754257bdf8224ad60dde00b84a33b72609b1b038e2ac62e\",\"dweb:/ipfs/QmYWaLHaUBMfQeiVKyrSAi1GKMYJS9aT3YrvjVsG4uPfYo\"]},\"src/types.sol\":{\"keccak256\":\"0x68fb90d01ef352eba200875809dbbd059eda955f07429a712ce63e398315a9ca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6392acf4168433ed69a3b5a43b5b92e86a1696ed7637ebb06ea97b2658e7b286\",\"dweb:/ipfs/QmSs963TaX8pCNsL1h4L8jYaPgEczqfzbf6epaUYMj4j8x\"]},\"src/utils/SpaceManager.sol\":{\"keccak256\":\"0x3b06201b3925be76066a88016bd38a97e6ef131ba046ff9a677758a31253c14c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e78900425f2e8d3317c0f5a97920312cba9f7e7abb17b88d5d605d08068e8bf2\",\"dweb:/ipfs/QmRxDVNBejXitVkmcsC5dKdkmgp3ADxeX2NJDCbJiZtxGs\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.18+commit.87f61d96"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_target",
              "type": "address"
            },
            {
              "internalType": "address[]",
              "name": "_spaces",
              "type": "address[]"
            },
            {
              "internalType": "uint256",
              "name": "_quorum",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ExecutionFailed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidPayload"
        },
        {
          "inputs": [
            {
              "internalType": "enum ProposalStatus",
              "name": "status",
              "type": "uint8"
            }
          ],
          "type": "error",
          "name": "InvalidProposalStatus"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidSpace"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "_target",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "_spaces",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AvatarExecutionStrategySetUp",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "space",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SpaceDisabled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "space",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SpaceEnabled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newTarget",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "TargetSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "space",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "disableSpace"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "space",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "enableSpace"
        },
        {
          "inputs": [
            {
              "internalType": "struct Proposal",
              "name": "proposal",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "snapshotTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "startTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "minEndTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "maxEndTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "bytes32",
                  "name": "executionPayloadHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "contract IExecutionStrategy",
                  "name": "executionStrategy",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "author",
                  "type": "address"
                },
                {
                  "internalType": "enum FinalizationStatus",
                  "name": "finalizationStatus",
                  "type": "uint8"
                },
                {
                  "internalType": "struct Strategy[]",
                  "name": "votingStrategies",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "addy",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "params",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "votesFor",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "votesAgainst",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "votesAbstain",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "payload",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "execute"
        },
        {
          "inputs": [
            {
              "internalType": "struct Proposal",
              "name": "proposal",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "snapshotTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "startTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "minEndTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "maxEndTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "bytes32",
                  "name": "executionPayloadHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "contract IExecutionStrategy",
                  "name": "executionStrategy",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "author",
                  "type": "address"
                },
                {
                  "internalType": "enum FinalizationStatus",
                  "name": "finalizationStatus",
                  "type": "uint8"
                },
                {
                  "internalType": "struct Strategy[]",
                  "name": "votingStrategies",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "addy",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "params",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "votesFor",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "votesAgainst",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "votesAbstain",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getProposalStatus",
          "outputs": [
            {
              "internalType": "enum ProposalStatus",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "getStrategyType",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "space",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isSpaceEnabled",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "quorum",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_target",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setTarget"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "initParams",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "target",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "constructor": {
            "params": {
              "_owner": "Address of the owner of this contract.",
              "_quorum": "The quorum required to execute a proposal.",
              "_spaces": "Array of whitelisted space contracts.",
              "_target": "Address of the avatar that this module will pass transactions to."
            }
          },
          "disableSpace(address)": {
            "params": {
              "space": "Address of the space."
            }
          },
          "enableSpace(address)": {
            "params": {
              "space": "Address of the space."
            }
          },
          "execute((uint32,uint32,uint32,uint32,bytes32,address,address,uint8,(address,bytes)[]),uint256,uint256,uint256,bytes)": {
            "params": {
              "payload": "The encoded transactions to execute.",
              "proposal": "The proposal to execute.",
              "votesAbstain": "The number of abstaining votes.",
              "votesAgainst": "The number of votes against the proposal.",
              "votesFor": "The number of votes in favor of the proposal."
            }
          },
          "isSpaceEnabled(address)": {
            "params": {
              "space": "Address of the space."
            },
            "returns": {
              "_0": "bool whether the space is enabled."
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "setTarget(address)": {
            "params": {
              "_target": "Address of the avatar that this module will pass transactions to."
            }
          },
          "setUp(bytes)": {
            "params": {
              "initParams": "ABI encoded parameters, in the same order as the constructor."
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "constructor": {
            "notice": "Constructor"
          },
          "disableSpace(address)": {
            "notice": "Disable a space."
          },
          "enableSpace(address)": {
            "notice": "Enable a space."
          },
          "execute((uint32,uint32,uint32,uint32,bytes32,address,address,uint8,(address,bytes)[]),uint256,uint256,uint256,bytes)": {
            "notice": "Executes a proposal from the avatar contract if the proposal outcome is accepted.         Must be called by a whitelisted space contract."
          },
          "isSpaceEnabled(address)": {
            "notice": "Check if a space is enabled."
          },
          "setTarget(address)": {
            "notice": "Sets the target address"
          },
          "setUp(bytes)": {
            "notice": "Initialize function, should be called immediately after deploying a new proxy to this contract.Can only be called once."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@gnosis.pm/safe-contracts/=lib/safe-contracts/",
        ":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        ":@prb/test/=lib/prb-test/src/",
        ":@zodiac/=lib/zodiac/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-gas-snapshot/=lib/forge-gas-snapshot/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":prb-test/=lib/prb-test/src/",
        ":safe-contracts/=lib/safe-contracts/contracts/",
        ":zodiac/=lib/zodiac/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 10000
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "src/execution-strategies/AvatarExecutionStrategy.sol": "AvatarExecutionStrategy"
      },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888",
        "urls": [
          "bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a",
          "dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0xe798cadb41e2da274913e4b3183a80f50fb057a42238fe8467e077268100ec27",
        "urls": [
          "bzz-raw://899f850f7df5a270bccfb765d70069959ca1c20d3a7381c1c3bda8a3ffee1935",
          "dweb:/ipfs/QmVdnAqwyX2L3nX2HDA5WKGtVBFyH1nKE9A1k7fZnPBkhP"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183",
        "urls": [
          "bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06",
          "dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/safe-contracts/contracts/common/Enum.sol": {
        "keccak256": "0x473e45b1a5cc47be494b0e123c9127f0c11c1e0992a321ae5a644c0bfdb2c14f",
        "urls": [
          "bzz-raw://948e6d5a8bd7377f7795b6e28584eab9be5c0a8db240bf5e606744a175238c3d",
          "dweb:/ipfs/QmQQaUmQfpuejV41jbxKSTgEBYYCcVTjCsDMgf2htgz6ej"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/zodiac/contracts/interfaces/IAvatar.sol": {
        "keccak256": "0xcd5508ffe596eef8fbccfd5fc4f10a34397773547ce64e212d48b5212865ec1f",
        "urls": [
          "bzz-raw://1655ba8b760132ebd702cc806fcdad50a44d320fbeca14be00e35b0171bd35cf",
          "dweb:/ipfs/QmcbB5HpCoEQCTHKWxHS3HpFmgaB4AcZxZYtvQk2QEyvN2"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/execution-strategies/AvatarExecutionStrategy.sol": {
        "keccak256": "0x0cca3add19c9e7a9217c6bd0083807f75570611a5c2f6ae3f89cf4df29dd6c50",
        "urls": [
          "bzz-raw://b2a4ffc194e88c31ecc60f41c3ae723129f2af771deb6403e24f83307762c14c",
          "dweb:/ipfs/QmbzcE1YqYBY6XpazcxXzX9K5PdJPKQzmYpnqWWrRbSnt7"
        ],
        "license": "MIT"
      },
      "src/execution-strategies/SimpleQuorumExecutionStrategy.sol": {
        "keccak256": "0x7fbbf4f53dbd0a66dfe3eeb3d531a0c1405ae5bfc01eac1fc730dc2aa6c8df15",
        "urls": [
          "bzz-raw://8601fb8bd397526bb7e9d367d5358168334737435a675bb8b7a031672da3e864",
          "dweb:/ipfs/QmSRgrfodN9FzKbBtawodvfwhDDaomeZkG4VWDAkNuanHo"
        ],
        "license": "MIT"
      },
      "src/interfaces/IExecutionStrategy.sol": {
        "keccak256": "0x641b22408afae2225f451724a25536b7237ca0be5bb4eed6fa4049cfdbee4f47",
        "urls": [
          "bzz-raw://8de2ce3c2d23b4302594a6584a2b679f574e03182ae63547533cb519a8127ce1",
          "dweb:/ipfs/Qma22mCuJreVqGLY3BPSb1gVkMQ3bzPZRPghUFoeBQrtb1"
        ],
        "license": "MIT"
      },
      "src/interfaces/execution-strategies/IExecutionStrategyErrors.sol": {
        "keccak256": "0x50e9d34682598a16c623476385a1d10e62b69c46ac07258d5d4de55a918e2eb2",
        "urls": [
          "bzz-raw://64f878026d6eba929754257bdf8224ad60dde00b84a33b72609b1b038e2ac62e",
          "dweb:/ipfs/QmYWaLHaUBMfQeiVKyrSAi1GKMYJS9aT3YrvjVsG4uPfYo"
        ],
        "license": "MIT"
      },
      "src/types.sol": {
        "keccak256": "0x68fb90d01ef352eba200875809dbbd059eda955f07429a712ce63e398315a9ca",
        "urls": [
          "bzz-raw://6392acf4168433ed69a3b5a43b5b92e86a1696ed7637ebb06ea97b2658e7b286",
          "dweb:/ipfs/QmSs963TaX8pCNsL1h4L8jYaPgEczqfzbf6epaUYMj4j8x"
        ],
        "license": "MIT"
      },
      "src/utils/SpaceManager.sol": {
        "keccak256": "0x3b06201b3925be76066a88016bd38a97e6ef131ba046ff9a677758a31253c14c",
        "urls": [
          "bzz-raw://e78900425f2e8d3317c0f5a97920312cba9f7e7abb17b88d5d605d08068e8bf2",
          "dweb:/ipfs/QmRxDVNBejXitVkmcsC5dKdkmgp3ADxeX2NJDCbJiZtxGs"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/execution-strategies/AvatarExecutionStrategy.sol",
    "id": 34672,
    "exportedSymbols": {
      "AvatarExecutionStrategy": [34671],
      "IAvatar": [32196],
      "MetaTransaction": [36243],
      "Proposal": [36205],
      "ProposalStatus": [36227],
      "SimpleQuorumExecutionStrategy": [34986]
    },
    "nodeType": "SourceUnit",
    "src": "33:4487:60",
    "nodes": [
      {
        "id": 34404,
        "nodeType": "PragmaDirective",
        "src": "33:24:60",
        "nodes": [],
        "literals": ["solidity", "^", "0.8", ".18"]
      },
      {
        "id": 34406,
        "nodeType": "ImportDirective",
        "src": "59:57:60",
        "nodes": [],
        "absolutePath": "lib/zodiac/contracts/interfaces/IAvatar.sol",
        "file": "@zodiac/interfaces/IAvatar.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34672,
        "sourceUnit": 32197,
        "symbolAliases": [
          {
            "foreign": {
              "id": 34405,
              "name": "IAvatar",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 32196,
              "src": "68:7:60",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 34408,
        "nodeType": "ImportDirective",
        "src": "117:84:60",
        "nodes": [],
        "absolutePath": "src/execution-strategies/SimpleQuorumExecutionStrategy.sol",
        "file": "./SimpleQuorumExecutionStrategy.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34672,
        "sourceUnit": 34987,
        "symbolAliases": [
          {
            "foreign": {
              "id": 34407,
              "name": "SimpleQuorumExecutionStrategy",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 34986,
              "src": "126:29:60",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 34412,
        "nodeType": "ImportDirective",
        "src": "202:73:60",
        "nodes": [],
        "absolutePath": "src/types.sol",
        "file": "../types.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34672,
        "sourceUnit": 36244,
        "symbolAliases": [
          {
            "foreign": {
              "id": 34409,
              "name": "MetaTransaction",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36243,
              "src": "211:15:60",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 34410,
              "name": "Proposal",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36205,
              "src": "228:8:60",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 34411,
              "name": "ProposalStatus",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36227,
              "src": "238:14:60",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 34671,
        "nodeType": "ContractDefinition",
        "src": "488:4031:60",
        "nodes": [
          {
            "id": 34425,
            "nodeType": "EventDefinition",
            "src": "636:87:60",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 34416,
              "nodeType": "StructuredDocumentation",
              "src": "560:71:60",
              "text": "@dev Emitted each time a new Avatar Execution Strategy is deployed."
            },
            "eventSelector": "621a036730af1cc915beba86ec9f773f11d2983a09e67fa9d62c6cebedf2364e",
            "name": "AvatarExecutionStrategySetUp",
            "nameLocation": "642:28:60",
            "parameters": {
              "id": 34424,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34418,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "679:6:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 34425,
                  "src": "671:14:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34417,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "671:7:60",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34420,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_target",
                  "nameLocation": "695:7:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 34425,
                  "src": "687:15:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34419,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "687:7:60",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34423,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_spaces",
                  "nameLocation": "714:7:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 34425,
                  "src": "704:17:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 34421,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "704:7:60",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 34422,
                    "nodeType": "ArrayTypeName",
                    "src": "704:9:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "670:52:60"
            }
          },
          {
            "id": 34430,
            "nodeType": "EventDefinition",
            "src": "779:43:60",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 34426,
              "nodeType": "StructuredDocumentation",
              "src": "729:45:60",
              "text": "@dev Emitted each time the Target is set."
            },
            "eventSelector": "3bfb4bbf112628248058745a3c57e35b13369386e474b8e56c552f3063a4a196",
            "name": "TargetSet",
            "nameLocation": "785:9:60",
            "parameters": {
              "id": 34429,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34428,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newTarget",
                  "nameLocation": "811:9:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 34430,
                  "src": "795:25:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34427,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "795:7:60",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "794:27:60"
            }
          },
          {
            "id": 34433,
            "nodeType": "VariableDeclaration",
            "src": "907:21:60",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 34431,
              "nodeType": "StructuredDocumentation",
              "src": "828:74:60",
              "text": "@dev Address of the avatar that this module will pass transactions to."
            },
            "functionSelector": "d4b83992",
            "mutability": "mutable",
            "name": "target",
            "nameLocation": "922:6:60",
            "scope": 34671,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 34432,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "907:7:60",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 34461,
            "nodeType": "FunctionDefinition",
            "src": "1240:203:60",
            "nodes": [],
            "body": {
              "id": 34460,
              "nodeType": "Block",
              "src": "1328:115:60",
              "nodes": [],
              "statements": [
                {
                  "assignments": [34447],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34447,
                      "mutability": "mutable",
                      "name": "initParams",
                      "nameLocation": "1351:10:60",
                      "nodeType": "VariableDeclaration",
                      "scope": 34460,
                      "src": "1338:23:60",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 34446,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1338:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34455,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 34450,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34436,
                        "src": "1375:6:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 34451,
                        "name": "_target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34438,
                        "src": "1383:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 34452,
                        "name": "_spaces",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34441,
                        "src": "1392:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "id": 34453,
                        "name": "_quorum",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34443,
                        "src": "1401:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 34448,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "1364:3:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 34449,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1368:6:60",
                      "memberName": "encode",
                      "nodeType": "MemberAccess",
                      "src": "1364:10:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 34454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1364:45:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1338:71:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34457,
                        "name": "initParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34447,
                        "src": "1425:10:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 34456,
                      "name": "setUp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34519,
                      "src": "1419:5:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory)"
                      }
                    },
                    "id": 34458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1419:17:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34459,
                  "nodeType": "ExpressionStatement",
                  "src": "1419:17:60"
                }
              ]
            },
            "documentation": {
              "id": 34434,
              "nodeType": "StructuredDocumentation",
              "src": "935:300:60",
              "text": "@notice Constructor\n @param _owner Address of the owner of this contract.\n @param _target Address of the avatar that this module will pass transactions to.\n @param _spaces Array of whitelisted space contracts.\n @param _quorum The quorum required to execute a proposal."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 34444,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34436,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "1260:6:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 34461,
                  "src": "1252:14:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34435,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1252:7:60",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34438,
                  "mutability": "mutable",
                  "name": "_target",
                  "nameLocation": "1276:7:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 34461,
                  "src": "1268:15:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34437,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1268:7:60",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34441,
                  "mutability": "mutable",
                  "name": "_spaces",
                  "nameLocation": "1302:7:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 34461,
                  "src": "1285:24:60",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 34439,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1285:7:60",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 34440,
                    "nodeType": "ArrayTypeName",
                    "src": "1285:9:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34443,
                  "mutability": "mutable",
                  "name": "_quorum",
                  "nameLocation": "1319:7:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 34461,
                  "src": "1311:15:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34442,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1311:7:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1251:76:60"
            },
            "returnParameters": {
              "id": 34445,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1328:0:60"
            },
            "scope": 34671,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34519,
            "nodeType": "FunctionDefinition",
            "src": "1690:500:60",
            "nodes": [],
            "body": {
              "id": 34518,
              "nodeType": "Block",
              "src": "1749:441:60",
              "nodes": [],
              "statements": [
                {
                  "assignments": [34470, 34472, 34475, 34477],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34470,
                      "mutability": "mutable",
                      "name": "_owner",
                      "nameLocation": "1768:6:60",
                      "nodeType": "VariableDeclaration",
                      "scope": 34518,
                      "src": "1760:14:60",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 34469,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1760:7:60",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 34472,
                      "mutability": "mutable",
                      "name": "_target",
                      "nameLocation": "1784:7:60",
                      "nodeType": "VariableDeclaration",
                      "scope": 34518,
                      "src": "1776:15:60",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 34471,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1776:7:60",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 34475,
                      "mutability": "mutable",
                      "name": "_spaces",
                      "nameLocation": "1810:7:60",
                      "nodeType": "VariableDeclaration",
                      "scope": 34518,
                      "src": "1793:24:60",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 34473,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1793:7:60",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 34474,
                        "nodeType": "ArrayTypeName",
                        "src": "1793:9:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 34477,
                      "mutability": "mutable",
                      "name": "_quorum",
                      "nameLocation": "1827:7:60",
                      "nodeType": "VariableDeclaration",
                      "scope": 34518,
                      "src": "1819:15:60",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 34476,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1819:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34492,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 34480,
                        "name": "initParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34464,
                        "src": "1862:10:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 34482,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1887:7:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 34481,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1887:7:60",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 34484,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1896:7:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 34483,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1896:7:60",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "baseExpression": {
                              "id": 34486,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1905:7:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 34485,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1905:7:60",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 34487,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1905:9:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_array$_t_address_$dyn_memory_ptr_$",
                              "typeString": "type(address[] memory)"
                            }
                          },
                          {
                            "id": 34489,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1916:7:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 34488,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1916:7:60",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 34490,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1886:38:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_address_$_$_t_type$_t_array$_t_address_$dyn_memory_ptr_$_$_t_type$_t_uint256_$_$",
                          "typeString": "tuple(type(address),type(address),type(address[] memory),type(uint256))"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_address_$_$_t_type$_t_array$_t_address_$dyn_memory_ptr_$_$_t_type$_t_uint256_$_$",
                          "typeString": "tuple(type(address),type(address),type(address[] memory),type(uint256))"
                        }
                      ],
                      "expression": {
                        "id": 34478,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "1838:3:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 34479,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1842:6:60",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "1838:10:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 34491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1838:96:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_payable_$_t_address_payable_$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$",
                      "typeString": "tuple(address payable,address payable,address[] memory,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1759:175:60"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 34493,
                      "name": "__Ownable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25109,
                      "src": "1944:14:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 34494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1944:16:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34495,
                  "nodeType": "ExpressionStatement",
                  "src": "1944:16:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34497,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34470,
                        "src": "1988:6:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 34496,
                      "name": "transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25188,
                      "src": "1970:17:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 34498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1970:25:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34499,
                  "nodeType": "ExpressionStatement",
                  "src": "1970:25:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34501,
                        "name": "_spaces",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34475,
                        "src": "2025:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      ],
                      "id": 34500,
                      "name": "__SpaceManager_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36898,
                      "src": "2005:19:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address[] memory)"
                      }
                    },
                    "id": 34502,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2005:28:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34503,
                  "nodeType": "ExpressionStatement",
                  "src": "2005:28:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34505,
                        "name": "_quorum",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34477,
                        "src": "2080:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 34504,
                      "name": "__SimpleQuorumExecutionStrategy_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34826,
                      "src": "2043:36:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 34506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2043:45:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34507,
                  "nodeType": "ExpressionStatement",
                  "src": "2043:45:60"
                },
                {
                  "expression": {
                    "id": 34510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 34508,
                      "name": "target",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34433,
                      "src": "2098:6:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 34509,
                      "name": "_target",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34472,
                      "src": "2107:7:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2098:16:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 34511,
                  "nodeType": "ExpressionStatement",
                  "src": "2098:16:60"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 34513,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34470,
                        "src": "2158:6:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 34514,
                        "name": "_target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34472,
                        "src": "2166:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 34515,
                        "name": "_spaces",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34475,
                        "src": "2175:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      ],
                      "id": 34512,
                      "name": "AvatarExecutionStrategySetUp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34425,
                      "src": "2129:28:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address[] memory)"
                      }
                    },
                    "id": 34516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2129:54:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34517,
                  "nodeType": "EmitStatement",
                  "src": "2124:59:60"
                }
              ]
            },
            "documentation": {
              "id": 34462,
              "nodeType": "StructuredDocumentation",
              "src": "1449:236:60",
              "text": "@notice Initialize function, should be called immediately after deploying a new proxy to this contract.\n @param initParams ABI encoded parameters, in the same order as the constructor.\n @notice Can only be called once."
            },
            "functionSelector": "a4f9edbf",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 34467,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 34466,
                  "name": "initializer",
                  "nameLocations": ["1737:11:60"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 25674,
                  "src": "1737:11:60"
                },
                "nodeType": "ModifierInvocation",
                "src": "1737:11:60"
              }
            ],
            "name": "setUp",
            "nameLocation": "1699:5:60",
            "parameters": {
              "id": 34465,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34464,
                  "mutability": "mutable",
                  "name": "initParams",
                  "nameLocation": "1718:10:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 34519,
                  "src": "1705:23:60",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 34463,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1705:5:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1704:25:60"
            },
            "returnParameters": {
              "id": 34468,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1749:0:60"
            },
            "scope": 34671,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34536,
            "nodeType": "FunctionDefinition",
            "src": "2325:121:60",
            "nodes": [],
            "body": {
              "id": 34535,
              "nodeType": "Block",
              "src": "2380:66:60",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 34529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 34527,
                      "name": "target",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34433,
                      "src": "2390:6:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 34528,
                      "name": "_target",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34522,
                      "src": "2399:7:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2390:16:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 34530,
                  "nodeType": "ExpressionStatement",
                  "src": "2390:16:60"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 34532,
                        "name": "_target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34522,
                        "src": "2431:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 34531,
                      "name": "TargetSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34430,
                      "src": "2421:9:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 34533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2421:18:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34534,
                  "nodeType": "EmitStatement",
                  "src": "2416:23:60"
                }
              ]
            },
            "documentation": {
              "id": 34520,
              "nodeType": "StructuredDocumentation",
              "src": "2196:124:60",
              "text": "@notice Sets the target address\n @param _target Address of the avatar that this module will pass transactions to."
            },
            "functionSelector": "776d1a01",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 34525,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 34524,
                  "name": "onlyOwner",
                  "nameLocations": ["2370:9:60"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 25128,
                  "src": "2370:9:60"
                },
                "nodeType": "ModifierInvocation",
                "src": "2370:9:60"
              }
            ],
            "name": "setTarget",
            "nameLocation": "2334:9:60",
            "parameters": {
              "id": 34523,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34522,
                  "mutability": "mutable",
                  "name": "_target",
                  "nameLocation": "2352:7:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 34536,
                  "src": "2344:15:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34521,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2344:7:60",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2343:17:60"
            },
            "returnParameters": {
              "id": 34526,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2380:0:60"
            },
            "scope": 34671,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 34598,
            "nodeType": "FunctionDefinition",
            "src": "2923:735:60",
            "nodes": [],
            "body": {
              "id": 34597,
              "nodeType": "Block",
              "src": "3136:522:60",
              "nodes": [],
              "statements": [
                {
                  "assignments": [34558],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34558,
                      "mutability": "mutable",
                      "name": "proposalStatus",
                      "nameLocation": "3161:14:60",
                      "nodeType": "VariableDeclaration",
                      "scope": 34597,
                      "src": "3146:29:60",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProposalStatus_$36227",
                        "typeString": "enum ProposalStatus"
                      },
                      "typeName": {
                        "id": 34557,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 34556,
                          "name": "ProposalStatus",
                          "nameLocations": ["3146:14:60"],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 36227,
                          "src": "3146:14:60"
                        },
                        "referencedDeclaration": 36227,
                        "src": "3146:14:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ProposalStatus_$36227",
                          "typeString": "enum ProposalStatus"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34565,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 34560,
                        "name": "proposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34540,
                        "src": "3196:8:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$36205_memory_ptr",
                          "typeString": "struct Proposal memory"
                        }
                      },
                      {
                        "id": 34561,
                        "name": "votesFor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34542,
                        "src": "3206:8:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 34562,
                        "name": "votesAgainst",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34544,
                        "src": "3216:12:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 34563,
                        "name": "votesAbstain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34546,
                        "src": "3230:12:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Proposal_$36205_memory_ptr",
                          "typeString": "struct Proposal memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 34559,
                      "name": "getProposalStatus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34939,
                      "src": "3178:17:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Proposal_$36205_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_enum$_ProposalStatus_$36227_$",
                        "typeString": "function (struct Proposal memory,uint256,uint256,uint256) view returns (enum ProposalStatus)"
                      }
                    },
                    "id": 34564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3178:65:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProposalStatus_$36227",
                      "typeString": "enum ProposalStatus"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3146:97:60"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 34576,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_enum$_ProposalStatus_$36227",
                            "typeString": "enum ProposalStatus"
                          },
                          "id": 34569,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 34566,
                            "name": "proposalStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34558,
                            "src": "3258:14:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ProposalStatus_$36227",
                              "typeString": "enum ProposalStatus"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "expression": {
                              "id": 34567,
                              "name": "ProposalStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 36227,
                              "src": "3276:14:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_ProposalStatus_$36227_$",
                                "typeString": "type(enum ProposalStatus)"
                              }
                            },
                            "id": 34568,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "3291:8:60",
                            "memberName": "Accepted",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 36223,
                            "src": "3276:23:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ProposalStatus_$36227",
                              "typeString": "enum ProposalStatus"
                            }
                          },
                          "src": "3258:41:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 34570,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3257:43:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_enum$_ProposalStatus_$36227",
                            "typeString": "enum ProposalStatus"
                          },
                          "id": 34574,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 34571,
                            "name": "proposalStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34558,
                            "src": "3305:14:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ProposalStatus_$36227",
                              "typeString": "enum ProposalStatus"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "expression": {
                              "id": 34572,
                              "name": "ProposalStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 36227,
                              "src": "3323:14:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_ProposalStatus_$36227_$",
                                "typeString": "type(enum ProposalStatus)"
                              }
                            },
                            "id": 34573,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "3338:20:60",
                            "memberName": "VotingPeriodAccepted",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 36222,
                            "src": "3323:35:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ProposalStatus_$36227",
                              "typeString": "enum ProposalStatus"
                            }
                          },
                          "src": "3305:53:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 34575,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3304:55:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3257:102:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 34582,
                  "nodeType": "IfStatement",
                  "src": "3253:177:60",
                  "trueBody": {
                    "id": 34581,
                    "nodeType": "Block",
                    "src": "3361:69:60",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 34578,
                              "name": "proposalStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34558,
                              "src": "3404:14:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ProposalStatus_$36227",
                                "typeString": "enum ProposalStatus"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_ProposalStatus_$36227",
                                "typeString": "enum ProposalStatus"
                              }
                            ],
                            "id": 34577,
                            "name": "InvalidProposalStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35678,
                            "src": "3382:21:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_enum$_ProposalStatus_$36227_$returns$__$",
                              "typeString": "function (enum ProposalStatus) pure"
                            }
                          },
                          "id": 34579,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3382:37:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 34580,
                        "nodeType": "RevertStatement",
                        "src": "3375:44:60"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 34588,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 34583,
                        "name": "proposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34540,
                        "src": "3547:8:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$36205_memory_ptr",
                          "typeString": "struct Proposal memory"
                        }
                      },
                      "id": 34584,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3556:20:60",
                      "memberName": "executionPayloadHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36192,
                      "src": "3547:29:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 34586,
                          "name": "payload",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34548,
                          "src": "3590:7:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 34585,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "3580:9:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 34587,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3580:18:60",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "3547:51:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 34592,
                  "nodeType": "IfStatement",
                  "src": "3543:80:60",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 34589,
                        "name": "InvalidPayload",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35684,
                        "src": "3607:14:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 34590,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3607:16:60",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 34591,
                    "nodeType": "RevertStatement",
                    "src": "3600:23:60"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34594,
                        "name": "payload",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34548,
                        "src": "3643:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 34593,
                      "name": "_execute",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34661,
                      "src": "3634:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory)"
                      }
                    },
                    "id": 34595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3634:17:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34596,
                  "nodeType": "ExpressionStatement",
                  "src": "3634:17:60"
                }
              ]
            },
            "baseFunctions": [34841],
            "documentation": {
              "id": 34537,
              "nodeType": "StructuredDocumentation",
              "src": "2452:466:60",
              "text": "@notice Executes a proposal from the avatar contract if the proposal outcome is accepted.\n         Must be called by a whitelisted space contract.\n @param proposal The proposal to execute.\n @param votesFor The number of votes in favor of the proposal.\n @param votesAgainst The number of votes against the proposal.\n @param votesAbstain The number of abstaining votes.\n @param payload The encoded transactions to execute."
            },
            "functionSelector": "6b12e4c4",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 34552,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "3124:3:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 34553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "3128:6:60",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "3124:10:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 34554,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 34551,
                  "name": "onlySpace",
                  "nameLocations": ["3114:9:60"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 36985,
                  "src": "3114:9:60"
                },
                "nodeType": "ModifierInvocation",
                "src": "3114:21:60"
              }
            ],
            "name": "execute",
            "nameLocation": "2932:7:60",
            "overrides": {
              "id": 34550,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3105:8:60"
            },
            "parameters": {
              "id": 34549,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34540,
                  "mutability": "mutable",
                  "name": "proposal",
                  "nameLocation": "2965:8:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 34598,
                  "src": "2949:24:60",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Proposal_$36205_memory_ptr",
                    "typeString": "struct Proposal"
                  },
                  "typeName": {
                    "id": 34539,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 34538,
                      "name": "Proposal",
                      "nameLocations": ["2949:8:60"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 36205,
                      "src": "2949:8:60"
                    },
                    "referencedDeclaration": 36205,
                    "src": "2949:8:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proposal_$36205_storage_ptr",
                      "typeString": "struct Proposal"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34542,
                  "mutability": "mutable",
                  "name": "votesFor",
                  "nameLocation": "2991:8:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 34598,
                  "src": "2983:16:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34541,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2983:7:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34544,
                  "mutability": "mutable",
                  "name": "votesAgainst",
                  "nameLocation": "3017:12:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 34598,
                  "src": "3009:20:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34543,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3009:7:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34546,
                  "mutability": "mutable",
                  "name": "votesAbstain",
                  "nameLocation": "3047:12:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 34598,
                  "src": "3039:20:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34545,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3039:7:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34548,
                  "mutability": "mutable",
                  "name": "payload",
                  "nameLocation": "3082:7:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 34598,
                  "src": "3069:20:60",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 34547,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3069:5:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2939:156:60"
            },
            "returnParameters": {
              "id": 34555,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3136:0:60"
            },
            "scope": 34671,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 34661,
            "nodeType": "FunctionDefinition",
            "src": "3811:582:60",
            "nodes": [],
            "body": {
              "id": 34660,
              "nodeType": "Block",
              "src": "3860:533:60",
              "nodes": [],
              "statements": [
                {
                  "assignments": [34608],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34608,
                      "mutability": "mutable",
                      "name": "transactions",
                      "nameLocation": "3895:12:60",
                      "nodeType": "VariableDeclaration",
                      "scope": 34660,
                      "src": "3870:37:60",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_MetaTransaction_$36243_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct MetaTransaction[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 34606,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 34605,
                            "name": "MetaTransaction",
                            "nameLocations": ["3870:15:60"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 36243,
                            "src": "3870:15:60"
                          },
                          "referencedDeclaration": 36243,
                          "src": "3870:15:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MetaTransaction_$36243_storage_ptr",
                            "typeString": "struct MetaTransaction"
                          }
                        },
                        "id": 34607,
                        "nodeType": "ArrayTypeName",
                        "src": "3870:17:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_MetaTransaction_$36243_storage_$dyn_storage_ptr",
                          "typeString": "struct MetaTransaction[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34616,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 34611,
                        "name": "payload",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34601,
                        "src": "3921:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "baseExpression": {
                              "id": 34612,
                              "name": "MetaTransaction",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 36243,
                              "src": "3931:15:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_MetaTransaction_$36243_storage_ptr_$",
                                "typeString": "type(struct MetaTransaction storage pointer)"
                              }
                            },
                            "id": 34613,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3931:17:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_array$_t_struct$_MetaTransaction_$36243_memory_ptr_$dyn_memory_ptr_$",
                              "typeString": "type(struct MetaTransaction memory[] memory)"
                            }
                          }
                        ],
                        "id": 34614,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "3930:19:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_array$_t_struct$_MetaTransaction_$36243_memory_ptr_$dyn_memory_ptr_$",
                          "typeString": "type(struct MetaTransaction memory[] memory)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_array$_t_struct$_MetaTransaction_$36243_memory_ptr_$dyn_memory_ptr_$",
                          "typeString": "type(struct MetaTransaction memory[] memory)"
                        }
                      ],
                      "expression": {
                        "id": 34609,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "3910:3:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 34610,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "3914:6:60",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "3910:10:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 34615,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3910:40:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_MetaTransaction_$36243_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct MetaTransaction memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3870:80:60"
                },
                {
                  "body": {
                    "id": 34658,
                    "nodeType": "Block",
                    "src": "4010:377:60",
                    "statements": [
                      {
                        "assignments": [34629],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 34629,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "4029:7:60",
                            "nodeType": "VariableDeclaration",
                            "scope": 34658,
                            "src": "4024:12:60",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 34628,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "4024:4:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 34651,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 34634,
                                  "name": "transactions",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 34608,
                                  "src": "4098:12:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_MetaTransaction_$36243_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "struct MetaTransaction memory[] memory"
                                  }
                                },
                                "id": 34636,
                                "indexExpression": {
                                  "id": 34635,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 34618,
                                  "src": "4111:1:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4098:15:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_MetaTransaction_$36243_memory_ptr",
                                  "typeString": "struct MetaTransaction memory"
                                }
                              },
                              "id": 34637,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4114:2:60",
                              "memberName": "to",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 36233,
                              "src": "4098:18:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 34638,
                                  "name": "transactions",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 34608,
                                  "src": "4134:12:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_MetaTransaction_$36243_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "struct MetaTransaction memory[] memory"
                                  }
                                },
                                "id": 34640,
                                "indexExpression": {
                                  "id": 34639,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 34618,
                                  "src": "4147:1:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4134:15:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_MetaTransaction_$36243_memory_ptr",
                                  "typeString": "struct MetaTransaction memory"
                                }
                              },
                              "id": 34641,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4150:5:60",
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 36235,
                              "src": "4134:21:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 34642,
                                  "name": "transactions",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 34608,
                                  "src": "4173:12:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_MetaTransaction_$36243_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "struct MetaTransaction memory[] memory"
                                  }
                                },
                                "id": 34644,
                                "indexExpression": {
                                  "id": 34643,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 34618,
                                  "src": "4186:1:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4173:15:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_MetaTransaction_$36243_memory_ptr",
                                  "typeString": "struct MetaTransaction memory"
                                }
                              },
                              "id": 34645,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4189:4:60",
                              "memberName": "data",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 36237,
                              "src": "4173:20:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 34646,
                                  "name": "transactions",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 34608,
                                  "src": "4211:12:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_MetaTransaction_$36243_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "struct MetaTransaction memory[] memory"
                                  }
                                },
                                "id": 34648,
                                "indexExpression": {
                                  "id": 34647,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 34618,
                                  "src": "4224:1:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4211:15:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_MetaTransaction_$36243_memory_ptr",
                                  "typeString": "struct MetaTransaction memory"
                                }
                              },
                              "id": 34649,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4227:9:60",
                              "memberName": "operation",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 36240,
                              "src": "4211:25:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Operation_$32108",
                                "typeString": "enum Enum.Operation"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_enum$_Operation_$32108",
                                "typeString": "enum Enum.Operation"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 34631,
                                  "name": "target",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 34433,
                                  "src": "4047:6:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 34630,
                                "name": "IAvatar",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32196,
                                "src": "4039:7:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IAvatar_$32196_$",
                                  "typeString": "type(contract IAvatar)"
                                }
                              },
                              "id": 34632,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4039:15:60",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IAvatar_$32196",
                                "typeString": "contract IAvatar"
                              }
                            },
                            "id": 34633,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4055:25:60",
                            "memberName": "execTransactionFromModule",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32157,
                            "src": "4039:41:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_enum$_Operation_$32108_$returns$_t_bool_$",
                              "typeString": "function (address,uint256,bytes memory,enum Enum.Operation) external returns (bool)"
                            }
                          },
                          "id": 34650,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4039:211:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4024:226:60"
                      },
                      {
                        "condition": {
                          "id": 34653,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "4342:8:60",
                          "subExpression": {
                            "id": 34652,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34629,
                            "src": "4343:7:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 34657,
                        "nodeType": "IfStatement",
                        "src": "4338:38:60",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 34654,
                              "name": "ExecutionFailed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35681,
                              "src": "4359:15:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 34655,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4359:17:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 34656,
                          "nodeType": "RevertStatement",
                          "src": "4352:24:60"
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 34624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 34621,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34618,
                      "src": "3980:1:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 34622,
                        "name": "transactions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34608,
                        "src": "3984:12:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_MetaTransaction_$36243_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct MetaTransaction memory[] memory"
                        }
                      },
                      "id": 34623,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3997:6:60",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3984:19:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3980:23:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 34659,
                  "initializationExpression": {
                    "assignments": [34618],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 34618,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3973:1:60",
                        "nodeType": "VariableDeclaration",
                        "scope": 34659,
                        "src": "3965:9:60",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 34617,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3965:7:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 34620,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 34619,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3977:1:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3965:13:60"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 34626,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4005:3:60",
                      "subExpression": {
                        "id": 34625,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34618,
                        "src": "4005:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 34627,
                    "nodeType": "ExpressionStatement",
                    "src": "4005:3:60"
                  },
                  "nodeType": "ForStatement",
                  "src": "3960:427:60"
                }
              ]
            },
            "documentation": {
              "id": 34599,
              "nodeType": "StructuredDocumentation",
              "src": "3664:142:60",
              "text": "@notice Decodes and executes a batch of transactions from the avatar contract.\n @param payload The encoded transactions to execute."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_execute",
            "nameLocation": "3820:8:60",
            "parameters": {
              "id": 34602,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34601,
                  "mutability": "mutable",
                  "name": "payload",
                  "nameLocation": "3842:7:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 34661,
                  "src": "3829:20:60",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 34600,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3829:5:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3828:22:60"
            },
            "returnParameters": {
              "id": 34603,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3860:0:60"
            },
            "scope": 34671,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 34670,
            "nodeType": "FunctionDefinition",
            "src": "4399:118:60",
            "nodes": [],
            "body": {
              "id": 34669,
              "nodeType": "Block",
              "src": "4473:44:60",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "hexValue": "53696d706c6551756f72756d417661746172",
                    "id": 34667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4490:20:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c6b424df83e7c7c494d72036a8dbf29b3cdbdadcbd03398081a41b5e3ac2762b",
                      "typeString": "literal_string \"SimpleQuorumAvatar\""
                    },
                    "value": "SimpleQuorumAvatar"
                  },
                  "functionReturnParameters": 34666,
                  "id": 34668,
                  "nodeType": "Return",
                  "src": "4483:27:60"
                }
              ]
            },
            "baseFunctions": [34985],
            "functionSelector": "0eb9b15a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStrategyType",
            "nameLocation": "4408:15:60",
            "overrides": {
              "id": 34663,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4440:8:60"
            },
            "parameters": {
              "id": 34662,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4423:2:60"
            },
            "returnParameters": {
              "id": 34666,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34665,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 34670,
                  "src": "4458:13:60",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 34664,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4458:6:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4457:15:60"
            },
            "scope": 34671,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 34414,
              "name": "SimpleQuorumExecutionStrategy",
              "nameLocations": ["524:29:60"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 34986,
              "src": "524:29:60"
            },
            "id": 34415,
            "nodeType": "InheritanceSpecifier",
            "src": "524:29:60"
          }
        ],
        "canonicalName": "AvatarExecutionStrategy",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 34413,
          "nodeType": "StructuredDocumentation",
          "src": "277:211:60",
          "text": "@title Avatar Execution Strategy - An Execution strategy that executes transactions on an Avatar contract\n @dev An Avatar contract is any contract that implements the IAvatar interface, eg a Gnosis Safe."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [34671, 34986, 36986, 25214, 26234, 25772, 35584, 35685],
        "name": "AvatarExecutionStrategy",
        "nameLocation": "497:23:60",
        "scope": 34672,
        "usedErrors": [35678, 35681, 35684, 36853]
      }
    ],
    "license": "MIT"
  },
  "id": 60
}
