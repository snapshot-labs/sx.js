{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "_spaces",
          "type": "address[]"
        },
        {
          "internalType": "uint256",
          "name": "_quorum",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "ExecutionFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidPayload",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "enum ProposalStatus",
          "name": "status",
          "type": "uint8"
        }
      ],
      "name": "InvalidProposalStatus",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidSpace",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_target",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "_spaces",
          "type": "address[]"
        }
      ],
      "name": "AvatarExecutionStrategySetUp",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "space",
          "type": "address"
        }
      ],
      "name": "SpaceDisabled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "space",
          "type": "address"
        }
      ],
      "name": "SpaceEnabled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newTarget",
          "type": "address"
        }
      ],
      "name": "TargetSet",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "space",
          "type": "address"
        }
      ],
      "name": "disableSpace",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "space",
          "type": "address"
        }
      ],
      "name": "enableSpace",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "snapshotTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "startTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "minEndTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "maxEndTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "bytes32",
              "name": "executionPayloadHash",
              "type": "bytes32"
            },
            {
              "internalType": "contract IExecutionStrategy",
              "name": "executionStrategy",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "author",
              "type": "address"
            },
            {
              "internalType": "enum FinalizationStatus",
              "name": "finalizationStatus",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "activeVotingStrategies",
              "type": "uint256"
            }
          ],
          "internalType": "struct Proposal",
          "name": "proposal",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "votesFor",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "votesAgainst",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "votesAbstain",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "payload",
          "type": "bytes"
        }
      ],
      "name": "execute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "snapshotTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "startTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "minEndTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "maxEndTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "bytes32",
              "name": "executionPayloadHash",
              "type": "bytes32"
            },
            {
              "internalType": "contract IExecutionStrategy",
              "name": "executionStrategy",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "author",
              "type": "address"
            },
            {
              "internalType": "enum FinalizationStatus",
              "name": "finalizationStatus",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "activeVotingStrategies",
              "type": "uint256"
            }
          ],
          "internalType": "struct Proposal",
          "name": "proposal",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "votesFor",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "votesAgainst",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "votesAbstain",
          "type": "uint256"
        }
      ],
      "name": "getProposalStatus",
      "outputs": [
        {
          "internalType": "enum ProposalStatus",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getStrategyType",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "space",
          "type": "address"
        }
      ],
      "name": "isSpaceEnabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "quorum",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        }
      ],
      "name": "setTarget",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "initParams",
          "type": "bytes"
        }
      ],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "target",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060409080825234620003ee5762001a458038038091620000228285620003f3565b83398101608082820312620003ee576200003c826200042d565b6020916200004c8385016200042d565b8486015190916001600160401b0391828111620003ee576060916200007391880162000442565b950151928651958587019460018060a01b0380931686528289890195168552620000c588620000af60608201946080865260a0830190620004b9565b6080820193845203601f1981018a5289620003f3565b600094855460ff998a8260081c161596878098620003e1575b8015620003c9575b156200036e5760019960ff1993898c868316178c556200035c575b50825183019060808483031262000358576200012162000128916200042d565b956200042d565b9651918211620003545787928c84938162000147940192010162000442565b945193169416946200016a8b895460081c166200016481620004f8565b620004f8565b620001753362000559565b3381603354160362000312578415620002bf57620001938562000559565b620001a48b895460081c16620004f8565b87895b6200026c575b5050507f621a036730af1cc915beba86ec9f773f11d2983a09e67fa9d62c6cebedf2364e9392916200021b91620001eb88549b8c60081c16620004f8565b6066558360018060a01b031960675416176067558a5193849384528984015260608b8401526060830190620004b9565b0390a162000233575b84516114a29081620005a38239f35b7f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989361ff00191690558351908152a13880808062000224565b8451811015620002b957818b8260051b8701015116895260658b528c89208a848254161790556000198114620002a557890189620001a7565b634e487b7160e01b89526011600452602489fd5b620001ad565b8b5162461bcd60e51b8152600481018b9052602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b60648a8d519062461bcd60e51b825280600483015260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b8980fd5b8a80fd5b61ffff1916610101178a553862000101565b8c5162461bcd60e51b8152600481018c9052602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b158015620000e6575060018c841614620000e6565b5060018c841610620000de565b600080fd5b601f909101601f19168101906001600160401b038211908210176200041757604052565b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b0382168203620003ee57565b9080601f83011215620003ee578151906001600160401b03821162000417578160051b604051936020936200047a85840187620003f3565b85528380860192820101928311620003ee578301905b8282106200049f575050505090565b838091620004ad846200042d565b81520191019062000490565b90815180825260208080930193019160005b828110620004da575050505090565b83516001600160a01b031685529381019392810192600101620004cb565b156200050057565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b603380546001600160a01b039283166001600160a01b0319821681179092559091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a356fe608060405260048036101561001357600080fd5b60003560e01c806301fe221214610a1f5780630eb9b15a1461097f5780631703a018146109615780636efd971c14610915578063715018a614610895578063776d1a011461080d5780638da5cb5b146107d95780639e33d81114610729578063a4f9edbf146102e0578063b3d8ecdf1461029b578063d4b8399214610267578063d92d4ea01461017e5763f2fde38b146100ac57600080fd5b34610179576020600319360112610179576100c5610f5d565b906100ce611177565b73ffffffffffffffffffffffffffffffffffffffff8216156100f5576100f3826111f6565b005b6084906020604051917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b600080fd5b50346101795760206003193601126101795773ffffffffffffffffffffffffffffffffffffffff6101ad610f5d565b6101b5611177565b16908115801561024f575b610227577fc3dc08a46232e8d0a95510120799f1e68e0aa28c88730b8b0127d5ff4565b4b06020838060005260658252604060002060017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00825416179055604051908152a1005b6040517fc3b48cf1000000000000000000000000000000000000000000000000000000008152fd5b5081600052606560205260ff604060002054166101c0565b3461017957600060031936011261017957602073ffffffffffffffffffffffffffffffffffffffff60675416604051908152f35b3461017957610180600319360112610179576102dc6102d06102bc36610f80565b6101643590610144359061012435906113c6565b60405191829182611135565b0390f35b5034610179576020806003193601126101795767ffffffffffffffff918035838111610179576103139036908301611088565b926000549160ff94858460081c16159283809461071d575b8015610707575b15610684576001947fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0090858783831617600055610655575b50825183019260808189860195031261017957610388888201611263565b9161039560408301611263565b9360608301519081116101795782019185603f840112156101795789830151956103be87611284565b936103cc6040519586610eed565b8785528b8501906040829960051b8201019283116101795760408d9101915b83831061063d5750505050608001519073ffffffffffffffffffffffffffffffffffffffff808095169516966104308c60005460081c1661042b8161129c565b61129c565b610439336111f6565b610441611177565b85156105ba575088906104558695966111f6565b6104658c60005460081c1661129c565b6000825b610573575b5050506104826000549a8b60081c1661129c565b606655847fffffffffffffffffffffffff0000000000000000000000000000000000000000606754161760675560405194606086019286528886015260606040860152518091526080840192916000905b878984841061055b578b91897f621a036730af1cc915beba86ec9f773f11d2983a09e67fa9d62c6cebedf2364e8a8a038ba161050b57005b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff7f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989316600055604051908152a1005b855183168752958601959094019391909101906104d3565b84969596518110156105b257808661058e6105a99388611383565b511660005260658d5260406000208484825416179055611327565b82969596610469565b95949561046e565b6084908b604051917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b819061064884611263565b8152019101908c906103eb565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000016610101176000553861036a565b60848387604051917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152fd5b50303b1580156103325750600187861614610332565b5060018786161061032b565b50346101795760206003193601126101795773ffffffffffffffffffffffffffffffffffffffff610758610f5d565b610760611177565b169081600052606560205260ff6040600020541615610227577f665604bfe8ee87044ba1f1fd2fb47fe92983c9e187acbb442debf97d3e581921602083806000526065825260406000207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008154169055604051908152a1005b3461017957600060031936011261017957602073ffffffffffffffffffffffffffffffffffffffff60335416604051908152f35b346101795760206003193601126101795773ffffffffffffffffffffffffffffffffffffffff61083b610f5d565b610843611177565b16807fffffffffffffffffffffffff000000000000000000000000000000000000000060675416176067557f3bfb4bbf112628248058745a3c57e35b13369386e474b8e56c552f3063a4a196600080a2005b34610179576000600319360112610179576108ae611177565b600073ffffffffffffffffffffffffffffffffffffffff6033547fffffffffffffffffffffffff00000000000000000000000000000000000000008116603355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346101795760206003193601126101795773ffffffffffffffffffffffffffffffffffffffff610943610f5d565b166000526065602052602060ff604060002054166040519015158152f35b34610179576000600319360112610179576020606654604051908152f35b5034610179576000600319360112610179576040516040810181811067ffffffffffffffff8211176109f1576102dc9250604052601281527f53696d706c6551756f72756d417661746172000000000000000000000000000060208201526040519182916020835260208301906110f2565b6041837f4e487b71000000000000000000000000000000000000000000000000000000006000525260246000fd5b5034610179576101a060031936011261017957610a3b36610f80565b6101843567ffffffffffffffff811161017957610a5b9036908401611088565b9033600052606560205260ff6040600020541615610ec457610a88610164356101443561012435846113c6565b6007811015610e9657600381141580610e8b575b610e53575060800151908051916020820192832003610e2a57805181019160208284031261017957519067ffffffffffffffff82116101795760208301603f838301011215610179576020828201015190610af682611284565b93610b046040519586610eed565b82855260208501906020810160408560051b87860101011161017957604085840101915b60408560051b87860101018310610cc557878760005b81518110156100f35773ffffffffffffffffffffffffffffffffffffffff806067541690610b6c8385611383565b515116906020610b7c8486611383565b510151906040610b8c8587611383565b510151926060610b9c8688611383565b5101516002811015610c9757906000886020959493610bfa604051988997889687957f468721a700000000000000000000000000000000000000000000000000000000875286015260248501526080604485015260848401906110f2565b90606483015203925af1908115610c8b57600091610c50575b5015610c2757610c2290611327565b610b3e565b826040517facfdb444000000000000000000000000000000000000000000000000000000008152fd5b90506020813d602011610c83575b81610c6b60209383610eed565b81010312610179575180151581036101795784610c13565b3d9150610c5e565b6040513d6000823e3d90fd5b6021887f4e487b71000000000000000000000000000000000000000000000000000000006000525260246000fd5b82519067ffffffffffffffff82116101795760a07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0838988010185030112610179576040519160a0830183811067ffffffffffffffff821117610dfc57604052610d356040828a89010101611263565b83528588018101606081015160208501526080015167ffffffffffffffff81116101795760208501605f82848c8b010101011215610179578060408a9284848b0101010151886060828487610d898361104e565b97610d97604051998a610eed565b83895260208d0195010101010111610179578a6060610dc0938660208701938d010101016110cf565b604084015260a0818988010101519160028310156101795760608401929092528588010160c00151608083015290815260209283019201610b28565b60418b7f4e487b71000000000000000000000000000000000000000000000000000000006000525260246000fd5b826040517f7c6953f9000000000000000000000000000000000000000000000000000000008152fd5b83610e876040519283927fe6ace38e0000000000000000000000000000000000000000000000000000000084528301611135565b0390fd5b506002811415610a9c565b6021847f4e487b71000000000000000000000000000000000000000000000000000000006000525260246000fd5b826040517fc3b48cf1000000000000000000000000000000000000000000000000000000008152fd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117610f2e57604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361017957565b61012091906003190182136101795760405191820182811067ffffffffffffffff821117610f2e576040528163ffffffff6004358181168103610179578252602435818116810361017957602083015260443581811681036101795760408301526064359081168103610179576060820152608435608082015273ffffffffffffffffffffffffffffffffffffffff60a43581811681036101795760a083015260c43590811681036101795760c082015260e43560038110156101795760e082015261010061010435910152565b67ffffffffffffffff8111610f2e57601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b81601f820112156101795780359061109f8261104e565b926110ad6040519485610eed565b8284526020838301011161017957816000926020809301838601378301015290565b60005b8381106110e25750506000910152565b81810151838201526020016110d2565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f60209361112e815180928187528780880191016110cf565b0116010190565b9190602083019260078210156111485752565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff60335416330361119857565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6033549073ffffffffffffffffffffffffffffffffffffffff80911691827fffffffffffffffffffffffff0000000000000000000000000000000000000000821617603355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b519073ffffffffffffffffffffffffffffffffffffffff8216820361017957565b67ffffffffffffffff8111610f2e5760051b60200190565b156112a357565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146113545760010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b80518210156113975760209160051b010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9190926113df606654916113da8487611488565b611488565b1015928361147e575b505060e08101805160038110156111485760020361140857505050600690565b51600381101561114857600103611420575050600490565b63ffffffff9081602082015116421060001461143e57505050600090565b6040810151821642101561145457505050600190565b606001511642101561146f571561146a57600290565b600190565b1561147957600390565b600590565b11915038806113e8565b919082018092116113545756fea164736f6c6343000812000a",
    "sourceMap": "490:4257:72:-:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;490:4257:72;;;;;;;;;;;;;:::i;:::-;;;;;;;1632:45;;;;490:4257;;;;;;;;;;;;;;;;;;;1632:45;490:4257;;;;;;;;;;;;;;:::i;:::-;;;;;;;1632:45;;;;;;;;;:::i;:::-;-1:-1:-1;490:4257:72;;;;;;;;;;3290:14:21;3336:34;;;;;;-1:-1:-1;3335:108:21;;;;-1:-1:-1;490:4257:72;;;;;;;;;;;;;;;;3551:65:21;;-1:-1:-1;490:4257:72;;;2069:96;;490:4257;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;2069:96;;;;;;490:4257;2069:96;;490:4257;;;;:::i;:::-;;;;;;;;5355:69:21;490:4257:72;;;;;;5355:69:21;;;:::i;:::-;;:::i;:::-;1195:12:17;929:10:24;1195:12:17;:::i;:::-;929:10:24;490:4257:72;1513:6:17;490:4257:72;;1662:23:17;490:4257:72;;2409:22:17;;490:4257:72;;2503:8:17;;;:::i;:::-;5355:69:21;490:4257:72;;;;;;5355:69:21;:::i;:::-;942:13:106;;490:4257:72;;;937:95:106;490:4257:72;;;2360:54;490:4257;;;;;5355:69:21;490:4257:72;;;;;;;5355:69:21;:::i;:::-;693:16:76;490:4257:72;;;;;;;;2329:16;490:4257;;;2329:16;490:4257;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2360:54;;;3636:99:21;;937:95:106;490:4257:72;;;;;;;;;3636:99:21;3710:14;490:4257:72;;;;;;;;;;;3710:14:21;3636:99;;;;;;977:3:106;490:4257:72;;957:18:106;;;;;490:4257:72;;;;;;;;;;;;996:6:106;490:4257:72;;;;;;;;;;;;;;;;;;;;;;942:13:106;;490:4257:72;-1:-1:-1;;;490:4257:72;;;;;;;;957:18:106;;;490:4257:72;;;-1:-1:-1;;;490:4257:72;;;;;;;;;;;;;;;;;;-1:-1:-1;;;490:4257:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3551:65:21;-1:-1:-1;;490:4257:72;;;;;3551:65:21;;;490:4257:72;;;-1:-1:-1;;;490:4257:72;;;;;;;;;;;;;;;;;;-1:-1:-1;;;490:4257:72;;;;;;;3335:108:21;3415:4;;1476:19:23;:23;3376:66:21;;3335:108;3376:66;490:4257:72;;;;;3425:17:21;3335:108;;3336:34;490:4257:72;;;;;3354:16:21;3336:34;;490:4257:72;-1:-1:-1;490:4257:72;;;1632:45;490:4257;;;-1:-1:-1;;490:4257:72;;;;-1:-1:-1;;;;;490:4257:72;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;490:4257:72;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;490:4257:72;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;490:4257:72;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;490:4257:72;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;490:4257:72;;;;;;;;;;;;;;;;;-1:-1:-1;;;490:4257:72;;;;;;;2673:187:17;2765:6;490:4257:72;;-1:-1:-1;;;;;490:4257:72;;;-1:-1:-1;;;;;;490:4257:72;;;;;;;;;;2813:40:17;-1:-1:-1;;2813:40:17;2673:187::o",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405260048036101561001357600080fd5b60003560e01c806301fe221214610a1f5780630eb9b15a1461097f5780631703a018146109615780636efd971c14610915578063715018a614610895578063776d1a011461080d5780638da5cb5b146107d95780639e33d81114610729578063a4f9edbf146102e0578063b3d8ecdf1461029b578063d4b8399214610267578063d92d4ea01461017e5763f2fde38b146100ac57600080fd5b34610179576020600319360112610179576100c5610f5d565b906100ce611177565b73ffffffffffffffffffffffffffffffffffffffff8216156100f5576100f3826111f6565b005b6084906020604051917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b600080fd5b50346101795760206003193601126101795773ffffffffffffffffffffffffffffffffffffffff6101ad610f5d565b6101b5611177565b16908115801561024f575b610227577fc3dc08a46232e8d0a95510120799f1e68e0aa28c88730b8b0127d5ff4565b4b06020838060005260658252604060002060017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00825416179055604051908152a1005b6040517fc3b48cf1000000000000000000000000000000000000000000000000000000008152fd5b5081600052606560205260ff604060002054166101c0565b3461017957600060031936011261017957602073ffffffffffffffffffffffffffffffffffffffff60675416604051908152f35b3461017957610180600319360112610179576102dc6102d06102bc36610f80565b6101643590610144359061012435906113c6565b60405191829182611135565b0390f35b5034610179576020806003193601126101795767ffffffffffffffff918035838111610179576103139036908301611088565b926000549160ff94858460081c16159283809461071d575b8015610707575b15610684576001947fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0090858783831617600055610655575b50825183019260808189860195031261017957610388888201611263565b9161039560408301611263565b9360608301519081116101795782019185603f840112156101795789830151956103be87611284565b936103cc6040519586610eed565b8785528b8501906040829960051b8201019283116101795760408d9101915b83831061063d5750505050608001519073ffffffffffffffffffffffffffffffffffffffff808095169516966104308c60005460081c1661042b8161129c565b61129c565b610439336111f6565b610441611177565b85156105ba575088906104558695966111f6565b6104658c60005460081c1661129c565b6000825b610573575b5050506104826000549a8b60081c1661129c565b606655847fffffffffffffffffffffffff0000000000000000000000000000000000000000606754161760675560405194606086019286528886015260606040860152518091526080840192916000905b878984841061055b578b91897f621a036730af1cc915beba86ec9f773f11d2983a09e67fa9d62c6cebedf2364e8a8a038ba161050b57005b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff7f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989316600055604051908152a1005b855183168752958601959094019391909101906104d3565b84969596518110156105b257808661058e6105a99388611383565b511660005260658d5260406000208484825416179055611327565b82969596610469565b95949561046e565b6084908b604051917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b819061064884611263565b8152019101908c906103eb565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000016610101176000553861036a565b60848387604051917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152fd5b50303b1580156103325750600187861614610332565b5060018786161061032b565b50346101795760206003193601126101795773ffffffffffffffffffffffffffffffffffffffff610758610f5d565b610760611177565b169081600052606560205260ff6040600020541615610227577f665604bfe8ee87044ba1f1fd2fb47fe92983c9e187acbb442debf97d3e581921602083806000526065825260406000207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008154169055604051908152a1005b3461017957600060031936011261017957602073ffffffffffffffffffffffffffffffffffffffff60335416604051908152f35b346101795760206003193601126101795773ffffffffffffffffffffffffffffffffffffffff61083b610f5d565b610843611177565b16807fffffffffffffffffffffffff000000000000000000000000000000000000000060675416176067557f3bfb4bbf112628248058745a3c57e35b13369386e474b8e56c552f3063a4a196600080a2005b34610179576000600319360112610179576108ae611177565b600073ffffffffffffffffffffffffffffffffffffffff6033547fffffffffffffffffffffffff00000000000000000000000000000000000000008116603355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346101795760206003193601126101795773ffffffffffffffffffffffffffffffffffffffff610943610f5d565b166000526065602052602060ff604060002054166040519015158152f35b34610179576000600319360112610179576020606654604051908152f35b5034610179576000600319360112610179576040516040810181811067ffffffffffffffff8211176109f1576102dc9250604052601281527f53696d706c6551756f72756d417661746172000000000000000000000000000060208201526040519182916020835260208301906110f2565b6041837f4e487b71000000000000000000000000000000000000000000000000000000006000525260246000fd5b5034610179576101a060031936011261017957610a3b36610f80565b6101843567ffffffffffffffff811161017957610a5b9036908401611088565b9033600052606560205260ff6040600020541615610ec457610a88610164356101443561012435846113c6565b6007811015610e9657600381141580610e8b575b610e53575060800151908051916020820192832003610e2a57805181019160208284031261017957519067ffffffffffffffff82116101795760208301603f838301011215610179576020828201015190610af682611284565b93610b046040519586610eed565b82855260208501906020810160408560051b87860101011161017957604085840101915b60408560051b87860101018310610cc557878760005b81518110156100f35773ffffffffffffffffffffffffffffffffffffffff806067541690610b6c8385611383565b515116906020610b7c8486611383565b510151906040610b8c8587611383565b510151926060610b9c8688611383565b5101516002811015610c9757906000886020959493610bfa604051988997889687957f468721a700000000000000000000000000000000000000000000000000000000875286015260248501526080604485015260848401906110f2565b90606483015203925af1908115610c8b57600091610c50575b5015610c2757610c2290611327565b610b3e565b826040517facfdb444000000000000000000000000000000000000000000000000000000008152fd5b90506020813d602011610c83575b81610c6b60209383610eed565b81010312610179575180151581036101795784610c13565b3d9150610c5e565b6040513d6000823e3d90fd5b6021887f4e487b71000000000000000000000000000000000000000000000000000000006000525260246000fd5b82519067ffffffffffffffff82116101795760a07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0838988010185030112610179576040519160a0830183811067ffffffffffffffff821117610dfc57604052610d356040828a89010101611263565b83528588018101606081015160208501526080015167ffffffffffffffff81116101795760208501605f82848c8b010101011215610179578060408a9284848b0101010151886060828487610d898361104e565b97610d97604051998a610eed565b83895260208d0195010101010111610179578a6060610dc0938660208701938d010101016110cf565b604084015260a0818988010101519160028310156101795760608401929092528588010160c00151608083015290815260209283019201610b28565b60418b7f4e487b71000000000000000000000000000000000000000000000000000000006000525260246000fd5b826040517f7c6953f9000000000000000000000000000000000000000000000000000000008152fd5b83610e876040519283927fe6ace38e0000000000000000000000000000000000000000000000000000000084528301611135565b0390fd5b506002811415610a9c565b6021847f4e487b71000000000000000000000000000000000000000000000000000000006000525260246000fd5b826040517fc3b48cf1000000000000000000000000000000000000000000000000000000008152fd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117610f2e57604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361017957565b61012091906003190182136101795760405191820182811067ffffffffffffffff821117610f2e576040528163ffffffff6004358181168103610179578252602435818116810361017957602083015260443581811681036101795760408301526064359081168103610179576060820152608435608082015273ffffffffffffffffffffffffffffffffffffffff60a43581811681036101795760a083015260c43590811681036101795760c082015260e43560038110156101795760e082015261010061010435910152565b67ffffffffffffffff8111610f2e57601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b81601f820112156101795780359061109f8261104e565b926110ad6040519485610eed565b8284526020838301011161017957816000926020809301838601378301015290565b60005b8381106110e25750506000910152565b81810151838201526020016110d2565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f60209361112e815180928187528780880191016110cf565b0116010190565b9190602083019260078210156111485752565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff60335416330361119857565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6033549073ffffffffffffffffffffffffffffffffffffffff80911691827fffffffffffffffffffffffff0000000000000000000000000000000000000000821617603355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b519073ffffffffffffffffffffffffffffffffffffffff8216820361017957565b67ffffffffffffffff8111610f2e5760051b60200190565b156112a357565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146113545760010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b80518210156113975760209160051b010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9190926113df606654916113da8487611488565b611488565b1015928361147e575b505060e08101805160038110156111485760020361140857505050600690565b51600381101561114857600103611420575050600490565b63ffffffff9081602082015116421060001461143e57505050600090565b6040810151821642101561145457505050600190565b606001511642101561146f571561146a57600290565b600190565b1561147957600390565b600590565b11915038806113e8565b919082018092116113545756fea164736f6c6343000812000a",
    "sourceMap": "490:4257:72:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;490:4257:72;;;;;;;:::i;:::-;1303:62:17;;;:::i;:::-;490:4257:72;;;2409:22:17;490:4257:72;;2503:8:17;;;:::i;:::-;490:4257:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;490:4257:72;;;;;;;;:::i;:::-;1303:62:17;;:::i;:::-;490:4257:72;1186:19:106;;;:44;;;;490:4257:72;1182:71:106;;1298:19;490:4257:72;;;;;1263:6:106;490:4257:72;;;;;1279:4:106;490:4257:72;;;;;;;;;;;;1298:19:106;490:4257:72;1182:71:106;490:4257:72;;1239:14:106;;;;1186:44;490:4257:72;;;;1812:6:106;490:4257:72;;;;;;;;1186:44:106;;490:4257:72;;;;;-1:-1:-1;;490:4257:72;;;;;;;1175:21;490:4257;;;;;;;;;;;;;-1:-1:-1;;490:4257:72;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;490:4257:72;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;3290:14:21;3336:34;;;;;;490:4257:72;3335:108:21;;;;490:4257:72;;;;3540:1:21;490:4257:72;;;;;;;;;;;3551:65:21;;490:4257:72;;;;2069:96;;;490:4257;2069:96;;;;490:4257;;;;;;2069:96;;;490:4257;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5355:69:21;490:4257:72;;;;;;5355:69:21;;;:::i;:::-;;:::i;:::-;1195:12:17;929:10:24;1195:12:17;:::i;:::-;1303:62;;:::i;:::-;2409:22;;490:4257:72;;2503:8:17;;;;;;;;:::i;:::-;5355:69:21;490:4257:72;;;;;;5355:69:21;:::i;:::-;490:4257:72;942:13:106;3540:1:21;;;937:95:106;490:4257:72;;;5355:69:21;490:4257:72;;;;;;;5355:69:21;:::i;:::-;693:16:76;490:4257:72;;;2329:16;490:4257;;;2329:16;490:4257;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2360:54;;;;;;;;;3636:99:21;;490:4257:72;3636:99:21;490:4257:72;3710:14:21;490:4257:72;;;;;;;;;3710:14:21;490:4257:72;;;;;;;;;;;;;;;;;;;;;;;977:3:106;490:4257:72;;;;;957:18:106;;;;;1003:10;;;977:3;1003:10;;;:::i;:::-;490:4257:72;;;;996:6:106;490:4257:72;;;;;;;;;;;;;977:3:106;:::i;:::-;942:13;;;;;;957:18;;;;;;490:4257:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;3551:65:21;490:4257:72;;;;;;3551:65:21;;;490:4257:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3335:108:21;3415:4;;1476:19:23;:23;3376:66:21;;3335:108;3376:66;490:4257:72;3441:1:21;490:4257:72;;;3425:17:21;3335:108;;3336:34;490:4257:72;3369:1:21;490:4257:72;;;3354:16:21;3336:34;;490:4257:72;;;;;;-1:-1:-1;;490:4257:72;;;;;;;;:::i;:::-;1303:62:17;;:::i;:::-;490:4257:72;;;;;1475:6:106;490:4257:72;;;;;;;;1474:14:106;1470:41;;1557:20;490:4257:72;;;;;1475:6:106;490:4257:72;;;;;;;;;;;;;;;;1557:20:106;490:4257:72;;;;;;-1:-1:-1;;490:4257:72;;;;;;;1513:6:17;490:4257:72;;;;;;;;;;;;;-1:-1:-1;;490:4257:72;;;;;;;;:::i;:::-;1303:62:17;;:::i;:::-;490:4257:72;;;2580:16;490:4257;;;2580:16;490:4257;2611:18;490:4257;2611:18;;490:4257;;;;;;-1:-1:-1;;490:4257:72;;;;;1303:62:17;;:::i;:::-;490:4257:72;;2765:6:17;490:4257:72;;;;2765:6:17;490:4257:72;;2813:40:17;;;;490:4257:72;;;;;;-1:-1:-1;;490:4257:72;;;;;;;;:::i;:::-;;;;1812:6:106;490:4257:72;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;490:4257:72;;;;;;488:21:76;490:4257:72;;;;;;;;;;;;;-1:-1:-1;;490:4257:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;490:4257:72;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;1889:10:106;;490:4257:72;;1812:6:106;490:4257:72;;;;;;;;1873:27:106;1869:54;;3356:65:72;490:4257;;;;;;3356:65;;:::i;:::-;490:4257;;;;;;3454:23;3436:41;;;3435:102;;;490:4257;3431:177;;3725:29;;;490:4257;;;;;;;;3758:18;;;3725:51;3721:80;;490:4257;;4088:40;;490:4257;;;;;;;;;;;;;;;;4088:40;;490:4257;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;4088:40;490:4257;4088:40;;490:4257;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4143:13;;490:4257;4183:3;490:4257;;4158:23;;;;;490:4257;;4225:6;490:4257;;4276:15;;;;;:::i;:::-;;490:4257;;4312:15;490:4257;4312:15;;;;:::i;:::-;;:21;490:4257;4351:15;490:4257;4351:15;;;;:::i;:::-;;:20;;4389:15;490:4257;4389:15;;;;:::i;:::-;;:25;490:4257;;;;;;;;;;;;;;;;;4217:211;;;;;;;490:4257;4217:211;;;;490:4257;;;;;3725:29;490:4257;;;;;;;;;:::i;:::-;;;;;;4217:211;;;;;;;;;490:4257;4217:211;;;4183:3;4521:8;;4517:38;;4183:3;;;:::i;:::-;4143:13;;4517:38;490:4257;;;4538:17;;;;4217:211;;;490:4257;4217:211;;490:4257;4217:211;;;;;;490:4257;4217:211;;;:::i;:::-;;;490:4257;;;;;;;;;;;;4217:211;;;;;;-1:-1:-1;4217:211:72;;;490:4257;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;3725:29;490:4257;;;;;;;;4088:40;;490:4257;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;4088:40;;490:4257;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3725:29;490:4257;;;;;;;;;;;;;;;;;;;;;;;;3721:80;490:4257;;;3785:16;;;;3431:177;490:4257;3560:37;490:4257;;3560:37;;;;;;;;;:::i;:::-;;;;3435:102;3483:53;3501:35;3483:53;;;3435:102;;490:4257;;;;;;;;;;1869:54:106;490:4257:72;;;1909:14:106;;;;490:4257:72;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;490:4257:72;;-1:-1:-1;490:4257:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;490:4257:72;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;490:4257:72;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::o;:::-;;;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;490:4257:72;;;;;-1:-1:-1;490:4257:72;1599:130:17;490:4257:72;1513:6:17;490:4257:72;;929:10:24;1662:23:17;490:4257:72;;1599:130:17:o;490:4257:72:-;;;;;;;;;;;;;;;;;;;;;;;2673:187:17;2765:6;490:4257:72;;;;;;;;;;;;2765:6:17;490:4257:72;;2813:40:17;-1:-1:-1;2813:40:17;;2673:187::o;490:4257:72:-;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;1420:1197:76;;;;2827:41;1660:6;490:4257:72;2827:25:76;;;;;:::i;:::-;:41;:::i;:::-;2885:21;;1645:110;;;;1420:1197;1769:27;;;;;490:4257:72;;;;;;;;1800:28:76;1769:59;1800:28;;1844:31;;;1851:24;1844:31;:::o;1765:846::-;490:4257:72;;;;;;;;1896:58:76;490:4257:72;;1970:30:76;;1977:23;1970:30;:::o;1892:719::-;490:4257:72;2039:23:76;;;;;490:4257:72;;2021:15:76;:41;2017:594;490:4257:72;;;2078:33:76;;;-1:-1:-1;2078:33:76;:::o;2017:594::-;2150:24;;;490:4257:72;;;2021:15:76;2132:42;490:4257:72;;;2190:34:76;;;490:4257:72;2190:34:76;:::o;2128:483::-;2263:24;;490:4257:72;;2021:15:76;2245:42;490:4257:72;;;2303:162:76;;;1800:28;2335:42;:::o;2303:162::-;490:4257:72;2416:34:76;:::o;2241:370::-;2481:130;;;490:4257:72;2509:30:76;:::o;2481:130::-;2577:23;2570:30;:::o;1645:110::-;3027:25;;-1:-1:-1;1645:110:76;;;;490:4257:72;;;;;;;;;;:::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "disableSpace(address)": "9e33d811",
    "enableSpace(address)": "d92d4ea0",
    "execute((uint32,uint32,uint32,uint32,bytes32,address,address,uint8,uint256),uint256,uint256,uint256,bytes)": "01fe2212",
    "getProposalStatus((uint32,uint32,uint32,uint32,bytes32,address,address,uint8,uint256),uint256,uint256,uint256)": "b3d8ecdf",
    "getStrategyType()": "0eb9b15a",
    "isSpaceEnabled(address)": "6efd971c",
    "owner()": "8da5cb5b",
    "quorum()": "1703a018",
    "renounceOwnership()": "715018a6",
    "setTarget(address)": "776d1a01",
    "setUp(bytes)": "a4f9edbf",
    "target()": "d4b83992",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_spaces\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_quorum\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ExecutionFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPayload\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"enum ProposalStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"name\":\"InvalidProposalStatus\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSpace\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"_spaces\",\"type\":\"address[]\"}],\"name\":\"AvatarExecutionStrategySetUp\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"space\",\"type\":\"address\"}],\"name\":\"SpaceDisabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"space\",\"type\":\"address\"}],\"name\":\"SpaceEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newTarget\",\"type\":\"address\"}],\"name\":\"TargetSet\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"space\",\"type\":\"address\"}],\"name\":\"disableSpace\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"space\",\"type\":\"address\"}],\"name\":\"enableSpace\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"snapshotTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"startTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"minEndTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"maxEndTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"executionPayloadHash\",\"type\":\"bytes32\"},{\"internalType\":\"contract IExecutionStrategy\",\"name\":\"executionStrategy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"enum FinalizationStatus\",\"name\":\"finalizationStatus\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"activeVotingStrategies\",\"type\":\"uint256\"}],\"internalType\":\"struct Proposal\",\"name\":\"proposal\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"votesFor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votesAgainst\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votesAbstain\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"snapshotTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"startTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"minEndTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"maxEndTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"executionPayloadHash\",\"type\":\"bytes32\"},{\"internalType\":\"contract IExecutionStrategy\",\"name\":\"executionStrategy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"enum FinalizationStatus\",\"name\":\"finalizationStatus\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"activeVotingStrategies\",\"type\":\"uint256\"}],\"internalType\":\"struct Proposal\",\"name\":\"proposal\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"votesFor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votesAgainst\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votesAbstain\",\"type\":\"uint256\"}],\"name\":\"getProposalStatus\",\"outputs\":[{\"internalType\":\"enum ProposalStatus\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStrategyType\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"space\",\"type\":\"address\"}],\"name\":\"isSpaceEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quorum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"}],\"name\":\"setTarget\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"initParams\",\"type\":\"bytes\"}],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"target\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An Avatar contract is any contract that implements the IAvatar interface, eg a Gnosis Safe.\",\"errors\":{\"InvalidProposalStatus(uint8)\":[{\"params\":{\"status\":\"The current status of the proposal.\"}}]},\"events\":{\"AvatarExecutionStrategySetUp(address,address,address[])\":{\"params\":{\"_owner\":\"Address of the owner of the strategy.\",\"_spaces\":\"Array of whitelisted space contracts.\",\"_target\":\"Address of the avatar that this module will pass transactions to.\"}},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"TargetSet(address)\":{\"params\":{\"newTarget\":\"The new target address.\"}}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_owner\":\"Address of the owner of this contract.\",\"_quorum\":\"The quorum required to execute a proposal.\",\"_spaces\":\"Array of whitelisted space contracts.\",\"_target\":\"Address of the avatar that this module will pass transactions to.\"}},\"disableSpace(address)\":{\"params\":{\"space\":\"Address of the space.\"}},\"enableSpace(address)\":{\"params\":{\"space\":\"Address of the space.\"}},\"execute((uint32,uint32,uint32,uint32,bytes32,address,address,uint8,uint256),uint256,uint256,uint256,bytes)\":{\"params\":{\"payload\":\"The encoded transactions to execute.\",\"proposal\":\"The proposal to execute.\",\"votesAbstain\":\"The number of abstaining votes.\",\"votesAgainst\":\"The number of votes against the proposal.\",\"votesFor\":\"The number of votes in favor of the proposal.\"}},\"getProposalStatus((uint32,uint32,uint32,uint32,bytes32,address,address,uint8,uint256),uint256,uint256,uint256)\":{\"params\":{\"proposal\":\"The proposal struct.\",\"votesAbstain\":\"The number of votes abstaining from the proposal.\",\"votesAgainst\":\"The number of votes against the proposal.\",\"votesFor\":\"The number of votes for the proposal.\"}},\"isSpaceEnabled(address)\":{\"params\":{\"space\":\"Address of the space.\"},\"returns\":{\"_0\":\"bool whether the space is enabled.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setTarget(address)\":{\"params\":{\"_target\":\"The new target address.\"}},\"setUp(bytes)\":{\"params\":{\"initParams\":\"ABI encoded parameters, in the same order as the constructor.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Avatar Execution Strategy\",\"version\":1},\"userdoc\":{\"errors\":{\"ExecutionFailed()\":[{\"notice\":\"Thrown when the execution of a proposal fails.\"}],\"InvalidPayload()\":[{\"notice\":\"Thrown when the execution payload supplied to the execution strategy is not equal to the payload supplied when the proposal was created.\"}],\"InvalidProposalStatus(uint8)\":[{\"notice\":\"Thrown when the current status of a proposal does not allow the desired action.\"}],\"InvalidSpace()\":[{\"notice\":\"Thrown if a space is not in the whitelist.\"}]},\"events\":{\"AvatarExecutionStrategySetUp(address,address,address[])\":{\"notice\":\"Emitted when a new Avatar Execution Strategy is initialized.\"},\"SpaceDisabled(address)\":{\"notice\":\"Emitted when a space is disabled.\"},\"SpaceEnabled(address)\":{\"notice\":\"Emitted when a space is enabled.\"},\"TargetSet(address)\":{\"notice\":\"Emitted each time the Target is set.\"}},\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Constructor\"},\"disableSpace(address)\":{\"notice\":\"Disable a space.\"},\"enableSpace(address)\":{\"notice\":\"Enable a space.\"},\"execute((uint32,uint32,uint32,uint32,bytes32,address,address,uint8,uint256),uint256,uint256,uint256,bytes)\":{\"notice\":\"Executes a proposal from the avatar contract if the proposal outcome is accepted.         Must be called by a whitelisted space contract.\"},\"getProposalStatus((uint32,uint32,uint32,uint32,bytes32,address,address,uint8,uint256),uint256,uint256,uint256)\":{\"notice\":\"Returns the status of a proposal that uses a simple quorum.        A proposal is accepted if the for votes exceeds the against votes        and a quorum of total votes (for + against + abstain) is reached.\"},\"getStrategyType()\":{\"notice\":\"Returns the trategy type string.\"},\"isSpaceEnabled(address)\":{\"notice\":\"Check if a space is enabled.\"},\"quorum()\":{\"notice\":\"The quorum required to execute a proposal using this strategy.\"},\"setTarget(address)\":{\"notice\":\"Sets the target address.\"},\"setUp(bytes)\":{\"notice\":\"Initialization function, should be called immediately after deploying a new proxy to this contract.\"},\"target()\":{\"notice\":\"Address of the avatar that this module will pass transactions to.\"}},\"notice\":\"Used to execute proposal transactions from an Avatar contract.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/execution-strategies/AvatarExecutionStrategy.sol\":\"AvatarExecutionStrategy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[\":@gnosis.pm/safe-contracts/=lib/safe-contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@prb/test/=lib/prb-test/src/\",\":@zodiac/=lib/zodiac/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":prb-test/=lib/prb-test/src/\",\":safe-contracts/=lib/safe-contracts/contracts/\",\":zodiac/=lib/zodiac/contracts/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xe798cadb41e2da274913e4b3183a80f50fb057a42238fe8467e077268100ec27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://899f850f7df5a270bccfb765d70069959ca1c20d3a7381c1c3bda8a3ffee1935\",\"dweb:/ipfs/QmVdnAqwyX2L3nX2HDA5WKGtVBFyH1nKE9A1k7fZnPBkhP\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/safe-contracts/contracts/common/Enum.sol\":{\"keccak256\":\"0x473e45b1a5cc47be494b0e123c9127f0c11c1e0992a321ae5a644c0bfdb2c14f\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://948e6d5a8bd7377f7795b6e28584eab9be5c0a8db240bf5e606744a175238c3d\",\"dweb:/ipfs/QmQQaUmQfpuejV41jbxKSTgEBYYCcVTjCsDMgf2htgz6ej\"]},\"lib/zodiac/contracts/interfaces/IAvatar.sol\":{\"keccak256\":\"0xcd5508ffe596eef8fbccfd5fc4f10a34397773547ce64e212d48b5212865ec1f\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://1655ba8b760132ebd702cc806fcdad50a44d320fbeca14be00e35b0171bd35cf\",\"dweb:/ipfs/QmcbB5HpCoEQCTHKWxHS3HpFmgaB4AcZxZYtvQk2QEyvN2\"]},\"src/execution-strategies/AvatarExecutionStrategy.sol\":{\"keccak256\":\"0x46c98f2b3170c5c96e017bdc7fe87b9d129db6239fb99d42a701147262cb98c3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://02d30008d06a8a0508dd073b579eb71cda526206bd952d37425d1527206a8a33\",\"dweb:/ipfs/QmYSQD5JMrUvqsEsuEvSY4fW1yYYocZdfRBKZgKV3r5anB\"]},\"src/execution-strategies/SimpleQuorumExecutionStrategy.sol\":{\"keccak256\":\"0x6b2b1c5b08bea40355137bcd93872a96f0a3511a3f53a48ea851c2cee51a2f73\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://128effd2ec54a7e196b1565db961799018e259849edc4a7c5b0dc715d313adc7\",\"dweb:/ipfs/QmQhAzrmxSMpRow5VBXAgtLjHBhXdcXZoDnftZHFjzqgcM\"]},\"src/interfaces/IExecutionStrategy.sol\":{\"keccak256\":\"0x8caef430ce09dd42c4b90ff62b18090c12bcb2dcf19294e4316bd2cc2bfffef9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d20584f72310a2607990eb5c6f307e81c606d38b4a95b91d2f9427b068e51050\",\"dweb:/ipfs/QmZaDzFnBq7qXy45YmBbqcay7DQZo8xfvTLriMEKocesK8\"]},\"src/interfaces/execution-strategies/IExecutionStrategyErrors.sol\":{\"keccak256\":\"0x2250c64aab6438d7ab96f46536324753acd4259b4603a93487cf45c668653136\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://27889cd728427bfcd7ddca916ac99a8e03dec3a643dd964f4f2c6ebb3020daa6\",\"dweb:/ipfs/QmXPKHv7PaCwr8nVuCmSdWSVjCXciNURB5Ev6AXR7C957R\"]},\"src/types.sol\":{\"keccak256\":\"0xf72554d9fd3670d3d89308f0076df1e4189a580c09f073ffc781c359590c3ba5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8085b0c07e7e9e039d90de08a05394368cc7ed512c25ea58b265bd46d4eb4d48\",\"dweb:/ipfs/QmXwFUsZ199WYKKDMo8RbX4JBvttTw9iqyCtYj2XB3G54R\"]},\"src/utils/SpaceManager.sol\":{\"keccak256\":\"0xb2bf9466fa00b760a21313843fa692456fed7bd2e18691e603273f3ea787cf6e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b6606d863630743ed2c56ce839bceff544b3a68e9ffd27fdc1dd7e9521f7a57\",\"dweb:/ipfs/QmbayMG9dZSRJMryX5bNr435H2JHvVMAGFnqyDZjB7RnjP\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.18+commit.87f61d96"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_target",
              "type": "address"
            },
            {
              "internalType": "address[]",
              "name": "_spaces",
              "type": "address[]"
            },
            {
              "internalType": "uint256",
              "name": "_quorum",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ExecutionFailed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidPayload"
        },
        {
          "inputs": [
            {
              "internalType": "enum ProposalStatus",
              "name": "status",
              "type": "uint8"
            }
          ],
          "type": "error",
          "name": "InvalidProposalStatus"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidSpace"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "_target",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "_spaces",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AvatarExecutionStrategySetUp",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "space",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SpaceDisabled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "space",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SpaceEnabled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newTarget",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "TargetSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "space",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "disableSpace"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "space",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "enableSpace"
        },
        {
          "inputs": [
            {
              "internalType": "struct Proposal",
              "name": "proposal",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "snapshotTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "startTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "minEndTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "maxEndTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "bytes32",
                  "name": "executionPayloadHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "contract IExecutionStrategy",
                  "name": "executionStrategy",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "author",
                  "type": "address"
                },
                {
                  "internalType": "enum FinalizationStatus",
                  "name": "finalizationStatus",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "activeVotingStrategies",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "votesFor",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "votesAgainst",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "votesAbstain",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "payload",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "execute"
        },
        {
          "inputs": [
            {
              "internalType": "struct Proposal",
              "name": "proposal",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "snapshotTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "startTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "minEndTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "maxEndTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "bytes32",
                  "name": "executionPayloadHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "contract IExecutionStrategy",
                  "name": "executionStrategy",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "author",
                  "type": "address"
                },
                {
                  "internalType": "enum FinalizationStatus",
                  "name": "finalizationStatus",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "activeVotingStrategies",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "votesFor",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "votesAgainst",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "votesAbstain",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getProposalStatus",
          "outputs": [
            {
              "internalType": "enum ProposalStatus",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "getStrategyType",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "space",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isSpaceEnabled",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "quorum",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_target",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setTarget"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "initParams",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "target",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "constructor": {
            "params": {
              "_owner": "Address of the owner of this contract.",
              "_quorum": "The quorum required to execute a proposal.",
              "_spaces": "Array of whitelisted space contracts.",
              "_target": "Address of the avatar that this module will pass transactions to."
            }
          },
          "disableSpace(address)": {
            "params": {
              "space": "Address of the space."
            }
          },
          "enableSpace(address)": {
            "params": {
              "space": "Address of the space."
            }
          },
          "execute((uint32,uint32,uint32,uint32,bytes32,address,address,uint8,uint256),uint256,uint256,uint256,bytes)": {
            "params": {
              "payload": "The encoded transactions to execute.",
              "proposal": "The proposal to execute.",
              "votesAbstain": "The number of abstaining votes.",
              "votesAgainst": "The number of votes against the proposal.",
              "votesFor": "The number of votes in favor of the proposal."
            }
          },
          "getProposalStatus((uint32,uint32,uint32,uint32,bytes32,address,address,uint8,uint256),uint256,uint256,uint256)": {
            "params": {
              "proposal": "The proposal struct.",
              "votesAbstain": "The number of votes abstaining from the proposal.",
              "votesAgainst": "The number of votes against the proposal.",
              "votesFor": "The number of votes for the proposal."
            }
          },
          "isSpaceEnabled(address)": {
            "params": {
              "space": "Address of the space."
            },
            "returns": {
              "_0": "bool whether the space is enabled."
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "setTarget(address)": {
            "params": {
              "_target": "The new target address."
            }
          },
          "setUp(bytes)": {
            "params": {
              "initParams": "ABI encoded parameters, in the same order as the constructor."
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "constructor": {
            "notice": "Constructor"
          },
          "disableSpace(address)": {
            "notice": "Disable a space."
          },
          "enableSpace(address)": {
            "notice": "Enable a space."
          },
          "execute((uint32,uint32,uint32,uint32,bytes32,address,address,uint8,uint256),uint256,uint256,uint256,bytes)": {
            "notice": "Executes a proposal from the avatar contract if the proposal outcome is accepted.         Must be called by a whitelisted space contract."
          },
          "getProposalStatus((uint32,uint32,uint32,uint32,bytes32,address,address,uint8,uint256),uint256,uint256,uint256)": {
            "notice": "Returns the status of a proposal that uses a simple quorum.        A proposal is accepted if the for votes exceeds the against votes        and a quorum of total votes (for + against + abstain) is reached."
          },
          "getStrategyType()": {
            "notice": "Returns the trategy type string."
          },
          "isSpaceEnabled(address)": {
            "notice": "Check if a space is enabled."
          },
          "quorum()": {
            "notice": "The quorum required to execute a proposal using this strategy."
          },
          "setTarget(address)": {
            "notice": "Sets the target address."
          },
          "setUp(bytes)": {
            "notice": "Initialization function, should be called immediately after deploying a new proxy to this contract."
          },
          "target()": {
            "notice": "Address of the avatar that this module will pass transactions to."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@gnosis.pm/safe-contracts/=lib/safe-contracts/",
        ":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        ":@prb/test/=lib/prb-test/src/",
        ":@zodiac/=lib/zodiac/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-gas-snapshot/=lib/forge-gas-snapshot/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":prb-test/=lib/prb-test/src/",
        ":safe-contracts/=lib/safe-contracts/contracts/",
        ":zodiac/=lib/zodiac/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 10000
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "src/execution-strategies/AvatarExecutionStrategy.sol": "AvatarExecutionStrategy"
      },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888",
        "urls": [
          "bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a",
          "dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0xe798cadb41e2da274913e4b3183a80f50fb057a42238fe8467e077268100ec27",
        "urls": [
          "bzz-raw://899f850f7df5a270bccfb765d70069959ca1c20d3a7381c1c3bda8a3ffee1935",
          "dweb:/ipfs/QmVdnAqwyX2L3nX2HDA5WKGtVBFyH1nKE9A1k7fZnPBkhP"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183",
        "urls": [
          "bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06",
          "dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/safe-contracts/contracts/common/Enum.sol": {
        "keccak256": "0x473e45b1a5cc47be494b0e123c9127f0c11c1e0992a321ae5a644c0bfdb2c14f",
        "urls": [
          "bzz-raw://948e6d5a8bd7377f7795b6e28584eab9be5c0a8db240bf5e606744a175238c3d",
          "dweb:/ipfs/QmQQaUmQfpuejV41jbxKSTgEBYYCcVTjCsDMgf2htgz6ej"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/zodiac/contracts/interfaces/IAvatar.sol": {
        "keccak256": "0xcd5508ffe596eef8fbccfd5fc4f10a34397773547ce64e212d48b5212865ec1f",
        "urls": [
          "bzz-raw://1655ba8b760132ebd702cc806fcdad50a44d320fbeca14be00e35b0171bd35cf",
          "dweb:/ipfs/QmcbB5HpCoEQCTHKWxHS3HpFmgaB4AcZxZYtvQk2QEyvN2"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/execution-strategies/AvatarExecutionStrategy.sol": {
        "keccak256": "0x46c98f2b3170c5c96e017bdc7fe87b9d129db6239fb99d42a701147262cb98c3",
        "urls": [
          "bzz-raw://02d30008d06a8a0508dd073b579eb71cda526206bd952d37425d1527206a8a33",
          "dweb:/ipfs/QmYSQD5JMrUvqsEsuEvSY4fW1yYYocZdfRBKZgKV3r5anB"
        ],
        "license": "MIT"
      },
      "src/execution-strategies/SimpleQuorumExecutionStrategy.sol": {
        "keccak256": "0x6b2b1c5b08bea40355137bcd93872a96f0a3511a3f53a48ea851c2cee51a2f73",
        "urls": [
          "bzz-raw://128effd2ec54a7e196b1565db961799018e259849edc4a7c5b0dc715d313adc7",
          "dweb:/ipfs/QmQhAzrmxSMpRow5VBXAgtLjHBhXdcXZoDnftZHFjzqgcM"
        ],
        "license": "MIT"
      },
      "src/interfaces/IExecutionStrategy.sol": {
        "keccak256": "0x8caef430ce09dd42c4b90ff62b18090c12bcb2dcf19294e4316bd2cc2bfffef9",
        "urls": [
          "bzz-raw://d20584f72310a2607990eb5c6f307e81c606d38b4a95b91d2f9427b068e51050",
          "dweb:/ipfs/QmZaDzFnBq7qXy45YmBbqcay7DQZo8xfvTLriMEKocesK8"
        ],
        "license": "MIT"
      },
      "src/interfaces/execution-strategies/IExecutionStrategyErrors.sol": {
        "keccak256": "0x2250c64aab6438d7ab96f46536324753acd4259b4603a93487cf45c668653136",
        "urls": [
          "bzz-raw://27889cd728427bfcd7ddca916ac99a8e03dec3a643dd964f4f2c6ebb3020daa6",
          "dweb:/ipfs/QmXPKHv7PaCwr8nVuCmSdWSVjCXciNURB5Ev6AXR7C957R"
        ],
        "license": "MIT"
      },
      "src/types.sol": {
        "keccak256": "0xf72554d9fd3670d3d89308f0076df1e4189a580c09f073ffc781c359590c3ba5",
        "urls": [
          "bzz-raw://8085b0c07e7e9e039d90de08a05394368cc7ed512c25ea58b265bd46d4eb4d48",
          "dweb:/ipfs/QmXwFUsZ199WYKKDMo8RbX4JBvttTw9iqyCtYj2XB3G54R"
        ],
        "license": "MIT"
      },
      "src/utils/SpaceManager.sol": {
        "keccak256": "0xb2bf9466fa00b760a21313843fa692456fed7bd2e18691e603273f3ea787cf6e",
        "urls": [
          "bzz-raw://9b6606d863630743ed2c56ce839bceff544b3a68e9ffd27fdc1dd7e9521f7a57",
          "dweb:/ipfs/QmbayMG9dZSRJMryX5bNr435H2JHvVMAGFnqyDZjB7RnjP"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/execution-strategies/AvatarExecutionStrategy.sol",
    "id": 37486,
    "exportedSymbols": {
      "AvatarExecutionStrategy": [37485],
      "IAvatar": [34745],
      "MetaTransaction": [40333],
      "Proposal": [40295],
      "ProposalStatus": [40317],
      "SimpleQuorumExecutionStrategy": [38626]
    },
    "nodeType": "SourceUnit",
    "src": "33:4715:72",
    "nodes": [
      {
        "id": 37219,
        "nodeType": "PragmaDirective",
        "src": "33:24:72",
        "nodes": [],
        "literals": ["solidity", "^", "0.8", ".18"]
      },
      {
        "id": 37221,
        "nodeType": "ImportDirective",
        "src": "59:57:72",
        "nodes": [],
        "absolutePath": "lib/zodiac/contracts/interfaces/IAvatar.sol",
        "file": "@zodiac/interfaces/IAvatar.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 37486,
        "sourceUnit": 34746,
        "symbolAliases": [
          {
            "foreign": {
              "id": 37220,
              "name": "IAvatar",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 34745,
              "src": "68:7:72",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 37223,
        "nodeType": "ImportDirective",
        "src": "117:84:72",
        "nodes": [],
        "absolutePath": "src/execution-strategies/SimpleQuorumExecutionStrategy.sol",
        "file": "./SimpleQuorumExecutionStrategy.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 37486,
        "sourceUnit": 38627,
        "symbolAliases": [
          {
            "foreign": {
              "id": 37222,
              "name": "SimpleQuorumExecutionStrategy",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 38626,
              "src": "126:29:72",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 37227,
        "nodeType": "ImportDirective",
        "src": "202:73:72",
        "nodes": [],
        "absolutePath": "src/types.sol",
        "file": "../types.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 37486,
        "sourceUnit": 40366,
        "symbolAliases": [
          {
            "foreign": {
              "id": 37224,
              "name": "MetaTransaction",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 40333,
              "src": "211:15:72",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 37225,
              "name": "Proposal",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 40295,
              "src": "228:8:72",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 37226,
              "name": "ProposalStatus",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 40317,
              "src": "238:14:72",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 37485,
        "nodeType": "ContractDefinition",
        "src": "490:4257:72",
        "nodes": [
          {
            "id": 37240,
            "nodeType": "EventDefinition",
            "src": "849:87:72",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 37231,
              "nodeType": "StructuredDocumentation",
              "src": "562:282:72",
              "text": "@notice Emitted when a new Avatar Execution Strategy is initialized.\n @param _owner Address of the owner of the strategy.\n @param _target Address of the avatar that this module will pass transactions to.\n @param _spaces Array of whitelisted space contracts."
            },
            "eventSelector": "621a036730af1cc915beba86ec9f773f11d2983a09e67fa9d62c6cebedf2364e",
            "name": "AvatarExecutionStrategySetUp",
            "nameLocation": "855:28:72",
            "parameters": {
              "id": 37239,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37233,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "892:6:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 37240,
                  "src": "884:14:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37232,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "884:7:72",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37235,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_target",
                  "nameLocation": "908:7:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 37240,
                  "src": "900:15:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37234,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "900:7:72",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37238,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_spaces",
                  "nameLocation": "927:7:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 37240,
                  "src": "917:17:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 37236,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "917:7:72",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 37237,
                    "nodeType": "ArrayTypeName",
                    "src": "917:9:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "883:52:72"
            }
          },
          {
            "id": 37245,
            "nodeType": "EventDefinition",
            "src": "1044:43:72",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 37241,
              "nodeType": "StructuredDocumentation",
              "src": "942:97:72",
              "text": "@notice Emitted each time the Target is set.\n @param newTarget The new target address."
            },
            "eventSelector": "3bfb4bbf112628248058745a3c57e35b13369386e474b8e56c552f3063a4a196",
            "name": "TargetSet",
            "nameLocation": "1050:9:72",
            "parameters": {
              "id": 37244,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37243,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newTarget",
                  "nameLocation": "1076:9:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 37245,
                  "src": "1060:25:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37242,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1060:7:72",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1059:27:72"
            }
          },
          {
            "id": 37248,
            "nodeType": "VariableDeclaration",
            "src": "1175:21:72",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 37246,
              "nodeType": "StructuredDocumentation",
              "src": "1093:77:72",
              "text": "@notice Address of the avatar that this module will pass transactions to."
            },
            "functionSelector": "d4b83992",
            "mutability": "mutable",
            "name": "target",
            "nameLocation": "1190:6:72",
            "scope": 37485,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 37247,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1175:7:72",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 37276,
            "nodeType": "FunctionDefinition",
            "src": "1508:203:72",
            "nodes": [],
            "body": {
              "id": 37275,
              "nodeType": "Block",
              "src": "1596:115:72",
              "nodes": [],
              "statements": [
                {
                  "assignments": [37262],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 37262,
                      "mutability": "mutable",
                      "name": "initParams",
                      "nameLocation": "1619:10:72",
                      "nodeType": "VariableDeclaration",
                      "scope": 37275,
                      "src": "1606:23:72",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 37261,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1606:5:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 37270,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 37265,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37251,
                        "src": "1643:6:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 37266,
                        "name": "_target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37253,
                        "src": "1651:7:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 37267,
                        "name": "_spaces",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37256,
                        "src": "1660:7:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "id": 37268,
                        "name": "_quorum",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37258,
                        "src": "1669:7:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 37263,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "1632:3:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 37264,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1636:6:72",
                      "memberName": "encode",
                      "nodeType": "MemberAccess",
                      "src": "1632:10:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 37269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1632:45:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1606:71:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 37272,
                        "name": "initParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37262,
                        "src": "1693:10:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 37271,
                      "name": "setUp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37334,
                      "src": "1687:5:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory)"
                      }
                    },
                    "id": 37273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1687:17:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37274,
                  "nodeType": "ExpressionStatement",
                  "src": "1687:17:72"
                }
              ]
            },
            "documentation": {
              "id": 37249,
              "nodeType": "StructuredDocumentation",
              "src": "1203:300:72",
              "text": "@notice Constructor\n @param _owner Address of the owner of this contract.\n @param _target Address of the avatar that this module will pass transactions to.\n @param _spaces Array of whitelisted space contracts.\n @param _quorum The quorum required to execute a proposal."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 37259,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37251,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "1528:6:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 37276,
                  "src": "1520:14:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37250,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1520:7:72",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37253,
                  "mutability": "mutable",
                  "name": "_target",
                  "nameLocation": "1544:7:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 37276,
                  "src": "1536:15:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37252,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1536:7:72",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37256,
                  "mutability": "mutable",
                  "name": "_spaces",
                  "nameLocation": "1570:7:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 37276,
                  "src": "1553:24:72",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 37254,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1553:7:72",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 37255,
                    "nodeType": "ArrayTypeName",
                    "src": "1553:9:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37258,
                  "mutability": "mutable",
                  "name": "_quorum",
                  "nameLocation": "1587:7:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 37276,
                  "src": "1579:15:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37257,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1579:7:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1519:76:72"
            },
            "returnParameters": {
              "id": 37260,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1596:0:72"
            },
            "scope": 37485,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 37334,
            "nodeType": "FunctionDefinition",
            "src": "1921:500:72",
            "nodes": [],
            "body": {
              "id": 37333,
              "nodeType": "Block",
              "src": "1980:441:72",
              "nodes": [],
              "statements": [
                {
                  "assignments": [37285, 37287, 37290, 37292],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 37285,
                      "mutability": "mutable",
                      "name": "_owner",
                      "nameLocation": "1999:6:72",
                      "nodeType": "VariableDeclaration",
                      "scope": 37333,
                      "src": "1991:14:72",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 37284,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1991:7:72",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 37287,
                      "mutability": "mutable",
                      "name": "_target",
                      "nameLocation": "2015:7:72",
                      "nodeType": "VariableDeclaration",
                      "scope": 37333,
                      "src": "2007:15:72",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 37286,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2007:7:72",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 37290,
                      "mutability": "mutable",
                      "name": "_spaces",
                      "nameLocation": "2041:7:72",
                      "nodeType": "VariableDeclaration",
                      "scope": 37333,
                      "src": "2024:24:72",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 37288,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2024:7:72",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 37289,
                        "nodeType": "ArrayTypeName",
                        "src": "2024:9:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 37292,
                      "mutability": "mutable",
                      "name": "_quorum",
                      "nameLocation": "2058:7:72",
                      "nodeType": "VariableDeclaration",
                      "scope": 37333,
                      "src": "2050:15:72",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 37291,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2050:7:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 37307,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 37295,
                        "name": "initParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37279,
                        "src": "2093:10:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 37297,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2118:7:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 37296,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2118:7:72",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 37299,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2127:7:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 37298,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2127:7:72",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "baseExpression": {
                              "id": 37301,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2136:7:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 37300,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2136:7:72",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 37302,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2136:9:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_array$_t_address_$dyn_memory_ptr_$",
                              "typeString": "type(address[] memory)"
                            }
                          },
                          {
                            "id": 37304,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2147:7:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 37303,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2147:7:72",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 37305,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2117:38:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_address_$_$_t_type$_t_array$_t_address_$dyn_memory_ptr_$_$_t_type$_t_uint256_$_$",
                          "typeString": "tuple(type(address),type(address),type(address[] memory),type(uint256))"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_address_$_$_t_type$_t_array$_t_address_$dyn_memory_ptr_$_$_t_type$_t_uint256_$_$",
                          "typeString": "tuple(type(address),type(address),type(address[] memory),type(uint256))"
                        }
                      ],
                      "expression": {
                        "id": 37293,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "2069:3:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 37294,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "2073:6:72",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "2069:10:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 37306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2069:96:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_payable_$_t_address_payable_$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$",
                      "typeString": "tuple(address payable,address payable,address[] memory,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1990:175:72"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 37308,
                      "name": "__Ownable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25109,
                      "src": "2175:14:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 37309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2175:16:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37310,
                  "nodeType": "ExpressionStatement",
                  "src": "2175:16:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 37312,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37285,
                        "src": "2219:6:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 37311,
                      "name": "transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25188,
                      "src": "2201:17:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 37313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2201:25:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37314,
                  "nodeType": "ExpressionStatement",
                  "src": "2201:25:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 37316,
                        "name": "_spaces",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37290,
                        "src": "2256:7:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      ],
                      "id": 37315,
                      "name": "__SpaceManager_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41263,
                      "src": "2236:19:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address[] memory)"
                      }
                    },
                    "id": 37317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2236:28:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37318,
                  "nodeType": "ExpressionStatement",
                  "src": "2236:28:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 37320,
                        "name": "_quorum",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37292,
                        "src": "2311:7:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 37319,
                      "name": "__SimpleQuorumExecutionStrategy_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38465,
                      "src": "2274:36:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 37321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2274:45:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37322,
                  "nodeType": "ExpressionStatement",
                  "src": "2274:45:72"
                },
                {
                  "expression": {
                    "id": 37325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 37323,
                      "name": "target",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37248,
                      "src": "2329:6:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 37324,
                      "name": "_target",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37287,
                      "src": "2338:7:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2329:16:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 37326,
                  "nodeType": "ExpressionStatement",
                  "src": "2329:16:72"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 37328,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37285,
                        "src": "2389:6:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 37329,
                        "name": "_target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37287,
                        "src": "2397:7:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 37330,
                        "name": "_spaces",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37290,
                        "src": "2406:7:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      ],
                      "id": 37327,
                      "name": "AvatarExecutionStrategySetUp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37240,
                      "src": "2360:28:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address[] memory)"
                      }
                    },
                    "id": 37331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2360:54:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37332,
                  "nodeType": "EmitStatement",
                  "src": "2355:59:72"
                }
              ]
            },
            "documentation": {
              "id": 37277,
              "nodeType": "StructuredDocumentation",
              "src": "1717:199:72",
              "text": "@notice Initialization function, should be called immediately after deploying a new proxy to this contract.\n @param initParams ABI encoded parameters, in the same order as the constructor."
            },
            "functionSelector": "a4f9edbf",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 37282,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 37281,
                  "name": "initializer",
                  "nameLocations": ["1968:11:72"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 25674,
                  "src": "1968:11:72"
                },
                "nodeType": "ModifierInvocation",
                "src": "1968:11:72"
              }
            ],
            "name": "setUp",
            "nameLocation": "1930:5:72",
            "parameters": {
              "id": 37280,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37279,
                  "mutability": "mutable",
                  "name": "initParams",
                  "nameLocation": "1949:10:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 37334,
                  "src": "1936:23:72",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 37278,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1936:5:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1935:25:72"
            },
            "returnParameters": {
              "id": 37283,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1980:0:72"
            },
            "scope": 37485,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 37351,
            "nodeType": "FunctionDefinition",
            "src": "2515:121:72",
            "nodes": [],
            "body": {
              "id": 37350,
              "nodeType": "Block",
              "src": "2570:66:72",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 37344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 37342,
                      "name": "target",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37248,
                      "src": "2580:6:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 37343,
                      "name": "_target",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37337,
                      "src": "2589:7:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2580:16:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 37345,
                  "nodeType": "ExpressionStatement",
                  "src": "2580:16:72"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 37347,
                        "name": "_target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37337,
                        "src": "2621:7:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 37346,
                      "name": "TargetSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37245,
                      "src": "2611:9:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 37348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2611:18:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37349,
                  "nodeType": "EmitStatement",
                  "src": "2606:23:72"
                }
              ]
            },
            "documentation": {
              "id": 37335,
              "nodeType": "StructuredDocumentation",
              "src": "2427:83:72",
              "text": "@notice Sets the target address.\n @param _target The new target address."
            },
            "functionSelector": "776d1a01",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 37340,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 37339,
                  "name": "onlyOwner",
                  "nameLocations": ["2560:9:72"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 25128,
                  "src": "2560:9:72"
                },
                "nodeType": "ModifierInvocation",
                "src": "2560:9:72"
              }
            ],
            "name": "setTarget",
            "nameLocation": "2524:9:72",
            "parameters": {
              "id": 37338,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37337,
                  "mutability": "mutable",
                  "name": "_target",
                  "nameLocation": "2542:7:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 37351,
                  "src": "2534:15:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37336,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2534:7:72",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2533:17:72"
            },
            "returnParameters": {
              "id": 37341,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2570:0:72"
            },
            "scope": 37485,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 37411,
            "nodeType": "FunctionDefinition",
            "src": "3113:723:72",
            "nodes": [],
            "body": {
              "id": 37410,
              "nodeType": "Block",
              "src": "3314:522:72",
              "nodes": [],
              "statements": [
                {
                  "assignments": [37371],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 37371,
                      "mutability": "mutable",
                      "name": "proposalStatus",
                      "nameLocation": "3339:14:72",
                      "nodeType": "VariableDeclaration",
                      "scope": 37410,
                      "src": "3324:29:72",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProposalStatus_$40317",
                        "typeString": "enum ProposalStatus"
                      },
                      "typeName": {
                        "id": 37370,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 37369,
                          "name": "ProposalStatus",
                          "nameLocations": ["3324:14:72"],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 40317,
                          "src": "3324:14:72"
                        },
                        "referencedDeclaration": 40317,
                        "src": "3324:14:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ProposalStatus_$40317",
                          "typeString": "enum ProposalStatus"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 37378,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 37373,
                        "name": "proposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37355,
                        "src": "3374:8:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$40295_memory_ptr",
                          "typeString": "struct Proposal memory"
                        }
                      },
                      {
                        "id": 37374,
                        "name": "votesFor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37357,
                        "src": "3384:8:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 37375,
                        "name": "votesAgainst",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37359,
                        "src": "3394:12:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 37376,
                        "name": "votesAbstain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37361,
                        "src": "3408:12:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Proposal_$40295_memory_ptr",
                          "typeString": "struct Proposal memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 37372,
                      "name": "getProposalStatus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38579,
                      "src": "3356:17:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Proposal_$40295_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_enum$_ProposalStatus_$40317_$",
                        "typeString": "function (struct Proposal memory,uint256,uint256,uint256) view returns (enum ProposalStatus)"
                      }
                    },
                    "id": 37377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3356:65:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProposalStatus_$40317",
                      "typeString": "enum ProposalStatus"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3324:97:72"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 37389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_enum$_ProposalStatus_$40317",
                            "typeString": "enum ProposalStatus"
                          },
                          "id": 37382,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 37379,
                            "name": "proposalStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37371,
                            "src": "3436:14:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ProposalStatus_$40317",
                              "typeString": "enum ProposalStatus"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "expression": {
                              "id": 37380,
                              "name": "ProposalStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40317,
                              "src": "3454:14:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_ProposalStatus_$40317_$",
                                "typeString": "type(enum ProposalStatus)"
                              }
                            },
                            "id": 37381,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "3469:8:72",
                            "memberName": "Accepted",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 40313,
                            "src": "3454:23:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ProposalStatus_$40317",
                              "typeString": "enum ProposalStatus"
                            }
                          },
                          "src": "3436:41:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 37383,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3435:43:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_enum$_ProposalStatus_$40317",
                            "typeString": "enum ProposalStatus"
                          },
                          "id": 37387,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 37384,
                            "name": "proposalStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37371,
                            "src": "3483:14:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ProposalStatus_$40317",
                              "typeString": "enum ProposalStatus"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "expression": {
                              "id": 37385,
                              "name": "ProposalStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40317,
                              "src": "3501:14:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_ProposalStatus_$40317_$",
                                "typeString": "type(enum ProposalStatus)"
                              }
                            },
                            "id": 37386,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "3516:20:72",
                            "memberName": "VotingPeriodAccepted",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 40312,
                            "src": "3501:35:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ProposalStatus_$40317",
                              "typeString": "enum ProposalStatus"
                            }
                          },
                          "src": "3483:53:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 37388,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3482:55:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3435:102:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 37395,
                  "nodeType": "IfStatement",
                  "src": "3431:177:72",
                  "trueBody": {
                    "id": 37394,
                    "nodeType": "Block",
                    "src": "3539:69:72",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 37391,
                              "name": "proposalStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37371,
                              "src": "3582:14:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ProposalStatus_$40317",
                                "typeString": "enum ProposalStatus"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_ProposalStatus_$40317",
                                "typeString": "enum ProposalStatus"
                              }
                            ],
                            "id": 37390,
                            "name": "InvalidProposalStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39556,
                            "src": "3560:21:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_enum$_ProposalStatus_$40317_$returns$__$",
                              "typeString": "function (enum ProposalStatus) pure"
                            }
                          },
                          "id": 37392,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3560:37:72",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 37393,
                        "nodeType": "RevertStatement",
                        "src": "3553:44:72"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 37401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 37396,
                        "name": "proposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37355,
                        "src": "3725:8:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$40295_memory_ptr",
                          "typeString": "struct Proposal memory"
                        }
                      },
                      "id": 37397,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3734:20:72",
                      "memberName": "executionPayloadHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40284,
                      "src": "3725:29:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 37399,
                          "name": "payload",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37363,
                          "src": "3768:7:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 37398,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "3758:9:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 37400,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3758:18:72",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "3725:51:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 37405,
                  "nodeType": "IfStatement",
                  "src": "3721:80:72",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 37402,
                        "name": "InvalidPayload",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39562,
                        "src": "3785:14:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 37403,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3785:16:72",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 37404,
                    "nodeType": "RevertStatement",
                    "src": "3778:23:72"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 37407,
                        "name": "payload",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37363,
                        "src": "3821:7:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 37406,
                      "name": "_execute",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37474,
                      "src": "3812:8:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory)"
                      }
                    },
                    "id": 37408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3812:17:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37409,
                  "nodeType": "ExpressionStatement",
                  "src": "3812:17:72"
                }
              ]
            },
            "baseFunctions": [38480],
            "documentation": {
              "id": 37352,
              "nodeType": "StructuredDocumentation",
              "src": "2642:466:72",
              "text": "@notice Executes a proposal from the avatar contract if the proposal outcome is accepted.\n         Must be called by a whitelisted space contract.\n @param proposal The proposal to execute.\n @param votesFor The number of votes in favor of the proposal.\n @param votesAgainst The number of votes against the proposal.\n @param votesAbstain The number of abstaining votes.\n @param payload The encoded transactions to execute."
            },
            "functionSelector": "01fe2212",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 37367,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 37366,
                  "name": "onlySpace",
                  "nameLocations": ["3304:9:72"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 41349,
                  "src": "3304:9:72"
                },
                "nodeType": "ModifierInvocation",
                "src": "3304:9:72"
              }
            ],
            "name": "execute",
            "nameLocation": "3122:7:72",
            "overrides": {
              "id": 37365,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3295:8:72"
            },
            "parameters": {
              "id": 37364,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37355,
                  "mutability": "mutable",
                  "name": "proposal",
                  "nameLocation": "3155:8:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 37411,
                  "src": "3139:24:72",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Proposal_$40295_memory_ptr",
                    "typeString": "struct Proposal"
                  },
                  "typeName": {
                    "id": 37354,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 37353,
                      "name": "Proposal",
                      "nameLocations": ["3139:8:72"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 40295,
                      "src": "3139:8:72"
                    },
                    "referencedDeclaration": 40295,
                    "src": "3139:8:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proposal_$40295_storage_ptr",
                      "typeString": "struct Proposal"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37357,
                  "mutability": "mutable",
                  "name": "votesFor",
                  "nameLocation": "3181:8:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 37411,
                  "src": "3173:16:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37356,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3173:7:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37359,
                  "mutability": "mutable",
                  "name": "votesAgainst",
                  "nameLocation": "3207:12:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 37411,
                  "src": "3199:20:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37358,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3199:7:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37361,
                  "mutability": "mutable",
                  "name": "votesAbstain",
                  "nameLocation": "3237:12:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 37411,
                  "src": "3229:20:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37360,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3229:7:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37363,
                  "mutability": "mutable",
                  "name": "payload",
                  "nameLocation": "3272:7:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 37411,
                  "src": "3259:20:72",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 37362,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3259:5:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3129:156:72"
            },
            "returnParameters": {
              "id": 37368,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3314:0:72"
            },
            "scope": 37485,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 37474,
            "nodeType": "FunctionDefinition",
            "src": "3989:583:72",
            "nodes": [],
            "body": {
              "id": 37473,
              "nodeType": "Block",
              "src": "4038:534:72",
              "nodes": [],
              "statements": [
                {
                  "assignments": [37421],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 37421,
                      "mutability": "mutable",
                      "name": "transactions",
                      "nameLocation": "4073:12:72",
                      "nodeType": "VariableDeclaration",
                      "scope": 37473,
                      "src": "4048:37:72",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_MetaTransaction_$40333_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct MetaTransaction[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 37419,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 37418,
                            "name": "MetaTransaction",
                            "nameLocations": ["4048:15:72"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 40333,
                            "src": "4048:15:72"
                          },
                          "referencedDeclaration": 40333,
                          "src": "4048:15:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MetaTransaction_$40333_storage_ptr",
                            "typeString": "struct MetaTransaction"
                          }
                        },
                        "id": 37420,
                        "nodeType": "ArrayTypeName",
                        "src": "4048:17:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_MetaTransaction_$40333_storage_$dyn_storage_ptr",
                          "typeString": "struct MetaTransaction[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 37429,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 37424,
                        "name": "payload",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37414,
                        "src": "4099:7:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "baseExpression": {
                              "id": 37425,
                              "name": "MetaTransaction",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40333,
                              "src": "4109:15:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_MetaTransaction_$40333_storage_ptr_$",
                                "typeString": "type(struct MetaTransaction storage pointer)"
                              }
                            },
                            "id": 37426,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4109:17:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_array$_t_struct$_MetaTransaction_$40333_memory_ptr_$dyn_memory_ptr_$",
                              "typeString": "type(struct MetaTransaction memory[] memory)"
                            }
                          }
                        ],
                        "id": 37427,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "4108:19:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_array$_t_struct$_MetaTransaction_$40333_memory_ptr_$dyn_memory_ptr_$",
                          "typeString": "type(struct MetaTransaction memory[] memory)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_array$_t_struct$_MetaTransaction_$40333_memory_ptr_$dyn_memory_ptr_$",
                          "typeString": "type(struct MetaTransaction memory[] memory)"
                        }
                      ],
                      "expression": {
                        "id": 37422,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "4088:3:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 37423,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "4092:6:72",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "4088:10:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 37428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4088:40:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_MetaTransaction_$40333_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct MetaTransaction memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4048:80:72"
                },
                {
                  "body": {
                    "id": 37471,
                    "nodeType": "Block",
                    "src": "4188:378:72",
                    "statements": [
                      {
                        "assignments": [37442],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 37442,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "4207:7:72",
                            "nodeType": "VariableDeclaration",
                            "scope": 37471,
                            "src": "4202:12:72",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 37441,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "4202:4:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 37464,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 37447,
                                  "name": "transactions",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 37421,
                                  "src": "4276:12:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_MetaTransaction_$40333_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "struct MetaTransaction memory[] memory"
                                  }
                                },
                                "id": 37449,
                                "indexExpression": {
                                  "id": 37448,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 37431,
                                  "src": "4289:1:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4276:15:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_MetaTransaction_$40333_memory_ptr",
                                  "typeString": "struct MetaTransaction memory"
                                }
                              },
                              "id": 37450,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4292:2:72",
                              "memberName": "to",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 40323,
                              "src": "4276:18:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 37451,
                                  "name": "transactions",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 37421,
                                  "src": "4312:12:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_MetaTransaction_$40333_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "struct MetaTransaction memory[] memory"
                                  }
                                },
                                "id": 37453,
                                "indexExpression": {
                                  "id": 37452,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 37431,
                                  "src": "4325:1:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4312:15:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_MetaTransaction_$40333_memory_ptr",
                                  "typeString": "struct MetaTransaction memory"
                                }
                              },
                              "id": 37454,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4328:5:72",
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 40325,
                              "src": "4312:21:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 37455,
                                  "name": "transactions",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 37421,
                                  "src": "4351:12:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_MetaTransaction_$40333_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "struct MetaTransaction memory[] memory"
                                  }
                                },
                                "id": 37457,
                                "indexExpression": {
                                  "id": 37456,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 37431,
                                  "src": "4364:1:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4351:15:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_MetaTransaction_$40333_memory_ptr",
                                  "typeString": "struct MetaTransaction memory"
                                }
                              },
                              "id": 37458,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4367:4:72",
                              "memberName": "data",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 40327,
                              "src": "4351:20:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 37459,
                                  "name": "transactions",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 37421,
                                  "src": "4389:12:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_MetaTransaction_$40333_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "struct MetaTransaction memory[] memory"
                                  }
                                },
                                "id": 37461,
                                "indexExpression": {
                                  "id": 37460,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 37431,
                                  "src": "4402:1:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4389:15:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_MetaTransaction_$40333_memory_ptr",
                                  "typeString": "struct MetaTransaction memory"
                                }
                              },
                              "id": 37462,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4405:9:72",
                              "memberName": "operation",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 40330,
                              "src": "4389:25:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Operation_$34657",
                                "typeString": "enum Enum.Operation"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_enum$_Operation_$34657",
                                "typeString": "enum Enum.Operation"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 37444,
                                  "name": "target",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 37248,
                                  "src": "4225:6:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 37443,
                                "name": "IAvatar",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34745,
                                "src": "4217:7:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IAvatar_$34745_$",
                                  "typeString": "type(contract IAvatar)"
                                }
                              },
                              "id": 37445,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4217:15:72",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IAvatar_$34745",
                                "typeString": "contract IAvatar"
                              }
                            },
                            "id": 37446,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4233:25:72",
                            "memberName": "execTransactionFromModule",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 34706,
                            "src": "4217:41:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_enum$_Operation_$34657_$returns$_t_bool_$",
                              "typeString": "function (address,uint256,bytes memory,enum Enum.Operation) external returns (bool)"
                            }
                          },
                          "id": 37463,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4217:211:72",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4202:226:72"
                      },
                      {
                        "condition": {
                          "id": 37466,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "4521:8:72",
                          "subExpression": {
                            "id": 37465,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37442,
                            "src": "4522:7:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 37470,
                        "nodeType": "IfStatement",
                        "src": "4517:38:72",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 37467,
                              "name": "ExecutionFailed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39559,
                              "src": "4538:15:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 37468,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4538:17:72",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 37469,
                          "nodeType": "RevertStatement",
                          "src": "4531:24:72"
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 37437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 37434,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37431,
                      "src": "4158:1:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 37435,
                        "name": "transactions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37421,
                        "src": "4162:12:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_MetaTransaction_$40333_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct MetaTransaction memory[] memory"
                        }
                      },
                      "id": 37436,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4175:6:72",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4162:19:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4158:23:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 37472,
                  "initializationExpression": {
                    "assignments": [37431],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 37431,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4151:1:72",
                        "nodeType": "VariableDeclaration",
                        "scope": 37472,
                        "src": "4143:9:72",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 37430,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4143:7:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 37433,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 37432,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4155:1:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4143:13:72"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 37439,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4183:3:72",
                      "subExpression": {
                        "id": 37438,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37431,
                        "src": "4183:1:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 37440,
                    "nodeType": "ExpressionStatement",
                    "src": "4183:3:72"
                  },
                  "nodeType": "ForStatement",
                  "src": "4138:428:72"
                }
              ]
            },
            "documentation": {
              "id": 37412,
              "nodeType": "StructuredDocumentation",
              "src": "3842:142:72",
              "text": "@notice Decodes and executes a batch of transactions from the avatar contract.\n @param payload The encoded transactions to execute."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_execute",
            "nameLocation": "3998:8:72",
            "parameters": {
              "id": 37415,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37414,
                  "mutability": "mutable",
                  "name": "payload",
                  "nameLocation": "4020:7:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 37474,
                  "src": "4007:20:72",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 37413,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4007:5:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4006:22:72"
            },
            "returnParameters": {
              "id": 37416,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4038:0:72"
            },
            "scope": 37485,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 37484,
            "nodeType": "FunctionDefinition",
            "src": "4627:118:72",
            "nodes": [],
            "body": {
              "id": 37483,
              "nodeType": "Block",
              "src": "4701:44:72",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "hexValue": "53696d706c6551756f72756d417661746172",
                    "id": 37481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4718:20:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c6b424df83e7c7c494d72036a8dbf29b3cdbdadcbd03398081a41b5e3ac2762b",
                      "typeString": "literal_string \"SimpleQuorumAvatar\""
                    },
                    "value": "SimpleQuorumAvatar"
                  },
                  "functionReturnParameters": 37480,
                  "id": 37482,
                  "nodeType": "Return",
                  "src": "4711:27:72"
                }
              ]
            },
            "baseFunctions": [38625],
            "documentation": {
              "id": 37475,
              "nodeType": "StructuredDocumentation",
              "src": "4578:44:72",
              "text": "@notice Returns the trategy type string."
            },
            "functionSelector": "0eb9b15a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStrategyType",
            "nameLocation": "4636:15:72",
            "overrides": {
              "id": 37477,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4668:8:72"
            },
            "parameters": {
              "id": 37476,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4651:2:72"
            },
            "returnParameters": {
              "id": 37480,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37479,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 37484,
                  "src": "4686:13:72",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 37478,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4686:6:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4685:15:72"
            },
            "scope": 37485,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 37229,
              "name": "SimpleQuorumExecutionStrategy",
              "nameLocations": ["526:29:72"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 38626,
              "src": "526:29:72"
            },
            "id": 37230,
            "nodeType": "InheritanceSpecifier",
            "src": "526:29:72"
          }
        ],
        "canonicalName": "AvatarExecutionStrategy",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 37228,
          "nodeType": "StructuredDocumentation",
          "src": "277:213:72",
          "text": "@title Avatar Execution Strategy\n @notice Used to execute proposal transactions from an Avatar contract.\n @dev An Avatar contract is any contract that implements the IAvatar interface, eg a Gnosis Safe."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [37485, 38626, 41350, 25214, 26234, 25772, 39457, 39563],
        "name": "AvatarExecutionStrategy",
        "nameLocation": "499:23:72",
        "scope": 37486,
        "usedErrors": [39556, 39559, 39562, 41218]
      }
    ],
    "license": "MIT"
  },
  "id": 72
}
