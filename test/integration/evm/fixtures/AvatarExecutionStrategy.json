{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "_spaces",
          "type": "address[]"
        },
        {
          "internalType": "uint256",
          "name": "_quorum",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "ExecutionFailed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "enum ProposalStatus",
          "name": "status",
          "type": "uint8"
        }
      ],
      "name": "InvalidProposalStatus",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidSpace",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_target",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "_spaces",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_quorum",
          "type": "uint256"
        }
      ],
      "name": "AvatarExecutionStrategySetUp",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newQuorum",
          "type": "uint256"
        }
      ],
      "name": "QuorumUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "space",
          "type": "address"
        }
      ],
      "name": "SpaceDisabled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "space",
          "type": "address"
        }
      ],
      "name": "SpaceEnabled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newTarget",
          "type": "address"
        }
      ],
      "name": "TargetSet",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "space",
          "type": "address"
        }
      ],
      "name": "disableSpace",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "space",
          "type": "address"
        }
      ],
      "name": "enableSpace",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "author",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "startBlockNumber",
              "type": "uint32"
            },
            {
              "internalType": "contract IExecutionStrategy",
              "name": "executionStrategy",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "minEndBlockNumber",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "maxEndBlockNumber",
              "type": "uint32"
            },
            {
              "internalType": "enum FinalizationStatus",
              "name": "finalizationStatus",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "executionPayloadHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "activeVotingStrategies",
              "type": "uint256"
            }
          ],
          "internalType": "struct Proposal",
          "name": "proposal",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "votesFor",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "votesAgainst",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "votesAbstain",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "payload",
          "type": "bytes"
        }
      ],
      "name": "execute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "author",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "startBlockNumber",
              "type": "uint32"
            },
            {
              "internalType": "contract IExecutionStrategy",
              "name": "executionStrategy",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "minEndBlockNumber",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "maxEndBlockNumber",
              "type": "uint32"
            },
            {
              "internalType": "enum FinalizationStatus",
              "name": "finalizationStatus",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "executionPayloadHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "activeVotingStrategies",
              "type": "uint256"
            }
          ],
          "internalType": "struct Proposal",
          "name": "proposal",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "votesFor",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "votesAgainst",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "votesAbstain",
          "type": "uint256"
        }
      ],
      "name": "getProposalStatus",
      "outputs": [
        {
          "internalType": "enum ProposalStatus",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getStrategyType",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "space",
          "type": "address"
        }
      ],
      "name": "isSpaceEnabled",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "quorum",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_quorum",
          "type": "uint256"
        }
      ],
      "name": "setQuorum",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        }
      ],
      "name": "setTarget",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "initParams",
          "type": "bytes"
        }
      ],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "target",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060409080825234620003c557620019e78038038091620000228285620003ca565b8339810190608081830312620003c5576200003d8162000404565b916020916200004e83820162000404565b818601516001600160401b03939190848111620003c55760606200007d6200009f946200009093870162000419565b9401518851948593888501998a62000490565b03601f198101835282620003ca565b60009081549260ff95868560081c161592838094620003b8575b8015620003a0575b156200034557600195848760ff19831617875562000333575b5080518101916080828403126200032f57620000f69062000404565b92620001048a830162000404565b9260608301519182116200032b5760809189806200012793019185010162000419565b9101519060018060a01b0380809516931693620001558a885460081c166200014f81620004f6565b620004f6565b620001603362000557565b33816033541603620002e957831562000296576200017e8462000557565b6200018f8a885460081c16620004f6565b86885b62000249575b50507f683bbcd71b259e230416d974e6911d22117ec0de423b17abfcb832bafbd244bf939291620001f891620001d588549b8c60081c16620004f6565b6066829055606780546001600160a01b031916861790558b519485948562000490565b0390a162000210575b84516114469081620005a18239f35b7f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989361ff00191690558351908152a13880808062000201565b82518110156200029057818a8260051b8501015116885260658a52888c89205560001981146200027c5788018862000192565b634e487b7160e01b88526011600452602488fd5b62000198565b8a5162461bcd60e51b8152600481018a9052602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b6064898c519062461bcd60e51b825280600483015260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b8680fd5b8580fd5b61ffff191661010117855538620000da565b885162461bcd60e51b815260048101889052602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b158015620000c15750600188871614620000c1565b50600188871610620000b9565b600080fd5b601f909101601f19168101906001600160401b03821190821017620003ee57604052565b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b0382168203620003c557565b9080601f83011215620003c5578151906001600160401b038211620003ee578160051b604051936020936200045185840187620003ca565b85528380860192820101928311620003c5578301905b82821062000476575050505090565b838091620004848462000404565b81520191019062000467565b9493929091608086019060018060a01b0380941687528360209116818801526080604088015282518092528060a088019301936000905b838210620004dc575050505060609150930152565b8551811685529482019493820193600190910190620004c7565b15620004fe57565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b603380546001600160a01b039283166001600160a01b0319821681179092559091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a356fe6080806040526004908136101561001557600080fd5b60003560e01c9081630eb9b15a14610e1b575080631703a01814610dfd5780632b06df53146109655780636efd971c1461091e578063715018a61461089e578063776d1a01146108165780638da5cb5b146107e25780639e33d81114610759578063a4f9edbf14610314578063c1ba4e59146102c8578063d4b8399214610294578063d92d4ea0146101d2578063ea8f8c4b1461018d5763f2fde38b146100bb57600080fd5b34610188576020600319360112610188576100d4610f8f565b906100dd611131565b73ffffffffffffffffffffffffffffffffffffffff82161561010457610102826111b0565b005b6084906020604051917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b600080fd5b3461018857610160600319360112610188576101ce6101c26101ae36610fb2565b610144359061012435906101043590611380565b604051918291826110ef565b0390f35b50346101885760206003193601126101885773ffffffffffffffffffffffffffffffffffffffff610201610f8f565b610209611131565b16908115801561027d575b610255577fc3dc08a46232e8d0a95510120799f1e68e0aa28c88730b8b0127d5ff4565b4b060208380600052606582526001604060002055604051908152a1005b6040517fc3b48cf1000000000000000000000000000000000000000000000000000000008152fd5b508160005260656020526040600020541515610214565b3461018857600060031936011261018857602073ffffffffffffffffffffffffffffffffffffffff60675416604051908152f35b50346101885760206003193601126101885760207ff18f88786aae85a652aadb99a82462616489a33370c9bcc7b245906812ef7cd19135610307611131565b80606655604051908152a1005b5034610188576020806003193601126101885767ffffffffffffffff9180358381116101885761034790369083016110a8565b6000549160ff94858460081c16159283809461074d575b8015610737575b156106b45760019484867fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00831617600055610685575b508051810191608082888501940312610188576103b987830161121d565b6103c56040840161121d565b9160608401519081116101885783019284603f850112156101885788840151946103ee8661123e565b946103fc6040519687610f1f565b8686528a8601906040829860051b8201019283116101885760408c9101915b83831061066d5750505050608001519273ffffffffffffffffffffffffffffffffffffffff808093169316956104608b60005460081c1661045b81611256565b611256565b610469336111b0565b610471611131565b83156105ea57506104838392936111b0565b6104938a60005460081c16611256565b876000815b6105a9575b50506104b06000549a8b60081c16611256565b83606655857fffffffffffffffffffffffff00000000000000000000000000000000000000006067541617606755604051956080870192875289870152608060408701525180915260a0850193916000905b888a848410610591578c918a7f683bbcd71b259e230416d974e6911d22117ec0de423b17abfcb832bafbd244bf8b808c8c60608301520390a161054157005b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff7f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989316600055604051908152a1005b85518316885296870196909401939190910190610502565b82949394518110156105e25780846105c46105d9938661133d565b511660005260658c52826040600020556112e1565b81949394610498565b93929361049d565b6084908a604051917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b81906106788461121d565b8152019101908b9061041b565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000016610101176000553861039b565b60848387604051917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152fd5b50303b1580156103655750600187861614610365565b5060018786161061035e565b50346101885760206003193601126101885773ffffffffffffffffffffffffffffffffffffffff610788610f8f565b610790611131565b169081600052606560205260406000205415610255577f665604bfe8ee87044ba1f1fd2fb47fe92983c9e187acbb442debf97d3e581921602083806000526065825260006040812055604051908152a1005b3461018857600060031936011261018857602073ffffffffffffffffffffffffffffffffffffffff60335416604051908152f35b346101885760206003193601126101885773ffffffffffffffffffffffffffffffffffffffff610844610f8f565b61084c611131565b16807fffffffffffffffffffffffff000000000000000000000000000000000000000060675416176067557f3bfb4bbf112628248058745a3c57e35b13369386e474b8e56c552f3063a4a196600080a2005b34610188576000600319360112610188576108b7611131565b600073ffffffffffffffffffffffffffffffffffffffff6033547fffffffffffffffffffffffff00000000000000000000000000000000000000008116603355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346101885760206003193601126101885773ffffffffffffffffffffffffffffffffffffffff61094c610f8f565b1660005260656020526020604060002054604051908152f35b5034610188576101806003193601126101885761098136610fb2565b6101643567ffffffffffffffff8111610188576109a190369084016110a8565b9033600052606560205260406000205415610dd4576109ce90610144359061012435906101043590611380565b6007811015610da657600381141580610d9b575b610d635750805181019060208183031261018857602081015167ffffffffffffffff81116101885760208301603f828401011215610188576020818301015190610a2b8261123e565b93610a396040519586610f1f565b82855260208501906020810160408560051b85880101011161018857604083860101915b60408560051b85880101018310610bfa57878760005b81518110156101025773ffffffffffffffffffffffffffffffffffffffff806067541690610aa1838561133d565b515116906020610ab1848661133d565b510151906040610ac1858761133d565b510151926060610ad1868861133d565b5101516002811015610bcc57906000886020959493610b2f604051988997889687957f468721a70000000000000000000000000000000000000000000000000000000087528601526024850152608060448501526084840190610edc565b90606483015203925af1908115610bc057600091610b85575b5015610b5c57610b57906112e1565b610a73565b826040517facfdb444000000000000000000000000000000000000000000000000000000008152fd5b90506020813d602011610bb8575b81610ba060209383610f1f565b81010312610188575180151581036101885784610b48565b3d9150610b93565b6040513d6000823e3d90fd5b6021887f4e487b71000000000000000000000000000000000000000000000000000000006000525260246000fd5b825167ffffffffffffffff81116101885760a07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe082878a0101850301126101885760405160a0810181811067ffffffffffffffff821117610d3557604052610c68604083888b01010161121d565b81526060928383888b010101516020830152608083888b0101015167ffffffffffffffff81116101885760208601888b0185018201605f01121561018857878a0184018101604001518691908b878284898e6020610cc58561106e565b99610cd36040519b8c610f1f565b858b520195010101010111610188578b87610cf893888d602088019401010101610eb9565b604083015260a083888b010101519160028310156101885760c06020948594604097840152898c0101015160808201528152019301929050610a5d565b60418b7f4e487b71000000000000000000000000000000000000000000000000000000006000525260246000fd5b82610d976040519283927fe6ace38e00000000000000000000000000000000000000000000000000000000845283016110ef565b0390fd5b5060028114156109e2565b6021837f4e487b71000000000000000000000000000000000000000000000000000000006000525260246000fd5b826040517fc3b48cf1000000000000000000000000000000000000000000000000000000008152fd5b34610188576000600319360112610188576020606654604051908152f35b905034610188576000600319360112610188576040810181811067ffffffffffffffff821117610e8b576101ce9250604052601281527f53696d706c6551756f72756d41766174617200000000000000000000000000006020820152604051918291602083526020830190610edc565b6041837f4e487b71000000000000000000000000000000000000000000000000000000006000525260246000fd5b60005b838110610ecc5750506000910152565b8181015183820152602001610ebc565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f602093610f1881518092818752878088019101610eb9565b0116010190565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117610f6057604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361018857565b61010091906003190182136101885760405191820182811067ffffffffffffffff821117610f60576040528173ffffffffffffffffffffffffffffffffffffffff600435818116810361018857825263ffffffff90602435828116810361018857602084015260443590811681036101885760408301526064358181168103610188576060830152608435908116810361018857608082015260a43560038110156101885760a082015260c43560c082015260e060e435910152565b67ffffffffffffffff8111610f6057601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b81601f82011215610188578035906110bf8261106e565b926110cd6040519485610f1f565b8284526020838301011161018857816000926020809301838601378301015290565b9190602083019260078210156111025752565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff60335416330361115257565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6033549073ffffffffffffffffffffffffffffffffffffffff80911691827fffffffffffffffffffffffff0000000000000000000000000000000000000000821617603355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b519073ffffffffffffffffffffffffffffffffffffffff8216820361018857565b67ffffffffffffffff8111610f605760051b60200190565b1561125d57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461130e5760010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b80518210156113515760209160051b010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b91909260665490840180851161130e571015928361142f575b505060a0810180516003811015611102576002036113b957505050600690565b516003811015611102576001036113d1575050600490565b63ffffffff908160208201511643106000146113ef57505050600090565b6060810151821643101561140557505050600190565b6080015116431015611420571561141b57600290565b600190565b1561142a57600390565b600590565b119150388061139956fea164736f6c6343000812000a",
    "sourceMap": "490:4088:74:-:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;490:4088:74;;;;;;;;;;1649:45;490:4088;1649:45;490:4088;;;;:::i;:::-;;;;;;1649:45;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;-1:-1:-1;490:4088:74;;;;;;;;;;;3290:14:21;3336:34;;;;;;-1:-1:-1;3335:108:21;;;;-1:-1:-1;490:4088:74;;;;;;;;;;;;;;3551:65:21;;-1:-1:-1;490:4088:74;;;2086:96;;490:4088;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;2086:96;;;490:4088;2086:96;;490:4088;;;;;:::i;:::-;;;;;;;;;;;;;;;;;5355:69:21;490:4088:74;;;;;;5355:69:21;;;:::i;:::-;;:::i;:::-;1195:12:17;929:10:24;1195:12:17;:::i;:::-;929:10:24;490:4088:74;1513:6:17;490:4088:74;;1662:23:17;490:4088:74;;2409:22:17;;490:4088:74;;2503:8:17;;;:::i;:::-;5355:69:21;490:4088:74;;;;;;5355:69:21;:::i;:::-;989:13:110;;490:4088:74;;;984:95:110;490:4088:74;;2377:63;490:4088;;;2377:63;490:4088;5355:69:21;490:4088:74;;;;;;;5355:69:21;:::i;:::-;738:16:77;490:4088:74;;;2346:16;490:4088;;-1:-1:-1;;;;;;490:4088:74;;;;;;;;;;;2377:63;:::i;:::-;;;;3636:99:21;;984:95:110;490:4088:74;;;;;;;;;3636:99:21;3710:14;490:4088:74;;;;;;;;;;;3710:14:21;3636:99;;;;;;1024:3:110;490:4088:74;;1004:18:110;;;;;319:1:103;;;;;;;;;490:4088:74;319:1:103;;1043:6:110;319:1:103;;;;;;490:4088:74;;;;;;;;;;989:13:110;;490:4088:74;-1:-1:-1;;;490:4088:74;;;;;;;;1004:18:110;;;490:4088:74;;;-1:-1:-1;;;490:4088:74;;;;;;;;;;;;;;;;;;-1:-1:-1;;;490:4088:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3551:65:21;-1:-1:-1;;490:4088:74;;;;;3551:65:21;;;490:4088:74;;;-1:-1:-1;;;490:4088:74;;;;;;;;;;;;;;;;;;-1:-1:-1;;;490:4088:74;;;;;;;3335:108:21;3415:4;;1476:19:23;:23;3376:66:21;;3335:108;3376:66;490:4088:74;;;;;3425:17:21;3335:108;;3336:34;490:4088:74;;;;;3354:16:21;3336:34;;490:4088:74;-1:-1:-1;490:4088:74;;;1649:45;490:4088;;;-1:-1:-1;;490:4088:74;;;;-1:-1:-1;;;;;490:4088:74;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;490:4088:74;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;490:4088:74;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;490:4088:74;;;;;;;;;;;;;;;;;-1:-1:-1;;;490:4088:74;;;;;;;2673:187:17;2765:6;490:4088:74;;-1:-1:-1;;;;;490:4088:74;;;-1:-1:-1;;;;;;490:4088:74;;;;;;;;;;2813:40:17;-1:-1:-1;;2813:40:17;2673:187::o",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080806040526004908136101561001557600080fd5b60003560e01c9081630eb9b15a14610e1b575080631703a01814610dfd5780632b06df53146109655780636efd971c1461091e578063715018a61461089e578063776d1a01146108165780638da5cb5b146107e25780639e33d81114610759578063a4f9edbf14610314578063c1ba4e59146102c8578063d4b8399214610294578063d92d4ea0146101d2578063ea8f8c4b1461018d5763f2fde38b146100bb57600080fd5b34610188576020600319360112610188576100d4610f8f565b906100dd611131565b73ffffffffffffffffffffffffffffffffffffffff82161561010457610102826111b0565b005b6084906020604051917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b600080fd5b3461018857610160600319360112610188576101ce6101c26101ae36610fb2565b610144359061012435906101043590611380565b604051918291826110ef565b0390f35b50346101885760206003193601126101885773ffffffffffffffffffffffffffffffffffffffff610201610f8f565b610209611131565b16908115801561027d575b610255577fc3dc08a46232e8d0a95510120799f1e68e0aa28c88730b8b0127d5ff4565b4b060208380600052606582526001604060002055604051908152a1005b6040517fc3b48cf1000000000000000000000000000000000000000000000000000000008152fd5b508160005260656020526040600020541515610214565b3461018857600060031936011261018857602073ffffffffffffffffffffffffffffffffffffffff60675416604051908152f35b50346101885760206003193601126101885760207ff18f88786aae85a652aadb99a82462616489a33370c9bcc7b245906812ef7cd19135610307611131565b80606655604051908152a1005b5034610188576020806003193601126101885767ffffffffffffffff9180358381116101885761034790369083016110a8565b6000549160ff94858460081c16159283809461074d575b8015610737575b156106b45760019484867fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00831617600055610685575b508051810191608082888501940312610188576103b987830161121d565b6103c56040840161121d565b9160608401519081116101885783019284603f850112156101885788840151946103ee8661123e565b946103fc6040519687610f1f565b8686528a8601906040829860051b8201019283116101885760408c9101915b83831061066d5750505050608001519273ffffffffffffffffffffffffffffffffffffffff808093169316956104608b60005460081c1661045b81611256565b611256565b610469336111b0565b610471611131565b83156105ea57506104838392936111b0565b6104938a60005460081c16611256565b876000815b6105a9575b50506104b06000549a8b60081c16611256565b83606655857fffffffffffffffffffffffff00000000000000000000000000000000000000006067541617606755604051956080870192875289870152608060408701525180915260a0850193916000905b888a848410610591578c918a7f683bbcd71b259e230416d974e6911d22117ec0de423b17abfcb832bafbd244bf8b808c8c60608301520390a161054157005b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff7f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989316600055604051908152a1005b85518316885296870196909401939190910190610502565b82949394518110156105e25780846105c46105d9938661133d565b511660005260658c52826040600020556112e1565b81949394610498565b93929361049d565b6084908a604051917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b81906106788461121d565b8152019101908b9061041b565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000016610101176000553861039b565b60848387604051917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152fd5b50303b1580156103655750600187861614610365565b5060018786161061035e565b50346101885760206003193601126101885773ffffffffffffffffffffffffffffffffffffffff610788610f8f565b610790611131565b169081600052606560205260406000205415610255577f665604bfe8ee87044ba1f1fd2fb47fe92983c9e187acbb442debf97d3e581921602083806000526065825260006040812055604051908152a1005b3461018857600060031936011261018857602073ffffffffffffffffffffffffffffffffffffffff60335416604051908152f35b346101885760206003193601126101885773ffffffffffffffffffffffffffffffffffffffff610844610f8f565b61084c611131565b16807fffffffffffffffffffffffff000000000000000000000000000000000000000060675416176067557f3bfb4bbf112628248058745a3c57e35b13369386e474b8e56c552f3063a4a196600080a2005b34610188576000600319360112610188576108b7611131565b600073ffffffffffffffffffffffffffffffffffffffff6033547fffffffffffffffffffffffff00000000000000000000000000000000000000008116603355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346101885760206003193601126101885773ffffffffffffffffffffffffffffffffffffffff61094c610f8f565b1660005260656020526020604060002054604051908152f35b5034610188576101806003193601126101885761098136610fb2565b6101643567ffffffffffffffff8111610188576109a190369084016110a8565b9033600052606560205260406000205415610dd4576109ce90610144359061012435906101043590611380565b6007811015610da657600381141580610d9b575b610d635750805181019060208183031261018857602081015167ffffffffffffffff81116101885760208301603f828401011215610188576020818301015190610a2b8261123e565b93610a396040519586610f1f565b82855260208501906020810160408560051b85880101011161018857604083860101915b60408560051b85880101018310610bfa57878760005b81518110156101025773ffffffffffffffffffffffffffffffffffffffff806067541690610aa1838561133d565b515116906020610ab1848661133d565b510151906040610ac1858761133d565b510151926060610ad1868861133d565b5101516002811015610bcc57906000886020959493610b2f604051988997889687957f468721a70000000000000000000000000000000000000000000000000000000087528601526024850152608060448501526084840190610edc565b90606483015203925af1908115610bc057600091610b85575b5015610b5c57610b57906112e1565b610a73565b826040517facfdb444000000000000000000000000000000000000000000000000000000008152fd5b90506020813d602011610bb8575b81610ba060209383610f1f565b81010312610188575180151581036101885784610b48565b3d9150610b93565b6040513d6000823e3d90fd5b6021887f4e487b71000000000000000000000000000000000000000000000000000000006000525260246000fd5b825167ffffffffffffffff81116101885760a07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe082878a0101850301126101885760405160a0810181811067ffffffffffffffff821117610d3557604052610c68604083888b01010161121d565b81526060928383888b010101516020830152608083888b0101015167ffffffffffffffff81116101885760208601888b0185018201605f01121561018857878a0184018101604001518691908b878284898e6020610cc58561106e565b99610cd36040519b8c610f1f565b858b520195010101010111610188578b87610cf893888d602088019401010101610eb9565b604083015260a083888b010101519160028310156101885760c06020948594604097840152898c0101015160808201528152019301929050610a5d565b60418b7f4e487b71000000000000000000000000000000000000000000000000000000006000525260246000fd5b82610d976040519283927fe6ace38e00000000000000000000000000000000000000000000000000000000845283016110ef565b0390fd5b5060028114156109e2565b6021837f4e487b71000000000000000000000000000000000000000000000000000000006000525260246000fd5b826040517fc3b48cf1000000000000000000000000000000000000000000000000000000008152fd5b34610188576000600319360112610188576020606654604051908152f35b905034610188576000600319360112610188576040810181811067ffffffffffffffff821117610e8b576101ce9250604052601281527f53696d706c6551756f72756d41766174617200000000000000000000000000006020820152604051918291602083526020830190610edc565b6041837f4e487b71000000000000000000000000000000000000000000000000000000006000525260246000fd5b60005b838110610ecc5750506000910152565b8181015183820152602001610ebc565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f602093610f1881518092818752878088019101610eb9565b0116010190565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117610f6057604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361018857565b61010091906003190182136101885760405191820182811067ffffffffffffffff821117610f60576040528173ffffffffffffffffffffffffffffffffffffffff600435818116810361018857825263ffffffff90602435828116810361018857602084015260443590811681036101885760408301526064358181168103610188576060830152608435908116810361018857608082015260a43560038110156101885760a082015260c43560c082015260e060e435910152565b67ffffffffffffffff8111610f6057601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b81601f82011215610188578035906110bf8261106e565b926110cd6040519485610f1f565b8284526020838301011161018857816000926020809301838601378301015290565b9190602083019260078210156111025752565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff60335416330361115257565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6033549073ffffffffffffffffffffffffffffffffffffffff80911691827fffffffffffffffffffffffff0000000000000000000000000000000000000000821617603355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b519073ffffffffffffffffffffffffffffffffffffffff8216820361018857565b67ffffffffffffffff8111610f605760051b60200190565b1561125d57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461130e5760010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b80518210156113515760209160051b010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b91909260665490840180851161130e571015928361142f575b505060a0810180516003811015611102576002036113b957505050600690565b516003811015611102576001036113d1575050600490565b63ffffffff908160208201511643106000146113ef57505050600090565b6060810151821643101561140557505050600190565b6080015116431015611420571561141b57600290565b600190565b1561142a57600390565b600590565b119150388061139956fea164736f6c6343000812000a",
    "sourceMap": "490:4088:74:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;490:4088:74;;;;;;;:::i;:::-;1303:62:17;;;:::i;:::-;490:4088:74;;;2409:22:17;490:4088:74;;2503:8:17;;;:::i;:::-;490:4088:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;490:4088:74;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;490:4088:74;;;;;;;;:::i;:::-;1303:62:17;;:::i;:::-;490:4088:74;1235:19:110;;;:47;;;;490:4088:74;1231:74:110;;1350:19;490:4088:74;;;;;1315:6:110;490:4088:74;;319:1:103;490:4088:74;;;;;;;;;1350:19:110;490:4088:74;1231:74:110;490:4088:74;;1291:14:110;;;;1235:47;490:4088:74;;;;1259:6:110;490:4088:74;;;;;;1259:22:110;;1235:47;;490:4088:74;;;;;-1:-1:-1;;490:4088:74;;;;;;;1192:21;490:4088;;;;;;;;;;;;;;-1:-1:-1;;490:4088:74;;;;;;863:22:77;490:4088:74;;1303:62:17;;:::i;:::-;490:4088:74;832:16:77;490:4088:74;;;;;;863:22:77;490:4088:74;;;;;;;;-1:-1:-1;;490:4088:74;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;3290:14:21;3336:34;;;;;;490:4088:74;3335:108:21;;;;490:4088:74;;;;3540:1:21;490:4088:74;;;;;;;;;3551:65:21;;490:4088:74;;;;2086:96;;;490:4088;2086:96;;;;490:4088;;;;;;2086:96;;;490:4088;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5355:69:21;490:4088:74;;;;;;5355:69:21;;;:::i;:::-;;:::i;:::-;1195:12:17;929:10:24;1195:12:17;:::i;:::-;1303:62;;:::i;:::-;2409:22;;490:4088:74;;2503:8:17;;;;;;:::i;:::-;5355:69:21;490:4088:74;;;;;;5355:69:21;:::i;:::-;989:13:110;490:4088:74;989:13:110;3540:1:21;;;984:95:110;490:4088:74;;5355:69:21;490:4088:74;;;;;;;5355:69:21;:::i;:::-;490:4088:74;738:16:77;490:4088:74;;;2346:16;490:4088;;;2346:16;490:4088;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2377:63;490:4088;;;;;;;;2377:63;;;3636:99:21;;490:4088:74;3636:99:21;490:4088:74;3710:14:21;490:4088:74;;;;;;;;;3710:14:21;490:4088:74;;;;;;;;;;;;;;;;;;;;;;;1024:3:110;490:4088:74;;;;;1004:18:110;;;;;1050:10;;;1024:3;1050:10;;;:::i;:::-;490:4088:74;;;;1043:6:110;490:4088:74;;;;;;;1024:3:110;:::i;:::-;989:13;;;;;;1004:18;;;;;;490:4088:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;3551:65:21;490:4088:74;;;;;;3551:65:21;;;490:4088:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3335:108:21;3415:4;;1476:19:23;:23;3376:66:21;;3335:108;3376:66;490:4088:74;3441:1:21;490:4088:74;;;3425:17:21;3335:108;;3336:34;490:4088:74;3369:1:21;490:4088:74;;;3354:16:21;3336:34;;490:4088:74;;;;;;-1:-1:-1;;490:4088:74;;;;;;;;:::i;:::-;1303:62:17;;:::i;:::-;490:4088:74;;;;;1528:6:110;490:4088:74;;;;;;1528:22:110;1524:49;;1619:20;490:4088:74;;;;;1528:6:110;490:4088:74;;;;;;;;;;;;1619:20:110;490:4088:74;;;;;;-1:-1:-1;;490:4088:74;;;;;;;1513:6:17;490:4088:74;;;;;;;;;;;;;-1:-1:-1;;490:4088:74;;;;;;;;:::i;:::-;1303:62:17;;:::i;:::-;490:4088:74;;;2606:16;490:4088;;;2606:16;490:4088;2637:18;490:4088;2637:18;;490:4088;;;;;;-1:-1:-1;;490:4088:74;;;;;1303:62:17;;:::i;:::-;490:4088:74;;2765:6:17;490:4088:74;;;;2765:6:17;490:4088:74;;2813:40:17;;;;490:4088:74;;;;;;-1:-1:-1;;490:4088:74;;;;;;;;:::i;:::-;;;;1882:6:110;490:4088:74;;;;;;;;;;;;;;;;;;;-1:-1:-1;;490:4088:74;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;1950:10:110;;490:4088:74;;1943:6:110;490:4088:74;;;;;;1943:27:110;1939:54;;3382:65:74;490:4088;;;;;;;;;3382:65;;:::i;:::-;490:4088;;;;;;3480:23;3462:41;;;3461:102;;;490:4088;3457:177;;490:4088;;;3919:40;;490:4088;;;;;;;;;3919:40;;490:4088;;;;;;;3919:40;;490:4088;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;3919:40;490:4088;3919:40;;490:4088;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3974:13;;490:4088;4014:3;490:4088;;3989:23;;;;;490:4088;;4056:6;490:4088;;4107:15;;;;;:::i;:::-;;490:4088;;4143:15;490:4088;4143:15;;;;:::i;:::-;;:21;490:4088;4182:15;490:4088;4182:15;;;;:::i;:::-;;:20;;4220:15;490:4088;4220:15;;;;:::i;:::-;;:25;490:4088;;;;;;;;;;;;;;;;;4048:211;;;;;;;490:4088;4048:211;;;;490:4088;;;;;;;;;;;;;;;:::i;:::-;;;;;;4048:211;;;;;;;;;490:4088;4048:211;;;4014:3;4352:8;;4348:38;;4014:3;;;:::i;:::-;3974:13;;4348:38;490:4088;;;4369:17;;;;4048:211;;;490:4088;4048:211;;490:4088;4048:211;;;;;;490:4088;4048:211;;;:::i;:::-;;;490:4088;;;;;;;;;;;;4048:211;;;;;;-1:-1:-1;4048:211:74;;;490:4088;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3919:40;;490:4088;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;3919:40;490:4088;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3457:177;490:4088;3586:37;490:4088;;3586:37;;;;;;;;;:::i;:::-;;;;3461:102;3509:53;3527:35;3509:53;;;3461:102;;490:4088;;;;;;;;;;1939:54:110;490:4088:74;;;1979:14:110;;;;490:4088:74;;;;;-1:-1:-1;;490:4088:74;;;;;;533:21:77;490:4088:74;;;;;;;;;;;;;;-1:-1:-1;;490:4088:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;490:4088:74;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;490:4088:74;;-1:-1:-1;490:4088:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;490:4088:74;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;490:4088:74;;;;;-1:-1:-1;490:4088:74;1599:130:17;490:4088:74;1513:6:17;490:4088:74;;929:10:24;1662:23:17;490:4088:74;;1599:130:17:o;490:4088:74:-;;;;;;;;;;;;;;;;;;;;;;;2673:187:17;2765:6;490:4088:74;;;;;;;;;;;;2765:6:17;490:4088:74;;2813:40:17;-1:-1:-1;2813:40:17;;2673:187::o;490:4088:74:-;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;1596:1168:77;;;;1836:6;490:4088:74;;;;;;;;;2955:21:77;;1821:84;;;;1596:1168;1919:27;;;;;490:4088:74;;;;;;;;1950:28:77;1919:59;1950:28;;1994:31;;;2001:24;1994:31;:::o;1915:843::-;490:4088:74;;;;;;;;2046:58:77;490:4088:74;;2120:30:77;;2127:23;2120:30;:::o;2042:716::-;490:4088:74;2186:25:77;;;;;490:4088:74;;2171:12:77;:40;2167:591;490:4088:74;;;2227:33:77;;;-1:-1:-1;2227:33:77;:::o;2167:591::-;2296:26;;;490:4088:74;;;2171:12:77;2281:41;490:4088:74;;;2338:34:77;;;490:4088:74;2338:34:77;:::o;2277:481::-;2408:26;;490:4088:74;;2171:12:77;2393:41;490:4088:74;;;2450:162:77;;;1950:28;2482:42;:::o;2450:162::-;490:4088:74;2563:34:77;:::o;2389:369::-;2628:130;;;490:4088:74;2656:30:77;:::o;2628:130::-;2724:23;2717:30;:::o;1821:84::-;3097:25;;-1:-1:-1;1821:84:77;;;",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "disableSpace(address)": "9e33d811",
    "enableSpace(address)": "d92d4ea0",
    "execute((address,uint32,address,uint32,uint32,uint8,bytes32,uint256),uint256,uint256,uint256,bytes)": "2b06df53",
    "getProposalStatus((address,uint32,address,uint32,uint32,uint8,bytes32,uint256),uint256,uint256,uint256)": "ea8f8c4b",
    "getStrategyType()": "0eb9b15a",
    "isSpaceEnabled(address)": "6efd971c",
    "owner()": "8da5cb5b",
    "quorum()": "1703a018",
    "renounceOwnership()": "715018a6",
    "setQuorum(uint256)": "c1ba4e59",
    "setTarget(address)": "776d1a01",
    "setUp(bytes)": "a4f9edbf",
    "target()": "d4b83992",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_spaces\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_quorum\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ExecutionFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"enum ProposalStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"name\":\"InvalidProposalStatus\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSpace\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"_spaces\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_quorum\",\"type\":\"uint256\"}],\"name\":\"AvatarExecutionStrategySetUp\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newQuorum\",\"type\":\"uint256\"}],\"name\":\"QuorumUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"space\",\"type\":\"address\"}],\"name\":\"SpaceDisabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"space\",\"type\":\"address\"}],\"name\":\"SpaceEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newTarget\",\"type\":\"address\"}],\"name\":\"TargetSet\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"space\",\"type\":\"address\"}],\"name\":\"disableSpace\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"space\",\"type\":\"address\"}],\"name\":\"enableSpace\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"startBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"contract IExecutionStrategy\",\"name\":\"executionStrategy\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"minEndBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"maxEndBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"enum FinalizationStatus\",\"name\":\"finalizationStatus\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"executionPayloadHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"activeVotingStrategies\",\"type\":\"uint256\"}],\"internalType\":\"struct Proposal\",\"name\":\"proposal\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"votesFor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votesAgainst\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votesAbstain\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"startBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"contract IExecutionStrategy\",\"name\":\"executionStrategy\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"minEndBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"maxEndBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"enum FinalizationStatus\",\"name\":\"finalizationStatus\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"executionPayloadHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"activeVotingStrategies\",\"type\":\"uint256\"}],\"internalType\":\"struct Proposal\",\"name\":\"proposal\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"votesFor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votesAgainst\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votesAbstain\",\"type\":\"uint256\"}],\"name\":\"getProposalStatus\",\"outputs\":[{\"internalType\":\"enum ProposalStatus\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStrategyType\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"space\",\"type\":\"address\"}],\"name\":\"isSpaceEnabled\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quorum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_quorum\",\"type\":\"uint256\"}],\"name\":\"setQuorum\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"}],\"name\":\"setTarget\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"initParams\",\"type\":\"bytes\"}],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"target\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An Avatar contract is any contract that implements the IAvatar interface, eg a Gnosis Safe.\",\"errors\":{\"InvalidProposalStatus(uint8)\":[{\"params\":{\"status\":\"The current status of the proposal.\"}}]},\"events\":{\"AvatarExecutionStrategySetUp(address,address,address[],uint256)\":{\"params\":{\"_owner\":\"Address of the owner of the strategy.\",\"_spaces\":\"Array of whitelisted space contracts.\",\"_target\":\"Address of the avatar that this module will pass transactions to.\"}},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"TargetSet(address)\":{\"params\":{\"newTarget\":\"The new target address.\"}}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_owner\":\"Address of the owner of this contract.\",\"_quorum\":\"The quorum required to execute a proposal.\",\"_spaces\":\"Array of whitelisted space contracts.\",\"_target\":\"Address of the avatar that this module will pass transactions to.\"}},\"disableSpace(address)\":{\"params\":{\"space\":\"Address of the space.\"}},\"enableSpace(address)\":{\"params\":{\"space\":\"Address of the space.\"}},\"execute((address,uint32,address,uint32,uint32,uint8,bytes32,uint256),uint256,uint256,uint256,bytes)\":{\"params\":{\"payload\":\"The encoded transactions to execute.\",\"proposal\":\"The proposal to execute.\",\"votesAbstain\":\"The number of abstaining votes.\",\"votesAgainst\":\"The number of votes against the proposal.\",\"votesFor\":\"The number of votes in favor of the proposal.\"}},\"getProposalStatus((address,uint32,address,uint32,uint32,uint8,bytes32,uint256),uint256,uint256,uint256)\":{\"params\":{\"proposal\":\"The proposal struct.\",\"votesAbstain\":\"The number of votes abstaining from the proposal.\",\"votesAgainst\":\"The number of votes against the proposal.\",\"votesFor\":\"The number of votes for the proposal.\"}},\"isSpaceEnabled(address)\":{\"params\":{\"space\":\"Address of the space.\"},\"returns\":{\"_0\":\"uint256 whether the space is enabled.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setTarget(address)\":{\"params\":{\"_target\":\"The new target address.\"}},\"setUp(bytes)\":{\"params\":{\"initParams\":\"ABI encoded parameters, in the same order as the constructor.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Avatar Execution Strategy\",\"version\":1},\"userdoc\":{\"errors\":{\"ExecutionFailed()\":[{\"notice\":\"Thrown when the execution of a proposal fails.\"}],\"InvalidProposalStatus(uint8)\":[{\"notice\":\"Thrown when the current status of a proposal does not allow the desired action.\"}],\"InvalidSpace()\":[{\"notice\":\"Thrown if a space is not in the whitelist.\"}]},\"events\":{\"AvatarExecutionStrategySetUp(address,address,address[],uint256)\":{\"notice\":\"Emitted when a new Avatar Execution Strategy is initialized.\"},\"SpaceDisabled(address)\":{\"notice\":\"Emitted when a space is disabled.\"},\"SpaceEnabled(address)\":{\"notice\":\"Emitted when a space is enabled.\"},\"TargetSet(address)\":{\"notice\":\"Emitted each time the Target is set.\"}},\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Constructor\"},\"disableSpace(address)\":{\"notice\":\"Disable a space.\"},\"enableSpace(address)\":{\"notice\":\"Enable a space.\"},\"execute((address,uint32,address,uint32,uint32,uint8,bytes32,uint256),uint256,uint256,uint256,bytes)\":{\"notice\":\"Executes a proposal from the avatar contract if the proposal outcome is accepted.         Must be called by a whitelisted space contract.\"},\"getProposalStatus((address,uint32,address,uint32,uint32,uint8,bytes32,uint256),uint256,uint256,uint256)\":{\"notice\":\"Returns the status of a proposal that uses a simple quorum.        A proposal is accepted if the for votes exceeds the against votes        and a quorum of total votes (for + against + abstain) is reached.\"},\"getStrategyType()\":{\"notice\":\"Returns the trategy type string.\"},\"isSpaceEnabled(address)\":{\"notice\":\"Check if a space is enabled.\"},\"quorum()\":{\"notice\":\"The quorum required to execute a proposal using this strategy.\"},\"setTarget(address)\":{\"notice\":\"Sets the target address.\"},\"setUp(bytes)\":{\"notice\":\"Initialization function, should be called immediately after deploying a new proxy to this contract.\"},\"target()\":{\"notice\":\"Address of the avatar that this module will pass transactions to.\"}},\"notice\":\"Used to execute proposal transactions from an Avatar contract.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/execution-strategies/AvatarExecutionStrategy.sol\":\"AvatarExecutionStrategy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[\":@gnosis.pm/safe-contracts/=lib/safe-contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@prb/test/=lib/prb-test/src/\",\":@zodiac/=lib/zodiac/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":prb-test/=lib/prb-test/src/\",\":safe-contracts/=lib/safe-contracts/contracts/\",\":zodiac/=lib/zodiac/contracts/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xe798cadb41e2da274913e4b3183a80f50fb057a42238fe8467e077268100ec27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://899f850f7df5a270bccfb765d70069959ca1c20d3a7381c1c3bda8a3ffee1935\",\"dweb:/ipfs/QmVdnAqwyX2L3nX2HDA5WKGtVBFyH1nKE9A1k7fZnPBkhP\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/safe-contracts/contracts/common/Enum.sol\":{\"keccak256\":\"0x473e45b1a5cc47be494b0e123c9127f0c11c1e0992a321ae5a644c0bfdb2c14f\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://948e6d5a8bd7377f7795b6e28584eab9be5c0a8db240bf5e606744a175238c3d\",\"dweb:/ipfs/QmQQaUmQfpuejV41jbxKSTgEBYYCcVTjCsDMgf2htgz6ej\"]},\"lib/zodiac/contracts/interfaces/IAvatar.sol\":{\"keccak256\":\"0xcd5508ffe596eef8fbccfd5fc4f10a34397773547ce64e212d48b5212865ec1f\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://1655ba8b760132ebd702cc806fcdad50a44d320fbeca14be00e35b0171bd35cf\",\"dweb:/ipfs/QmcbB5HpCoEQCTHKWxHS3HpFmgaB4AcZxZYtvQk2QEyvN2\"]},\"src/execution-strategies/AvatarExecutionStrategy.sol\":{\"keccak256\":\"0xea7c1bd599ce39a20d5ee152512707e3c75e52048a6a613d20e4e67debe01e33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0cdc8ab359bf72ed33e58dcdf5ebe7669fb4e0263ab1835c82c641d52fe40af4\",\"dweb:/ipfs/QmX9fwKgDzaikVs7jqSGjoHL4Unwb7JC7XB9wTfB5etah3\"]},\"src/execution-strategies/SimpleQuorumExecutionStrategy.sol\":{\"keccak256\":\"0xcff20e2becd1d1b3e7ab571891250c13ce862b283bef137f80681c4e3785a3d4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6debb43dfb69f189f7ed7b9279997d6f936f1a503b174ab34c2afd474ea407a\",\"dweb:/ipfs/QmVEDuPboWDaeeivfCn1i3EwFupDUtsHDQbEfeUs2ni1zS\"]},\"src/interfaces/IExecutionStrategy.sol\":{\"keccak256\":\"0x8caef430ce09dd42c4b90ff62b18090c12bcb2dcf19294e4316bd2cc2bfffef9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d20584f72310a2607990eb5c6f307e81c606d38b4a95b91d2f9427b068e51050\",\"dweb:/ipfs/QmZaDzFnBq7qXy45YmBbqcay7DQZo8xfvTLriMEKocesK8\"]},\"src/interfaces/execution-strategies/IExecutionStrategyErrors.sol\":{\"keccak256\":\"0x8a1c904a4f3573013dbe8b55e3322dc929c9d6e56dc4cfe7a8e7866834661430\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://358d063db15582f772bd49400a90b5087fa6768068581494f87a5ba1eb9ef20a\",\"dweb:/ipfs/QmSovbYrxxMXvyhWTfAuZYcUDhJ1VRZca4XjiE1e8vv9Yb\"]},\"src/types.sol\":{\"keccak256\":\"0xcdc5465d75fd7bdbde15892a0ef01f16fb8ab48907e4183acb860af91c93fee4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc76c16a6ecc59eb6dc5c53d032d691f8bc08b417d41ef87960a54713bbd2e7f\",\"dweb:/ipfs/QmZbvxxmZEyus5hX5ThYD6qDuaTjpWR8FLZLGTEDKKBDsb\"]},\"src/utils/SpaceManager.sol\":{\"keccak256\":\"0x49b571f018ca9b35a5714ca4cf78c59aab4d1cedfe25748ca71156fa76318a4c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3709747d17e7cf86261a1b1174d0ee6e485b3dfeaceb1de6d958c7f1307ac61b\",\"dweb:/ipfs/QmdfwyDix3o3ebPqnwbVJb8pEVcZknDAaaAEUxQoe4N7W3\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.18+commit.87f61d96"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_target",
              "type": "address"
            },
            {
              "internalType": "address[]",
              "name": "_spaces",
              "type": "address[]"
            },
            {
              "internalType": "uint256",
              "name": "_quorum",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ExecutionFailed"
        },
        {
          "inputs": [
            {
              "internalType": "enum ProposalStatus",
              "name": "status",
              "type": "uint8"
            }
          ],
          "type": "error",
          "name": "InvalidProposalStatus"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidSpace"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "_target",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "_spaces",
              "type": "address[]",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_quorum",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AvatarExecutionStrategySetUp",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newQuorum",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "QuorumUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "space",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SpaceDisabled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "space",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SpaceEnabled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newTarget",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "TargetSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "space",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "disableSpace"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "space",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "enableSpace"
        },
        {
          "inputs": [
            {
              "internalType": "struct Proposal",
              "name": "proposal",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "author",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "startBlockNumber",
                  "type": "uint32"
                },
                {
                  "internalType": "contract IExecutionStrategy",
                  "name": "executionStrategy",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "minEndBlockNumber",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "maxEndBlockNumber",
                  "type": "uint32"
                },
                {
                  "internalType": "enum FinalizationStatus",
                  "name": "finalizationStatus",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "executionPayloadHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "activeVotingStrategies",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "votesFor",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "votesAgainst",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "votesAbstain",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "payload",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "execute"
        },
        {
          "inputs": [
            {
              "internalType": "struct Proposal",
              "name": "proposal",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "author",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "startBlockNumber",
                  "type": "uint32"
                },
                {
                  "internalType": "contract IExecutionStrategy",
                  "name": "executionStrategy",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "minEndBlockNumber",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "maxEndBlockNumber",
                  "type": "uint32"
                },
                {
                  "internalType": "enum FinalizationStatus",
                  "name": "finalizationStatus",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "executionPayloadHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "activeVotingStrategies",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "votesFor",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "votesAgainst",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "votesAbstain",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getProposalStatus",
          "outputs": [
            {
              "internalType": "enum ProposalStatus",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "getStrategyType",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "space",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isSpaceEnabled",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "quorum",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_quorum",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setQuorum"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_target",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setTarget"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "initParams",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "target",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "constructor": {
            "params": {
              "_owner": "Address of the owner of this contract.",
              "_quorum": "The quorum required to execute a proposal.",
              "_spaces": "Array of whitelisted space contracts.",
              "_target": "Address of the avatar that this module will pass transactions to."
            }
          },
          "disableSpace(address)": {
            "params": {
              "space": "Address of the space."
            }
          },
          "enableSpace(address)": {
            "params": {
              "space": "Address of the space."
            }
          },
          "execute((address,uint32,address,uint32,uint32,uint8,bytes32,uint256),uint256,uint256,uint256,bytes)": {
            "params": {
              "payload": "The encoded transactions to execute.",
              "proposal": "The proposal to execute.",
              "votesAbstain": "The number of abstaining votes.",
              "votesAgainst": "The number of votes against the proposal.",
              "votesFor": "The number of votes in favor of the proposal."
            }
          },
          "getProposalStatus((address,uint32,address,uint32,uint32,uint8,bytes32,uint256),uint256,uint256,uint256)": {
            "params": {
              "proposal": "The proposal struct.",
              "votesAbstain": "The number of votes abstaining from the proposal.",
              "votesAgainst": "The number of votes against the proposal.",
              "votesFor": "The number of votes for the proposal."
            }
          },
          "isSpaceEnabled(address)": {
            "params": {
              "space": "Address of the space."
            },
            "returns": {
              "_0": "uint256 whether the space is enabled."
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "setTarget(address)": {
            "params": {
              "_target": "The new target address."
            }
          },
          "setUp(bytes)": {
            "params": {
              "initParams": "ABI encoded parameters, in the same order as the constructor."
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "constructor": {
            "notice": "Constructor"
          },
          "disableSpace(address)": {
            "notice": "Disable a space."
          },
          "enableSpace(address)": {
            "notice": "Enable a space."
          },
          "execute((address,uint32,address,uint32,uint32,uint8,bytes32,uint256),uint256,uint256,uint256,bytes)": {
            "notice": "Executes a proposal from the avatar contract if the proposal outcome is accepted.         Must be called by a whitelisted space contract."
          },
          "getProposalStatus((address,uint32,address,uint32,uint32,uint8,bytes32,uint256),uint256,uint256,uint256)": {
            "notice": "Returns the status of a proposal that uses a simple quorum.        A proposal is accepted if the for votes exceeds the against votes        and a quorum of total votes (for + against + abstain) is reached."
          },
          "getStrategyType()": {
            "notice": "Returns the trategy type string."
          },
          "isSpaceEnabled(address)": {
            "notice": "Check if a space is enabled."
          },
          "quorum()": {
            "notice": "The quorum required to execute a proposal using this strategy."
          },
          "setTarget(address)": {
            "notice": "Sets the target address."
          },
          "setUp(bytes)": {
            "notice": "Initialization function, should be called immediately after deploying a new proxy to this contract."
          },
          "target()": {
            "notice": "Address of the avatar that this module will pass transactions to."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@gnosis.pm/safe-contracts/=lib/safe-contracts/",
        ":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        ":@prb/test/=lib/prb-test/src/",
        ":@zodiac/=lib/zodiac/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-gas-snapshot/=lib/forge-gas-snapshot/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":prb-test/=lib/prb-test/src/",
        ":safe-contracts/=lib/safe-contracts/contracts/",
        ":zodiac/=lib/zodiac/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 10000
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "src/execution-strategies/AvatarExecutionStrategy.sol": "AvatarExecutionStrategy"
      },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888",
        "urls": [
          "bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a",
          "dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0xe798cadb41e2da274913e4b3183a80f50fb057a42238fe8467e077268100ec27",
        "urls": [
          "bzz-raw://899f850f7df5a270bccfb765d70069959ca1c20d3a7381c1c3bda8a3ffee1935",
          "dweb:/ipfs/QmVdnAqwyX2L3nX2HDA5WKGtVBFyH1nKE9A1k7fZnPBkhP"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183",
        "urls": [
          "bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06",
          "dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/safe-contracts/contracts/common/Enum.sol": {
        "keccak256": "0x473e45b1a5cc47be494b0e123c9127f0c11c1e0992a321ae5a644c0bfdb2c14f",
        "urls": [
          "bzz-raw://948e6d5a8bd7377f7795b6e28584eab9be5c0a8db240bf5e606744a175238c3d",
          "dweb:/ipfs/QmQQaUmQfpuejV41jbxKSTgEBYYCcVTjCsDMgf2htgz6ej"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/zodiac/contracts/interfaces/IAvatar.sol": {
        "keccak256": "0xcd5508ffe596eef8fbccfd5fc4f10a34397773547ce64e212d48b5212865ec1f",
        "urls": [
          "bzz-raw://1655ba8b760132ebd702cc806fcdad50a44d320fbeca14be00e35b0171bd35cf",
          "dweb:/ipfs/QmcbB5HpCoEQCTHKWxHS3HpFmgaB4AcZxZYtvQk2QEyvN2"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/execution-strategies/AvatarExecutionStrategy.sol": {
        "keccak256": "0xea7c1bd599ce39a20d5ee152512707e3c75e52048a6a613d20e4e67debe01e33",
        "urls": [
          "bzz-raw://0cdc8ab359bf72ed33e58dcdf5ebe7669fb4e0263ab1835c82c641d52fe40af4",
          "dweb:/ipfs/QmX9fwKgDzaikVs7jqSGjoHL4Unwb7JC7XB9wTfB5etah3"
        ],
        "license": "MIT"
      },
      "src/execution-strategies/SimpleQuorumExecutionStrategy.sol": {
        "keccak256": "0xcff20e2becd1d1b3e7ab571891250c13ce862b283bef137f80681c4e3785a3d4",
        "urls": [
          "bzz-raw://a6debb43dfb69f189f7ed7b9279997d6f936f1a503b174ab34c2afd474ea407a",
          "dweb:/ipfs/QmVEDuPboWDaeeivfCn1i3EwFupDUtsHDQbEfeUs2ni1zS"
        ],
        "license": "MIT"
      },
      "src/interfaces/IExecutionStrategy.sol": {
        "keccak256": "0x8caef430ce09dd42c4b90ff62b18090c12bcb2dcf19294e4316bd2cc2bfffef9",
        "urls": [
          "bzz-raw://d20584f72310a2607990eb5c6f307e81c606d38b4a95b91d2f9427b068e51050",
          "dweb:/ipfs/QmZaDzFnBq7qXy45YmBbqcay7DQZo8xfvTLriMEKocesK8"
        ],
        "license": "MIT"
      },
      "src/interfaces/execution-strategies/IExecutionStrategyErrors.sol": {
        "keccak256": "0x8a1c904a4f3573013dbe8b55e3322dc929c9d6e56dc4cfe7a8e7866834661430",
        "urls": [
          "bzz-raw://358d063db15582f772bd49400a90b5087fa6768068581494f87a5ba1eb9ef20a",
          "dweb:/ipfs/QmSovbYrxxMXvyhWTfAuZYcUDhJ1VRZca4XjiE1e8vv9Yb"
        ],
        "license": "MIT"
      },
      "src/types.sol": {
        "keccak256": "0xcdc5465d75fd7bdbde15892a0ef01f16fb8ab48907e4183acb860af91c93fee4",
        "urls": [
          "bzz-raw://bc76c16a6ecc59eb6dc5c53d032d691f8bc08b417d41ef87960a54713bbd2e7f",
          "dweb:/ipfs/QmZbvxxmZEyus5hX5ThYD6qDuaTjpWR8FLZLGTEDKKBDsb"
        ],
        "license": "MIT"
      },
      "src/utils/SpaceManager.sol": {
        "keccak256": "0x49b571f018ca9b35a5714ca4cf78c59aab4d1cedfe25748ca71156fa76318a4c",
        "urls": [
          "bzz-raw://3709747d17e7cf86261a1b1174d0ee6e485b3dfeaceb1de6d958c7f1307ac61b",
          "dweb:/ipfs/QmdfwyDix3o3ebPqnwbVJb8pEVcZknDAaaAEUxQoe4N7W3"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/execution-strategies/AvatarExecutionStrategy.sol",
    "id": 38261,
    "exportedSymbols": {
      "AvatarExecutionStrategy": [38260],
      "IAvatar": [34748],
      "MetaTransaction": [42449],
      "Proposal": [42411],
      "ProposalStatus": [42433],
      "SimpleQuorumExecutionStrategy": [38896]
    },
    "nodeType": "SourceUnit",
    "src": "33:4546:74",
    "nodes": [
      {
        "id": 38001,
        "nodeType": "PragmaDirective",
        "src": "33:24:74",
        "nodes": [],
        "literals": ["solidity", "^", "0.8", ".18"]
      },
      {
        "id": 38003,
        "nodeType": "ImportDirective",
        "src": "59:57:74",
        "nodes": [],
        "absolutePath": "lib/zodiac/contracts/interfaces/IAvatar.sol",
        "file": "@zodiac/interfaces/IAvatar.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38261,
        "sourceUnit": 34749,
        "symbolAliases": [
          {
            "foreign": {
              "id": 38002,
              "name": "IAvatar",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 34748,
              "src": "68:7:74",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 38005,
        "nodeType": "ImportDirective",
        "src": "117:84:74",
        "nodes": [],
        "absolutePath": "src/execution-strategies/SimpleQuorumExecutionStrategy.sol",
        "file": "./SimpleQuorumExecutionStrategy.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38261,
        "sourceUnit": 38897,
        "symbolAliases": [
          {
            "foreign": {
              "id": 38004,
              "name": "SimpleQuorumExecutionStrategy",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 38896,
              "src": "126:29:74",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 38009,
        "nodeType": "ImportDirective",
        "src": "202:73:74",
        "nodes": [],
        "absolutePath": "src/types.sol",
        "file": "../types.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38261,
        "sourceUnit": 42510,
        "symbolAliases": [
          {
            "foreign": {
              "id": 38006,
              "name": "MetaTransaction",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 42449,
              "src": "211:15:74",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 38007,
              "name": "Proposal",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 42411,
              "src": "228:8:74",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 38008,
              "name": "ProposalStatus",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 42433,
              "src": "238:14:74",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 38260,
        "nodeType": "ContractDefinition",
        "src": "490:4088:74",
        "nodes": [
          {
            "id": 38024,
            "nodeType": "EventDefinition",
            "src": "849:104:74",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 38013,
              "nodeType": "StructuredDocumentation",
              "src": "562:282:74",
              "text": "@notice Emitted when a new Avatar Execution Strategy is initialized.\n @param _owner Address of the owner of the strategy.\n @param _target Address of the avatar that this module will pass transactions to.\n @param _spaces Array of whitelisted space contracts."
            },
            "eventSelector": "683bbcd71b259e230416d974e6911d22117ec0de423b17abfcb832bafbd244bf",
            "name": "AvatarExecutionStrategySetUp",
            "nameLocation": "855:28:74",
            "parameters": {
              "id": 38023,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38015,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "892:6:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 38024,
                  "src": "884:14:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38014,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "884:7:74",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38017,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_target",
                  "nameLocation": "908:7:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 38024,
                  "src": "900:15:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38016,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "900:7:74",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38020,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_spaces",
                  "nameLocation": "927:7:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 38024,
                  "src": "917:17:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 38018,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "917:7:74",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 38019,
                    "nodeType": "ArrayTypeName",
                    "src": "917:9:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38022,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_quorum",
                  "nameLocation": "944:7:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 38024,
                  "src": "936:15:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38021,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "936:7:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "883:69:74"
            }
          },
          {
            "id": 38029,
            "nodeType": "EventDefinition",
            "src": "1061:43:74",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 38025,
              "nodeType": "StructuredDocumentation",
              "src": "959:97:74",
              "text": "@notice Emitted each time the Target is set.\n @param newTarget The new target address."
            },
            "eventSelector": "3bfb4bbf112628248058745a3c57e35b13369386e474b8e56c552f3063a4a196",
            "name": "TargetSet",
            "nameLocation": "1067:9:74",
            "parameters": {
              "id": 38028,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38027,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newTarget",
                  "nameLocation": "1093:9:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 38029,
                  "src": "1077:25:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38026,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1077:7:74",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1076:27:74"
            }
          },
          {
            "id": 38032,
            "nodeType": "VariableDeclaration",
            "src": "1192:21:74",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 38030,
              "nodeType": "StructuredDocumentation",
              "src": "1110:77:74",
              "text": "@notice Address of the avatar that this module will pass transactions to."
            },
            "functionSelector": "d4b83992",
            "mutability": "mutable",
            "name": "target",
            "nameLocation": "1207:6:74",
            "scope": 38260,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 38031,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1192:7:74",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 38060,
            "nodeType": "FunctionDefinition",
            "src": "1525:203:74",
            "nodes": [],
            "body": {
              "id": 38059,
              "nodeType": "Block",
              "src": "1613:115:74",
              "nodes": [],
              "statements": [
                {
                  "assignments": [38046],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 38046,
                      "mutability": "mutable",
                      "name": "initParams",
                      "nameLocation": "1636:10:74",
                      "nodeType": "VariableDeclaration",
                      "scope": 38059,
                      "src": "1623:23:74",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 38045,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1623:5:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 38054,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 38049,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38035,
                        "src": "1660:6:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 38050,
                        "name": "_target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38037,
                        "src": "1668:7:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 38051,
                        "name": "_spaces",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38040,
                        "src": "1677:7:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "id": 38052,
                        "name": "_quorum",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38042,
                        "src": "1686:7:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 38047,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "1649:3:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 38048,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1653:6:74",
                      "memberName": "encode",
                      "nodeType": "MemberAccess",
                      "src": "1649:10:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 38053,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1649:45:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1623:71:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 38056,
                        "name": "initParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38046,
                        "src": "1710:10:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 38055,
                      "name": "setUp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38119,
                      "src": "1704:5:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory)"
                      }
                    },
                    "id": 38057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1704:17:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38058,
                  "nodeType": "ExpressionStatement",
                  "src": "1704:17:74"
                }
              ]
            },
            "documentation": {
              "id": 38033,
              "nodeType": "StructuredDocumentation",
              "src": "1220:300:74",
              "text": "@notice Constructor\n @param _owner Address of the owner of this contract.\n @param _target Address of the avatar that this module will pass transactions to.\n @param _spaces Array of whitelisted space contracts.\n @param _quorum The quorum required to execute a proposal."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 38043,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38035,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "1545:6:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 38060,
                  "src": "1537:14:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38034,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1537:7:74",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38037,
                  "mutability": "mutable",
                  "name": "_target",
                  "nameLocation": "1561:7:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 38060,
                  "src": "1553:15:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38036,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1553:7:74",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38040,
                  "mutability": "mutable",
                  "name": "_spaces",
                  "nameLocation": "1587:7:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 38060,
                  "src": "1570:24:74",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 38038,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1570:7:74",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 38039,
                    "nodeType": "ArrayTypeName",
                    "src": "1570:9:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38042,
                  "mutability": "mutable",
                  "name": "_quorum",
                  "nameLocation": "1604:7:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 38060,
                  "src": "1596:15:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38041,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1596:7:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1536:76:74"
            },
            "returnParameters": {
              "id": 38044,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1613:0:74"
            },
            "scope": 38260,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 38119,
            "nodeType": "FunctionDefinition",
            "src": "1938:509:74",
            "nodes": [],
            "body": {
              "id": 38118,
              "nodeType": "Block",
              "src": "1997:450:74",
              "nodes": [],
              "statements": [
                {
                  "assignments": [38069, 38071, 38074, 38076],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 38069,
                      "mutability": "mutable",
                      "name": "_owner",
                      "nameLocation": "2016:6:74",
                      "nodeType": "VariableDeclaration",
                      "scope": 38118,
                      "src": "2008:14:74",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 38068,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2008:7:74",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 38071,
                      "mutability": "mutable",
                      "name": "_target",
                      "nameLocation": "2032:7:74",
                      "nodeType": "VariableDeclaration",
                      "scope": 38118,
                      "src": "2024:15:74",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 38070,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2024:7:74",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 38074,
                      "mutability": "mutable",
                      "name": "_spaces",
                      "nameLocation": "2058:7:74",
                      "nodeType": "VariableDeclaration",
                      "scope": 38118,
                      "src": "2041:24:74",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 38072,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2041:7:74",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 38073,
                        "nodeType": "ArrayTypeName",
                        "src": "2041:9:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 38076,
                      "mutability": "mutable",
                      "name": "_quorum",
                      "nameLocation": "2075:7:74",
                      "nodeType": "VariableDeclaration",
                      "scope": 38118,
                      "src": "2067:15:74",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 38075,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2067:7:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 38091,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 38079,
                        "name": "initParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38063,
                        "src": "2110:10:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 38081,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2135:7:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 38080,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2135:7:74",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 38083,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2144:7:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 38082,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2144:7:74",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "baseExpression": {
                              "id": 38085,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2153:7:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 38084,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2153:7:74",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 38086,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2153:9:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_array$_t_address_$dyn_memory_ptr_$",
                              "typeString": "type(address[] memory)"
                            }
                          },
                          {
                            "id": 38088,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2164:7:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 38087,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2164:7:74",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 38089,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2134:38:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_address_$_$_t_type$_t_array$_t_address_$dyn_memory_ptr_$_$_t_type$_t_uint256_$_$",
                          "typeString": "tuple(type(address),type(address),type(address[] memory),type(uint256))"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_address_$_$_t_type$_t_array$_t_address_$dyn_memory_ptr_$_$_t_type$_t_uint256_$_$",
                          "typeString": "tuple(type(address),type(address),type(address[] memory),type(uint256))"
                        }
                      ],
                      "expression": {
                        "id": 38077,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "2086:3:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 38078,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "2090:6:74",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "2086:10:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 38090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2086:96:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_payable_$_t_address_payable_$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$",
                      "typeString": "tuple(address payable,address payable,address[] memory,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2007:175:74"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 38092,
                      "name": "__Ownable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25109,
                      "src": "2192:14:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 38093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2192:16:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38094,
                  "nodeType": "ExpressionStatement",
                  "src": "2192:16:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 38096,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38069,
                        "src": "2236:6:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 38095,
                      "name": "transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25188,
                      "src": "2218:17:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 38097,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2218:25:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38098,
                  "nodeType": "ExpressionStatement",
                  "src": "2218:25:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 38100,
                        "name": "_spaces",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38074,
                        "src": "2273:7:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      ],
                      "id": 38099,
                      "name": "__SpaceManager_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43476,
                      "src": "2253:19:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address[] memory)"
                      }
                    },
                    "id": 38101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2253:28:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38102,
                  "nodeType": "ExpressionStatement",
                  "src": "2253:28:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 38104,
                        "name": "_quorum",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38076,
                        "src": "2328:7:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 38103,
                      "name": "__SimpleQuorumExecutionStrategy_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38724,
                      "src": "2291:36:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 38105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2291:45:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38106,
                  "nodeType": "ExpressionStatement",
                  "src": "2291:45:74"
                },
                {
                  "expression": {
                    "id": 38109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 38107,
                      "name": "target",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38032,
                      "src": "2346:6:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 38108,
                      "name": "_target",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38071,
                      "src": "2355:7:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2346:16:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 38110,
                  "nodeType": "ExpressionStatement",
                  "src": "2346:16:74"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 38112,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38069,
                        "src": "2406:6:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 38113,
                        "name": "_target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38071,
                        "src": "2414:7:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 38114,
                        "name": "_spaces",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38074,
                        "src": "2423:7:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "id": 38115,
                        "name": "_quorum",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38076,
                        "src": "2432:7:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 38111,
                      "name": "AvatarExecutionStrategySetUp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38024,
                      "src": "2377:28:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address[] memory,uint256)"
                      }
                    },
                    "id": 38116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2377:63:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38117,
                  "nodeType": "EmitStatement",
                  "src": "2372:68:74"
                }
              ]
            },
            "documentation": {
              "id": 38061,
              "nodeType": "StructuredDocumentation",
              "src": "1734:199:74",
              "text": "@notice Initialization function, should be called immediately after deploying a new proxy to this contract.\n @param initParams ABI encoded parameters, in the same order as the constructor."
            },
            "functionSelector": "a4f9edbf",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 38066,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 38065,
                  "name": "initializer",
                  "nameLocations": ["1985:11:74"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 25674,
                  "src": "1985:11:74"
                },
                "nodeType": "ModifierInvocation",
                "src": "1985:11:74"
              }
            ],
            "name": "setUp",
            "nameLocation": "1947:5:74",
            "parameters": {
              "id": 38064,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38063,
                  "mutability": "mutable",
                  "name": "initParams",
                  "nameLocation": "1966:10:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 38119,
                  "src": "1953:23:74",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 38062,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1953:5:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1952:25:74"
            },
            "returnParameters": {
              "id": 38067,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1997:0:74"
            },
            "scope": 38260,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 38136,
            "nodeType": "FunctionDefinition",
            "src": "2541:121:74",
            "nodes": [],
            "body": {
              "id": 38135,
              "nodeType": "Block",
              "src": "2596:66:74",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 38129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 38127,
                      "name": "target",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38032,
                      "src": "2606:6:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 38128,
                      "name": "_target",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38122,
                      "src": "2615:7:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2606:16:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 38130,
                  "nodeType": "ExpressionStatement",
                  "src": "2606:16:74"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 38132,
                        "name": "_target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38122,
                        "src": "2647:7:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 38131,
                      "name": "TargetSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38029,
                      "src": "2637:9:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 38133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2637:18:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38134,
                  "nodeType": "EmitStatement",
                  "src": "2632:23:74"
                }
              ]
            },
            "documentation": {
              "id": 38120,
              "nodeType": "StructuredDocumentation",
              "src": "2453:83:74",
              "text": "@notice Sets the target address.\n @param _target The new target address."
            },
            "functionSelector": "776d1a01",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 38125,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 38124,
                  "name": "onlyOwner",
                  "nameLocations": ["2586:9:74"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 25128,
                  "src": "2586:9:74"
                },
                "nodeType": "ModifierInvocation",
                "src": "2586:9:74"
              }
            ],
            "name": "setTarget",
            "nameLocation": "2550:9:74",
            "parameters": {
              "id": 38123,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38122,
                  "mutability": "mutable",
                  "name": "_target",
                  "nameLocation": "2568:7:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 38136,
                  "src": "2560:15:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38121,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2560:7:74",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2559:17:74"
            },
            "returnParameters": {
              "id": 38126,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2596:0:74"
            },
            "scope": 38260,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 38186,
            "nodeType": "FunctionDefinition",
            "src": "3139:528:74",
            "nodes": [],
            "body": {
              "id": 38185,
              "nodeType": "Block",
              "src": "3340:327:74",
              "nodes": [],
              "statements": [
                {
                  "assignments": [38156],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 38156,
                      "mutability": "mutable",
                      "name": "proposalStatus",
                      "nameLocation": "3365:14:74",
                      "nodeType": "VariableDeclaration",
                      "scope": 38185,
                      "src": "3350:29:74",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProposalStatus_$42433",
                        "typeString": "enum ProposalStatus"
                      },
                      "typeName": {
                        "id": 38155,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 38154,
                          "name": "ProposalStatus",
                          "nameLocations": ["3350:14:74"],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 42433,
                          "src": "3350:14:74"
                        },
                        "referencedDeclaration": 42433,
                        "src": "3350:14:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ProposalStatus_$42433",
                          "typeString": "enum ProposalStatus"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 38163,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 38158,
                        "name": "proposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38140,
                        "src": "3400:8:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$42411_memory_ptr",
                          "typeString": "struct Proposal memory"
                        }
                      },
                      {
                        "id": 38159,
                        "name": "votesFor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38142,
                        "src": "3410:8:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 38160,
                        "name": "votesAgainst",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38144,
                        "src": "3420:12:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 38161,
                        "name": "votesAbstain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38146,
                        "src": "3434:12:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Proposal_$42411_memory_ptr",
                          "typeString": "struct Proposal memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 38157,
                      "name": "getProposalStatus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38853,
                      "src": "3382:17:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Proposal_$42411_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_enum$_ProposalStatus_$42433_$",
                        "typeString": "function (struct Proposal memory,uint256,uint256,uint256) view returns (enum ProposalStatus)"
                      }
                    },
                    "id": 38162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3382:65:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProposalStatus_$42433",
                      "typeString": "enum ProposalStatus"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3350:97:74"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 38174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_enum$_ProposalStatus_$42433",
                            "typeString": "enum ProposalStatus"
                          },
                          "id": 38167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 38164,
                            "name": "proposalStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38156,
                            "src": "3462:14:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ProposalStatus_$42433",
                              "typeString": "enum ProposalStatus"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "expression": {
                              "id": 38165,
                              "name": "ProposalStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42433,
                              "src": "3480:14:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_ProposalStatus_$42433_$",
                                "typeString": "type(enum ProposalStatus)"
                              }
                            },
                            "id": 38166,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "3495:8:74",
                            "memberName": "Accepted",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 42429,
                            "src": "3480:23:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ProposalStatus_$42433",
                              "typeString": "enum ProposalStatus"
                            }
                          },
                          "src": "3462:41:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 38168,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3461:43:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_enum$_ProposalStatus_$42433",
                            "typeString": "enum ProposalStatus"
                          },
                          "id": 38172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 38169,
                            "name": "proposalStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38156,
                            "src": "3509:14:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ProposalStatus_$42433",
                              "typeString": "enum ProposalStatus"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "expression": {
                              "id": 38170,
                              "name": "ProposalStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42433,
                              "src": "3527:14:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_ProposalStatus_$42433_$",
                                "typeString": "type(enum ProposalStatus)"
                              }
                            },
                            "id": 38171,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "3542:20:74",
                            "memberName": "VotingPeriodAccepted",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 42428,
                            "src": "3527:35:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ProposalStatus_$42433",
                              "typeString": "enum ProposalStatus"
                            }
                          },
                          "src": "3509:53:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 38173,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3508:55:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3461:102:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 38180,
                  "nodeType": "IfStatement",
                  "src": "3457:177:74",
                  "trueBody": {
                    "id": 38179,
                    "nodeType": "Block",
                    "src": "3565:69:74",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 38176,
                              "name": "proposalStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 38156,
                              "src": "3608:14:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ProposalStatus_$42433",
                                "typeString": "enum ProposalStatus"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_ProposalStatus_$42433",
                                "typeString": "enum ProposalStatus"
                              }
                            ],
                            "id": 38175,
                            "name": "InvalidProposalStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41715,
                            "src": "3586:21:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_enum$_ProposalStatus_$42433_$returns$__$",
                              "typeString": "function (enum ProposalStatus) pure"
                            }
                          },
                          "id": 38177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3586:37:74",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 38178,
                        "nodeType": "RevertStatement",
                        "src": "3579:44:74"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 38182,
                        "name": "payload",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38148,
                        "src": "3652:7:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 38181,
                      "name": "_execute",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38249,
                      "src": "3643:8:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory)"
                      }
                    },
                    "id": 38183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3643:17:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38184,
                  "nodeType": "ExpressionStatement",
                  "src": "3643:17:74"
                }
              ]
            },
            "baseFunctions": [38755],
            "documentation": {
              "id": 38137,
              "nodeType": "StructuredDocumentation",
              "src": "2668:466:74",
              "text": "@notice Executes a proposal from the avatar contract if the proposal outcome is accepted.\n         Must be called by a whitelisted space contract.\n @param proposal The proposal to execute.\n @param votesFor The number of votes in favor of the proposal.\n @param votesAgainst The number of votes against the proposal.\n @param votesAbstain The number of abstaining votes.\n @param payload The encoded transactions to execute."
            },
            "functionSelector": "2b06df53",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 38152,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 38151,
                  "name": "onlySpace",
                  "nameLocations": ["3330:9:74"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 43567,
                  "src": "3330:9:74"
                },
                "nodeType": "ModifierInvocation",
                "src": "3330:9:74"
              }
            ],
            "name": "execute",
            "nameLocation": "3148:7:74",
            "overrides": {
              "id": 38150,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3321:8:74"
            },
            "parameters": {
              "id": 38149,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38140,
                  "mutability": "mutable",
                  "name": "proposal",
                  "nameLocation": "3181:8:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 38186,
                  "src": "3165:24:74",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Proposal_$42411_memory_ptr",
                    "typeString": "struct Proposal"
                  },
                  "typeName": {
                    "id": 38139,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 38138,
                      "name": "Proposal",
                      "nameLocations": ["3165:8:74"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 42411,
                      "src": "3165:8:74"
                    },
                    "referencedDeclaration": 42411,
                    "src": "3165:8:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proposal_$42411_storage_ptr",
                      "typeString": "struct Proposal"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38142,
                  "mutability": "mutable",
                  "name": "votesFor",
                  "nameLocation": "3207:8:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 38186,
                  "src": "3199:16:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38141,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3199:7:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38144,
                  "mutability": "mutable",
                  "name": "votesAgainst",
                  "nameLocation": "3233:12:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 38186,
                  "src": "3225:20:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38143,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3225:7:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38146,
                  "mutability": "mutable",
                  "name": "votesAbstain",
                  "nameLocation": "3263:12:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 38186,
                  "src": "3255:20:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38145,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3255:7:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38148,
                  "mutability": "mutable",
                  "name": "payload",
                  "nameLocation": "3298:7:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 38186,
                  "src": "3285:20:74",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 38147,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3285:5:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3155:156:74"
            },
            "returnParameters": {
              "id": 38153,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3340:0:74"
            },
            "scope": 38260,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 38249,
            "nodeType": "FunctionDefinition",
            "src": "3820:583:74",
            "nodes": [],
            "body": {
              "id": 38248,
              "nodeType": "Block",
              "src": "3869:534:74",
              "nodes": [],
              "statements": [
                {
                  "assignments": [38196],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 38196,
                      "mutability": "mutable",
                      "name": "transactions",
                      "nameLocation": "3904:12:74",
                      "nodeType": "VariableDeclaration",
                      "scope": 38248,
                      "src": "3879:37:74",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_MetaTransaction_$42449_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct MetaTransaction[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 38194,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 38193,
                            "name": "MetaTransaction",
                            "nameLocations": ["3879:15:74"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 42449,
                            "src": "3879:15:74"
                          },
                          "referencedDeclaration": 42449,
                          "src": "3879:15:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MetaTransaction_$42449_storage_ptr",
                            "typeString": "struct MetaTransaction"
                          }
                        },
                        "id": 38195,
                        "nodeType": "ArrayTypeName",
                        "src": "3879:17:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_MetaTransaction_$42449_storage_$dyn_storage_ptr",
                          "typeString": "struct MetaTransaction[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 38204,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 38199,
                        "name": "payload",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38189,
                        "src": "3930:7:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "baseExpression": {
                              "id": 38200,
                              "name": "MetaTransaction",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42449,
                              "src": "3940:15:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_MetaTransaction_$42449_storage_ptr_$",
                                "typeString": "type(struct MetaTransaction storage pointer)"
                              }
                            },
                            "id": 38201,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3940:17:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_array$_t_struct$_MetaTransaction_$42449_memory_ptr_$dyn_memory_ptr_$",
                              "typeString": "type(struct MetaTransaction memory[] memory)"
                            }
                          }
                        ],
                        "id": 38202,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "3939:19:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_array$_t_struct$_MetaTransaction_$42449_memory_ptr_$dyn_memory_ptr_$",
                          "typeString": "type(struct MetaTransaction memory[] memory)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_array$_t_struct$_MetaTransaction_$42449_memory_ptr_$dyn_memory_ptr_$",
                          "typeString": "type(struct MetaTransaction memory[] memory)"
                        }
                      ],
                      "expression": {
                        "id": 38197,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "3919:3:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 38198,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "3923:6:74",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "3919:10:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 38203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3919:40:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_MetaTransaction_$42449_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct MetaTransaction memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3879:80:74"
                },
                {
                  "body": {
                    "id": 38246,
                    "nodeType": "Block",
                    "src": "4019:378:74",
                    "statements": [
                      {
                        "assignments": [38217],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 38217,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "4038:7:74",
                            "nodeType": "VariableDeclaration",
                            "scope": 38246,
                            "src": "4033:12:74",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 38216,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "4033:4:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 38239,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 38222,
                                  "name": "transactions",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38196,
                                  "src": "4107:12:74",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_MetaTransaction_$42449_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "struct MetaTransaction memory[] memory"
                                  }
                                },
                                "id": 38224,
                                "indexExpression": {
                                  "id": 38223,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38206,
                                  "src": "4120:1:74",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4107:15:74",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_MetaTransaction_$42449_memory_ptr",
                                  "typeString": "struct MetaTransaction memory"
                                }
                              },
                              "id": 38225,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4123:2:74",
                              "memberName": "to",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 42439,
                              "src": "4107:18:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 38226,
                                  "name": "transactions",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38196,
                                  "src": "4143:12:74",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_MetaTransaction_$42449_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "struct MetaTransaction memory[] memory"
                                  }
                                },
                                "id": 38228,
                                "indexExpression": {
                                  "id": 38227,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38206,
                                  "src": "4156:1:74",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4143:15:74",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_MetaTransaction_$42449_memory_ptr",
                                  "typeString": "struct MetaTransaction memory"
                                }
                              },
                              "id": 38229,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4159:5:74",
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 42441,
                              "src": "4143:21:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 38230,
                                  "name": "transactions",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38196,
                                  "src": "4182:12:74",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_MetaTransaction_$42449_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "struct MetaTransaction memory[] memory"
                                  }
                                },
                                "id": 38232,
                                "indexExpression": {
                                  "id": 38231,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38206,
                                  "src": "4195:1:74",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4182:15:74",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_MetaTransaction_$42449_memory_ptr",
                                  "typeString": "struct MetaTransaction memory"
                                }
                              },
                              "id": 38233,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4198:4:74",
                              "memberName": "data",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 42443,
                              "src": "4182:20:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 38234,
                                  "name": "transactions",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38196,
                                  "src": "4220:12:74",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_MetaTransaction_$42449_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "struct MetaTransaction memory[] memory"
                                  }
                                },
                                "id": 38236,
                                "indexExpression": {
                                  "id": 38235,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38206,
                                  "src": "4233:1:74",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4220:15:74",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_MetaTransaction_$42449_memory_ptr",
                                  "typeString": "struct MetaTransaction memory"
                                }
                              },
                              "id": 38237,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4236:9:74",
                              "memberName": "operation",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 42446,
                              "src": "4220:25:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Operation_$34660",
                                "typeString": "enum Enum.Operation"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_enum$_Operation_$34660",
                                "typeString": "enum Enum.Operation"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 38219,
                                  "name": "target",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38032,
                                  "src": "4056:6:74",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 38218,
                                "name": "IAvatar",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34748,
                                "src": "4048:7:74",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IAvatar_$34748_$",
                                  "typeString": "type(contract IAvatar)"
                                }
                              },
                              "id": 38220,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4048:15:74",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IAvatar_$34748",
                                "typeString": "contract IAvatar"
                              }
                            },
                            "id": 38221,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4064:25:74",
                            "memberName": "execTransactionFromModule",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 34709,
                            "src": "4048:41:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_enum$_Operation_$34660_$returns$_t_bool_$",
                              "typeString": "function (address,uint256,bytes memory,enum Enum.Operation) external returns (bool)"
                            }
                          },
                          "id": 38238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4048:211:74",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4033:226:74"
                      },
                      {
                        "condition": {
                          "id": 38241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "4352:8:74",
                          "subExpression": {
                            "id": 38240,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38217,
                            "src": "4353:7:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 38245,
                        "nodeType": "IfStatement",
                        "src": "4348:38:74",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 38242,
                              "name": "ExecutionFailed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41718,
                              "src": "4369:15:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 38243,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4369:17:74",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 38244,
                          "nodeType": "RevertStatement",
                          "src": "4362:24:74"
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 38212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 38209,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38206,
                      "src": "3989:1:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 38210,
                        "name": "transactions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38196,
                        "src": "3993:12:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_MetaTransaction_$42449_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct MetaTransaction memory[] memory"
                        }
                      },
                      "id": 38211,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4006:6:74",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3993:19:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3989:23:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 38247,
                  "initializationExpression": {
                    "assignments": [38206],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 38206,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3982:1:74",
                        "nodeType": "VariableDeclaration",
                        "scope": 38247,
                        "src": "3974:9:74",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 38205,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3974:7:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 38208,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 38207,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3986:1:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3974:13:74"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 38214,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4014:3:74",
                      "subExpression": {
                        "id": 38213,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38206,
                        "src": "4014:1:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 38215,
                    "nodeType": "ExpressionStatement",
                    "src": "4014:3:74"
                  },
                  "nodeType": "ForStatement",
                  "src": "3969:428:74"
                }
              ]
            },
            "documentation": {
              "id": 38187,
              "nodeType": "StructuredDocumentation",
              "src": "3673:142:74",
              "text": "@notice Decodes and executes a batch of transactions from the avatar contract.\n @param payload The encoded transactions to execute."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_execute",
            "nameLocation": "3829:8:74",
            "parameters": {
              "id": 38190,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38189,
                  "mutability": "mutable",
                  "name": "payload",
                  "nameLocation": "3851:7:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 38249,
                  "src": "3838:20:74",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 38188,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3838:5:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3837:22:74"
            },
            "returnParameters": {
              "id": 38191,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3869:0:74"
            },
            "scope": 38260,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 38259,
            "nodeType": "FunctionDefinition",
            "src": "4458:118:74",
            "nodes": [],
            "body": {
              "id": 38258,
              "nodeType": "Block",
              "src": "4532:44:74",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "hexValue": "53696d706c6551756f72756d417661746172",
                    "id": 38256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4549:20:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c6b424df83e7c7c494d72036a8dbf29b3cdbdadcbd03398081a41b5e3ac2762b",
                      "typeString": "literal_string \"SimpleQuorumAvatar\""
                    },
                    "value": "SimpleQuorumAvatar"
                  },
                  "functionReturnParameters": 38255,
                  "id": 38257,
                  "nodeType": "Return",
                  "src": "4542:27:74"
                }
              ]
            },
            "baseFunctions": [38895],
            "documentation": {
              "id": 38250,
              "nodeType": "StructuredDocumentation",
              "src": "4409:44:74",
              "text": "@notice Returns the trategy type string."
            },
            "functionSelector": "0eb9b15a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStrategyType",
            "nameLocation": "4467:15:74",
            "overrides": {
              "id": 38252,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4499:8:74"
            },
            "parameters": {
              "id": 38251,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4482:2:74"
            },
            "returnParameters": {
              "id": 38255,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38254,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 38259,
                  "src": "4517:13:74",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 38253,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4517:6:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4516:15:74"
            },
            "scope": 38260,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 38011,
              "name": "SimpleQuorumExecutionStrategy",
              "nameLocations": ["526:29:74"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 38896,
              "src": "526:29:74"
            },
            "id": 38012,
            "nodeType": "InheritanceSpecifier",
            "src": "526:29:74"
          }
        ],
        "canonicalName": "AvatarExecutionStrategy",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 38010,
          "nodeType": "StructuredDocumentation",
          "src": "277:213:74",
          "text": "@title Avatar Execution Strategy\n @notice Used to execute proposal transactions from an Avatar contract.\n @dev An Avatar contract is any contract that implements the IAvatar interface, eg a Gnosis Safe."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [38260, 38896, 43568, 25214, 26234, 25772, 41616, 41719],
        "name": "AvatarExecutionStrategy",
        "nameLocation": "499:23:74",
        "scope": 38261,
        "usedErrors": [41715, 41718, 43431]
      }
    ],
    "license": "MIT"
  },
  "id": 74
}
