{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "delegator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "fromDelegate",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "toDelegate",
          "type": "address"
        }
      ],
      "name": "DelegateChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "delegate",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "previousBalance",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newBalance",
          "type": "uint256"
        }
      ],
      "name": "DelegateVotesChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DOMAIN_SEPARATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "pos",
          "type": "uint32"
        }
      ],
      "name": "checkpoints",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "fromBlock",
              "type": "uint32"
            },
            {
              "internalType": "uint224",
              "name": "votes",
              "type": "uint224"
            }
          ],
          "internalType": "struct ERC20Votes.Checkpoint",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "delegatee",
          "type": "address"
        }
      ],
      "name": "delegate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "delegatee",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expiry",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "delegateBySig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "delegates",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getCurrentVotes",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "getPastTotalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "getPastVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "getPriorVotes",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "numCheckpoints",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "permit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x610140604081815234620003f8576200001882620003fd565b600491828152602091828201926315195cdd60e21b938481528251946200003f86620003fd565b868652828601528251906200005482620003fd565b86825263151154d560e21b838301528351946200007186620003fd565b6001808752603160f81b85880190815288516001600160401b03999195918a8211620003e3576003918254918583811c93168015620003d8575b8a841014620002da578190601f9384811162000382575b508a908483116001146200031b576000926200030f575b505060001982851b1c191690851b1782555b8251928b8411620002fa578c548581811c91168015620002ef575b8a821014620002da578281116200028f575b5088918411600114620002245793839491849260009562000218575b50501b92600019911b1c19161788555b51902093519020918360e052610100958387524660a0528151928301937f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f958686528385015260608401524660808401523060a084015260a0835260c0830195838710908711176200020357508490525190206080523060c05261012090815261288b92836200043084396080518361230d015260a051836123c8015260c051836122de015260e0518361235c01525182612382015251816123390152f35b604190634e487b7160e01b6000525260246000fd5b01519350388062000134565b9190601f198416928d600052848a6000209460005b8c898383106200027757505050106200025c575b50505050811b01885562000144565b01519060f884600019921b161c19169055388080806200024d565b86860151895590970196948501948893500162000239565b8d600052896000208380870160051c8201928c8810620002d0575b0160051c019086905b828110620002c357505062000118565b60008155018690620002b3565b92508192620002aa565b60228e634e487b7160e01b6000525260246000fd5b90607f169062000106565b60418d634e487b7160e01b6000525260246000fd5b015190503880620000d9565b60008681528c8120899550929190601f198516908e5b8282106200036a575050841162000351575b505050811b018255620000eb565b015160001983871b60f8161c1916905538808062000343565b8385015186558b979095019493840193018e62000331565b909150846000528a6000208480850160051c8201928d8610620003ce575b918991869594930160051c01915b828110620003be575050620000c2565b60008155859450899101620003ae565b92508192620003a0565b92607f1692620000ab565b60418c634e487b7160e01b6000525260246000fd5b600080fd5b604081019081106001600160401b038211176200041957604052565b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001257600080fd5b60003560e01c806306fdde03146101b7578063095ea7b3146101b257806318160ddd146101ad57806323b872dd146101a8578063313ce567146101a35780633644e5151461019e57806339509351146101995780633a46b1a81461019457806340c10f191461018f578063587cde1e1461018a5780635c19a95c146101855780636fcfff451461018057806370a082311461017b578063782d6fe1146101765780637ecebe00146101715780638e539e8c1461016c57806395d89b41146101675780639ab24eb0146101625780639dc29fac1461015d578063a457c2d714610158578063a9059cbb14610153578063b4b5ea571461014e578063c3cda52014610149578063d505accf14610144578063dd62ed3e1461013f5763f1127ed81461013a57600080fd5b6110a9565b611032565b610ec7565b610d60565b610d1f565b610cf9565b610c26565b610ad0565b610aad565b6109ea565b61086e565b610827565b6107eb565b6107a4565b61074f565b61072d565b6106e5565b6105c5565b61059e565b610532565b61050f565b6104f3565b6103ff565b6103e1565b6103b0565b610222565b60208082528251818301819052939260005b85811061020e575050507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8460006040809697860101520116010190565b8181018301518482016040015282016101ce565b34610365576000806003193601126103625760405190806003549060019180831c92808216928315610358575b602092838610851461032b5785885260208801949081156102ec5750600114610293575b61028f87610283818903826111b9565b604051918291826101bc565b0390f35b600360005294509192917fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b8386106102db57505050910190506102838261028f3880610273565b8054858701529482019481016102bf565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001685525050505090151560051b0190506102838261028f3880610273565b6024827f4e487b710000000000000000000000000000000000000000000000000000000081526022600452fd5b93607f169361024f565b80fd5b600080fd5b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361036557565b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361036557565b34610365576040600319360112610365576103d66103cc61036a565b602435903361148a565b602060405160018152f35b34610365576000600319360112610365576020600254604051908152f35b346103655760606003193601126103655761041861036a565b61042061038d565b6044359073ffffffffffffffffffffffffffffffffffffffff831660005260016020526104713360406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b54926000198403610493575b6104879350611326565b60405160018152602090f35b8284106104af576104aa836104879503338361148a565b61047d565b606460405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b3461036557600060031936011261036557602060405160128152f35b3461036557600060031936011261036557602061052a6122c7565b604051908152f35b346103655760406003193601126103655761054b61036a565b3360005260016020526105828160406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b546024358101809111610599576103d6913361148a565b6111fa565b3461036557604060031936011261036557602061052a6105bc61036a565b6024359061178c565b34610365576040600319360112610365576105de61036a565b60243573ffffffffffffffffffffffffffffffffffffffff82169182156106a157816106809161069f9461061c61061784600254611237565b600255565b6106468273ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b8054840190556040518381526000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602090a3611907565b61069a6bffffffffffffffffffffffff6002541115612782565b611e06565b005b606460405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152fd5b3461036557602060031936011261036557602073ffffffffffffffffffffffffffffffffffffffff8061071661036a565b166000526007825260406000205416604051908152f35b346103655760206003193601126103655761069f61074961036a565b336119df565b346103655760206003193601126103655773ffffffffffffffffffffffffffffffffffffffff61077d61036a565b1660005260086020526020610796604060002054612707565b63ffffffff60405191168152f35b346103655760206003193601126103655773ffffffffffffffffffffffffffffffffffffffff6107d261036a565b1660005260006020526020604060002054604051908152f35b3461036557604060031936011261036557602061081161080c6105bc61036a565b612684565b6bffffffffffffffffffffffff60405191168152f35b346103655760206003193601126103655773ffffffffffffffffffffffffffffffffffffffff61085561036a565b1660005260056020526020604060002054604051908152f35b346103655760206003193601126103655760043561088d438210611741565b600954906000826005811161097d575b50905b8282106109145782806108d95750602060005b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff60405191168152f35b600960005260209061090f907f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7ae015b5460201c90565b6108b3565b9091610920818461248a565b6009600052908263ffffffff61095d7f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af85015b5463ffffffff1690565b16111561096d5750915b906108a0565b925061097890611229565b610967565b8061098d6109939295939561249f565b906118af565b6009600052908263ffffffff6109ca7f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af8501610953565b1611156109da5750915b3861089d565b92506109e590611229565b6109d4565b34610365576000806003193601126103625760405190806004549060019180831c92808216928315610aa3575b602092838610851461032b5785885260208801949081156102ec5750600114610a4a5761028f87610283818903826111b9565b600460005294509192917f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b838610610a9257505050910190506102838261028f3880610273565b805485870152948201948101610a76565b93607f1693610a17565b3461036557602060031936011261036557602061052a610acb61036a565b6116d6565b3461036557604060031936011261036557610ae961036a565b60243573ffffffffffffffffffffffffffffffffffffffff8216918215610bbc578181600061069f9583610b40610bb79673ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b54610b4d828210156127f3565b03610b788473ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b55610b868460025403600255565b6040518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602090a361195f565b611f52565b608460405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f73000000000000000000000000000000000000000000000000000000000000006064820152fd5b3461036557604060031936011261036557610c3f61036a565b60243590336000526001602052610c7a8160406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b5491808310610c8f576104879203903361148a565b608460405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152fd5b34610365576040600319360112610365576103d6610d1561036a565b6024359033611326565b3461036557602060031936011261036557602061081161080c610acb61036a565b6064359060ff8216820361036557565b6084359060ff8216820361036557565b346103655760c060031936011261036557610d7961036a565b60443590602435610d88610d40565b92804211610e8357610e44610e7e9161069f9560405190610e2c82610e006020820195898b8860609194939273ffffffffffffffffffffffffffffffffffffffff60808301967fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf845216602083015260408201520152565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081018452836111b9565b610e3f60a43593608435935190206123ee565b61209d565b91610e788373ffffffffffffffffffffffffffffffffffffffff166000526005602052604060002090815491600183019055565b146118bc565b6119df565b606460405162461bcd60e51b815260206004820152601d60248201527f4552433230566f7465733a207369676e617475726520657870697265640000006044820152fd5b346103655760e060031936011261036557610ee061036a565b610ee861038d565b6044359060643592610ef8610d50565b93804211610fee57610fc9610fe991610e0061069f97610fb6610f448773ffffffffffffffffffffffffffffffffffffffff166000526005602052604060002090815491600183019055565b9360405193849160208301968c8c8c8a91959493909260a09360c08401977f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9855273ffffffffffffffffffffffffffffffffffffffff8092166020860152166040840152606083015260808201520152565b610e3f60c4359360a435935190206123ee565b73ffffffffffffffffffffffffffffffffffffffff808416911614611615565b61148a565b606460405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e650000006044820152fd5b346103655760406003193601126103655760206110a061105061036a565b73ffffffffffffffffffffffffffffffffffffffff61106d61038d565b91166000526001835260406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b54604051908152f35b34610365576040600319360112610365576110c261036a565b63ffffffff602435818116810361036557602061113b6111357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff9373ffffffffffffffffffffffffffffffffffffffff6040976000868a5161111f8161117c565b828152015216600052600884528660002061166d565b506116b4565b84519381511684520151166020820152f35b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040810190811067ffffffffffffffff82111761119857604052565b61114d565b60c0810190811067ffffffffffffffff82111761119857604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761119857604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b906001820180921161059957565b9190820180921161059957565b1561124b57565b608460405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152fd5b156112bc57565b608460405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152fd5b919073ffffffffffffffffffffffffffffffffffffffff9283811680156114205761141e94831690611359821515611244565b846113848473ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b54611391828210156112b5565b036113bc8473ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b556113e78473ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b8054860190556040518581527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602090a361199e565b565b608460405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152fd5b9073ffffffffffffffffffffffffffffffffffffffff918281169283156115ac578216938415611542578061152c7f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259461150761153d9573ffffffffffffffffffffffffffffffffffffffff166000526001602052604060002090565b9073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b556040519081529081906020820190565b0390a3565b608460405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152fd5b608460405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152fd5b1561161c57565b606460405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e617475726500006044820152fd5b6040519061141e8261117c565b80548210156116855760005260206000200190600090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906040516116c18161117c565b602081935463ffffffff81168352811c910152565b73ffffffffffffffffffffffffffffffffffffffff16600052600860205260406000208054801560001461170c57506000919050565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff9160001961173892019061166d565b505460201c1690565b1561174857565b606460405162461bcd60e51b815260206004820152601f60248201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e6564006044820152fd5b73ffffffffffffffffffffffffffffffffffffffff906117ad438410611741565b166000526008602052604060002080549160008360058111611864575b50905b83821061181d575050816117e357506000919050565b610908611819916000197bffffffffffffffffffffffffffffffffffffffffffffffffffffffff94019060005260206000200190565b1690565b9092611829818561248a565b908263ffffffff611844610953858860005260206000200190565b1611156118545750925b906117cd565b935061185f90611229565b61184e565b8061098d6118749296939661249f565b908263ffffffff61188f610953858860005260206000200190565b16111561189f5750925b386117ca565b93506118aa90611229565b611899565b9190820391821161059957565b156118c357565b606460405162461bcd60e51b815260206004820152601960248201527f4552433230566f7465733a20696e76616c6964206e6f6e6365000000000000006044820152fd5b60076020527f6d5257204ebe7d88fd91ae87941cb2dd9d8062b64ae5a2bd2d28ec40b9fbf6df5473ffffffffffffffffffffffffffffffffffffffff9182166000908152604090205461141e93929081169116611a72565b9061141e9173ffffffffffffffffffffffffffffffffffffffff8091166000526007602052806040600020541690600080526040600020541690611a72565b9061141e929173ffffffffffffffffffffffffffffffffffffffff809116600052600760205280806040600020541692166000526040600020541690611a72565b61141e9173ffffffffffffffffffffffffffffffffffffffff8092166000928184526007602052806040852054168092856020527f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f60408720549660076020526040812094871694857fffffffffffffffffffffffff000000000000000000000000000000000000000082541617905580a45b919073ffffffffffffffffffffffffffffffffffffffff80821693168381141580611ce3575b611aa3575b50505050565b80611b23575b5082611ab6575b80611a9d565b7fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a72491611b05611b0a9273ffffffffffffffffffffffffffffffffffffffff166000526008602052604060002090565b611fdf565b60408051928352602083019190915290a2388080611ab0565b8060005260086020527fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7246040600020805480159182600014611cc057611b67611660565b6000815260006020820152915b611bc1611ba060208501517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1690565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1690565b92611bcc8985612864565b94159081611ca9575b5015611c4857611bfd611c3292600019611bee876125f1565b93019060005260206000200190565b9063ffffffff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000083549260201b169116179055565b604080519182526020820192909252a238611aa9565b50611ca490611c5643612707565b90611c9f611c63866125f1565b611c7a611c6e611660565b63ffffffff9095168552565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166020840152565b611d73565b611c32565b5163ffffffff16905063ffffffff16431438611bd5565b611cdd611cd860001984018360005260206000200190565b6116b4565b91611b74565b50821515611a98565b6009549068010000000000000000821015611198576001820180600955821015611685576009600052805160209182015190911b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000001663ffffffff91909116177f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af90910155565b80546801000000000000000081101561119857611d959160018201815561166d565b611dd757815160209283015190921b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000001663ffffffff92909216919091179055565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b60095490918115918215611f1d57611e1c611660565b60008152600060208201525b611e5e611e57611ba060208401517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1690565b9586612871565b93159081611f06575b5015611eac5761141e90611bfd600019611e80866125f1565b920160096000527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0190565b5061141e611eb943612707565b611f01611ec5856125f1565b611edc611ed0611660565b63ffffffff9094168452565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166020830152565b611cec565b5163ffffffff16905063ffffffff16431438611e67565b6009600052611f4d7f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7ae82016116b4565b611e28565b60095490918115918215611faa57611f68611660565b60008152600060208201525b611e5e611fa3611ba060208401517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1690565b9586612864565b6009600052611fda7f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7ae82016116b4565b611f74565b90918154918215928360001461208057611ff7611660565b60008152600060208201525b612039612032611ba060208401517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1690565b9687612871565b94159081612069575b501561205b57611bfd61141e92600019611bee876125f1565b5061141e90611c5643612707565b5163ffffffff16905063ffffffff16431438612042565b612098611cd860001983018460005260206000200190565b612003565b916120b493916120ac9361222b565b9190916120f0565b90565b600511156120c157565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6120f9816120b7565b806121015750565b61210a816120b7565b600181036121575760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606490fd5b612160816120b7565b600281036121ad5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606490fd5b806121b96003926120b7565b146121c057565b60405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60448201527f75650000000000000000000000000000000000000000000000000000000000006064820152608490fd5b9291907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083116122bb5791608094939160ff602094604051948552168484015260408301526060820152600093849182805260015afa156122ae57815173ffffffffffffffffffffffffffffffffffffffff8116156122a8579190565b50600190565b50604051903d90823e3d90fd5b50505050600090600390565b73ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163014806123c5575b1561232f577f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101907f000000000000000000000000000000000000000000000000000000000000000082527f000000000000000000000000000000000000000000000000000000000000000060408201527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260a081526123bf8161119d565b51902090565b507f00000000000000000000000000000000000000000000000000000000000000004614612306565b6123f66122c7565b906040519060208201927f1901000000000000000000000000000000000000000000000000000000000000845260228301526042820152604281526080810181811067ffffffffffffffff8211176111985760405251902090565b811561245b570490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b90808216911860011c81018091116105995790565b80156125d9578061257261256b61256161255761254d61254361253961252f60016120b49a6000908b60801c806125cd575b508060401c806125c0575b508060201c806125b3575b508060101c806125a6575b508060081c80612599575b508060041c8061258c575b508060021c8061257f575b50821c612578575b811c1b612528818b612451565b0160011c90565b612528818a612451565b6125288189612451565b6125288188612451565b6125288187612451565b6125288186612451565b6125288185612451565b8092612451565b906125df565b810161251b565b6002915091019038612513565b6004915091019038612508565b60089150910190386124fd565b60109150910190386124f2565b60209150910190386124e7565b60409150910190386124dc565b915050608090386124d1565b50600090565b90808210156125ec575090565b905090565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff9081811161261a571690565b608460405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203260448201527f32342062697473000000000000000000000000000000000000000000000000006064820152fd5b6bffffffffffffffffffffffff9081811161269d571690565b608460405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203960448201527f36206269747300000000000000000000000000000000000000000000000000006064820152fd5b63ffffffff90818111612718571690565b608460405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201527f32206269747300000000000000000000000000000000000000000000000000006064820152fd5b1561278957565b608460405162461bcd60e51b815260206004820152603060248201527f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f60448201527f766572666c6f77696e6720766f746573000000000000000000000000000000006064820152fd5b156127fa57565b608460405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60448201527f63650000000000000000000000000000000000000000000000000000000000006064820152fd5b9081039081116105995790565b908101809111610599579056fea164736f6c6343000812000a",
    "sourceMap": "180:338:114:-:0;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;180:338:114;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;180:338:114;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;180:338:114;;;;;;;;-1:-1:-1;;;;;180:338:114;;;;;;;;;2042:13:39;180:338:114;;;;;;;;;;;;;;-1:-1:-1;180:338:114;;;;;;;;;;;;;;;-1:-1:-1;180:338:114;;;;;;;;;;-1:-1:-1;180:338:114;;;;-1:-1:-1;;;;180:338:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;180:338:114;;;;;;;;;;;;;;;;;;;;2550:22:56;;180:338:114;;2606:25:56;;2787;;;;2822:31;;;;;2882:13;2863:32;;180:338:114;;3642:73:56;;;2660:117;;180:338:114;;;;;;;;;;;;2882:13:56;180:338:114;;;;3709:4:56;2863:32;180:338:114;;;2863:32:56;3642:73;;180:338:114;;;;;;;;;;;;;;;;;;3632:84:56;;180:338:114;2905:85:56;3709:4;180:338:114;3000:28:56;3038:21;;;;180:338:114;;;;;;;;;;;;2863:32:56;180:338:114;;;;;;;;;;;2787:25:56;180:338:114;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;180:338:114;;;-1:-1:-1;180:338:114;;;;;-1:-1:-1;180:338:114;;;;;;;;;;;;;-1:-1:-1;180:338:114;;;-1:-1:-1;180:338:114;;-1:-1:-1;180:338:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;180:338:114;;;;;-1:-1:-1;180:338:114;;-1:-1:-1;180:338:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;180:338:114;;;;;;;;;;;;;;;;;;;;-1:-1:-1;180:338:114;;;-1:-1:-1;180:338:114;;;;;;;;;;;;;;-1:-1:-1;180:338:114;;;-1:-1:-1;180:338:114;;;;;-1:-1:-1;180:338:114;;;;;-1:-1:-1;180:338:114;;;;;;;;-1:-1:-1;180:338:114;;;-1:-1:-1;;180:338:114;;;;;;;;;;;;;-1:-1:-1;180:338:114;;;;;;;;;;;;;;;;-1:-1:-1;;180:338:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;180:338:114;;-1:-1:-1;180:338:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;180:338:114;;;;-1:-1:-1;180:338:114;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;180:338:114;;;-1:-1:-1;180:338:114;;;;;;;;;;;;-1:-1:-1;;;;;180:338:114;;;;;;;:::o;:::-;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436101561001257600080fd5b60003560e01c806306fdde03146101b7578063095ea7b3146101b257806318160ddd146101ad57806323b872dd146101a8578063313ce567146101a35780633644e5151461019e57806339509351146101995780633a46b1a81461019457806340c10f191461018f578063587cde1e1461018a5780635c19a95c146101855780636fcfff451461018057806370a082311461017b578063782d6fe1146101765780637ecebe00146101715780638e539e8c1461016c57806395d89b41146101675780639ab24eb0146101625780639dc29fac1461015d578063a457c2d714610158578063a9059cbb14610153578063b4b5ea571461014e578063c3cda52014610149578063d505accf14610144578063dd62ed3e1461013f5763f1127ed81461013a57600080fd5b6110a9565b611032565b610ec7565b610d60565b610d1f565b610cf9565b610c26565b610ad0565b610aad565b6109ea565b61086e565b610827565b6107eb565b6107a4565b61074f565b61072d565b6106e5565b6105c5565b61059e565b610532565b61050f565b6104f3565b6103ff565b6103e1565b6103b0565b610222565b60208082528251818301819052939260005b85811061020e575050507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8460006040809697860101520116010190565b8181018301518482016040015282016101ce565b34610365576000806003193601126103625760405190806003549060019180831c92808216928315610358575b602092838610851461032b5785885260208801949081156102ec5750600114610293575b61028f87610283818903826111b9565b604051918291826101bc565b0390f35b600360005294509192917fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b8386106102db57505050910190506102838261028f3880610273565b8054858701529482019481016102bf565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001685525050505090151560051b0190506102838261028f3880610273565b6024827f4e487b710000000000000000000000000000000000000000000000000000000081526022600452fd5b93607f169361024f565b80fd5b600080fd5b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361036557565b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361036557565b34610365576040600319360112610365576103d66103cc61036a565b602435903361148a565b602060405160018152f35b34610365576000600319360112610365576020600254604051908152f35b346103655760606003193601126103655761041861036a565b61042061038d565b6044359073ffffffffffffffffffffffffffffffffffffffff831660005260016020526104713360406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b54926000198403610493575b6104879350611326565b60405160018152602090f35b8284106104af576104aa836104879503338361148a565b61047d565b606460405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b3461036557600060031936011261036557602060405160128152f35b3461036557600060031936011261036557602061052a6122c7565b604051908152f35b346103655760406003193601126103655761054b61036a565b3360005260016020526105828160406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b546024358101809111610599576103d6913361148a565b6111fa565b3461036557604060031936011261036557602061052a6105bc61036a565b6024359061178c565b34610365576040600319360112610365576105de61036a565b60243573ffffffffffffffffffffffffffffffffffffffff82169182156106a157816106809161069f9461061c61061784600254611237565b600255565b6106468273ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b8054840190556040518381526000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602090a3611907565b61069a6bffffffffffffffffffffffff6002541115612782565b611e06565b005b606460405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152fd5b3461036557602060031936011261036557602073ffffffffffffffffffffffffffffffffffffffff8061071661036a565b166000526007825260406000205416604051908152f35b346103655760206003193601126103655761069f61074961036a565b336119df565b346103655760206003193601126103655773ffffffffffffffffffffffffffffffffffffffff61077d61036a565b1660005260086020526020610796604060002054612707565b63ffffffff60405191168152f35b346103655760206003193601126103655773ffffffffffffffffffffffffffffffffffffffff6107d261036a565b1660005260006020526020604060002054604051908152f35b3461036557604060031936011261036557602061081161080c6105bc61036a565b612684565b6bffffffffffffffffffffffff60405191168152f35b346103655760206003193601126103655773ffffffffffffffffffffffffffffffffffffffff61085561036a565b1660005260056020526020604060002054604051908152f35b346103655760206003193601126103655760043561088d438210611741565b600954906000826005811161097d575b50905b8282106109145782806108d95750602060005b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff60405191168152f35b600960005260209061090f907f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7ae015b5460201c90565b6108b3565b9091610920818461248a565b6009600052908263ffffffff61095d7f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af85015b5463ffffffff1690565b16111561096d5750915b906108a0565b925061097890611229565b610967565b8061098d6109939295939561249f565b906118af565b6009600052908263ffffffff6109ca7f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af8501610953565b1611156109da5750915b3861089d565b92506109e590611229565b6109d4565b34610365576000806003193601126103625760405190806004549060019180831c92808216928315610aa3575b602092838610851461032b5785885260208801949081156102ec5750600114610a4a5761028f87610283818903826111b9565b600460005294509192917f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b838610610a9257505050910190506102838261028f3880610273565b805485870152948201948101610a76565b93607f1693610a17565b3461036557602060031936011261036557602061052a610acb61036a565b6116d6565b3461036557604060031936011261036557610ae961036a565b60243573ffffffffffffffffffffffffffffffffffffffff8216918215610bbc578181600061069f9583610b40610bb79673ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b54610b4d828210156127f3565b03610b788473ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b55610b868460025403600255565b6040518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602090a361195f565b611f52565b608460405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f73000000000000000000000000000000000000000000000000000000000000006064820152fd5b3461036557604060031936011261036557610c3f61036a565b60243590336000526001602052610c7a8160406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b5491808310610c8f576104879203903361148a565b608460405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152fd5b34610365576040600319360112610365576103d6610d1561036a565b6024359033611326565b3461036557602060031936011261036557602061081161080c610acb61036a565b6064359060ff8216820361036557565b6084359060ff8216820361036557565b346103655760c060031936011261036557610d7961036a565b60443590602435610d88610d40565b92804211610e8357610e44610e7e9161069f9560405190610e2c82610e006020820195898b8860609194939273ffffffffffffffffffffffffffffffffffffffff60808301967fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf845216602083015260408201520152565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081018452836111b9565b610e3f60a43593608435935190206123ee565b61209d565b91610e788373ffffffffffffffffffffffffffffffffffffffff166000526005602052604060002090815491600183019055565b146118bc565b6119df565b606460405162461bcd60e51b815260206004820152601d60248201527f4552433230566f7465733a207369676e617475726520657870697265640000006044820152fd5b346103655760e060031936011261036557610ee061036a565b610ee861038d565b6044359060643592610ef8610d50565b93804211610fee57610fc9610fe991610e0061069f97610fb6610f448773ffffffffffffffffffffffffffffffffffffffff166000526005602052604060002090815491600183019055565b9360405193849160208301968c8c8c8a91959493909260a09360c08401977f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9855273ffffffffffffffffffffffffffffffffffffffff8092166020860152166040840152606083015260808201520152565b610e3f60c4359360a435935190206123ee565b73ffffffffffffffffffffffffffffffffffffffff808416911614611615565b61148a565b606460405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e650000006044820152fd5b346103655760406003193601126103655760206110a061105061036a565b73ffffffffffffffffffffffffffffffffffffffff61106d61038d565b91166000526001835260406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b54604051908152f35b34610365576040600319360112610365576110c261036a565b63ffffffff602435818116810361036557602061113b6111357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff9373ffffffffffffffffffffffffffffffffffffffff6040976000868a5161111f8161117c565b828152015216600052600884528660002061166d565b506116b4565b84519381511684520151166020820152f35b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040810190811067ffffffffffffffff82111761119857604052565b61114d565b60c0810190811067ffffffffffffffff82111761119857604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761119857604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b906001820180921161059957565b9190820180921161059957565b1561124b57565b608460405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152fd5b156112bc57565b608460405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152fd5b919073ffffffffffffffffffffffffffffffffffffffff9283811680156114205761141e94831690611359821515611244565b846113848473ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b54611391828210156112b5565b036113bc8473ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b556113e78473ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b8054860190556040518581527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602090a361199e565b565b608460405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152fd5b9073ffffffffffffffffffffffffffffffffffffffff918281169283156115ac578216938415611542578061152c7f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259461150761153d9573ffffffffffffffffffffffffffffffffffffffff166000526001602052604060002090565b9073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b556040519081529081906020820190565b0390a3565b608460405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152fd5b608460405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152fd5b1561161c57565b606460405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e617475726500006044820152fd5b6040519061141e8261117c565b80548210156116855760005260206000200190600090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906040516116c18161117c565b602081935463ffffffff81168352811c910152565b73ffffffffffffffffffffffffffffffffffffffff16600052600860205260406000208054801560001461170c57506000919050565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff9160001961173892019061166d565b505460201c1690565b1561174857565b606460405162461bcd60e51b815260206004820152601f60248201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e6564006044820152fd5b73ffffffffffffffffffffffffffffffffffffffff906117ad438410611741565b166000526008602052604060002080549160008360058111611864575b50905b83821061181d575050816117e357506000919050565b610908611819916000197bffffffffffffffffffffffffffffffffffffffffffffffffffffffff94019060005260206000200190565b1690565b9092611829818561248a565b908263ffffffff611844610953858860005260206000200190565b1611156118545750925b906117cd565b935061185f90611229565b61184e565b8061098d6118749296939661249f565b908263ffffffff61188f610953858860005260206000200190565b16111561189f5750925b386117ca565b93506118aa90611229565b611899565b9190820391821161059957565b156118c357565b606460405162461bcd60e51b815260206004820152601960248201527f4552433230566f7465733a20696e76616c6964206e6f6e6365000000000000006044820152fd5b60076020527f6d5257204ebe7d88fd91ae87941cb2dd9d8062b64ae5a2bd2d28ec40b9fbf6df5473ffffffffffffffffffffffffffffffffffffffff9182166000908152604090205461141e93929081169116611a72565b9061141e9173ffffffffffffffffffffffffffffffffffffffff8091166000526007602052806040600020541690600080526040600020541690611a72565b9061141e929173ffffffffffffffffffffffffffffffffffffffff809116600052600760205280806040600020541692166000526040600020541690611a72565b61141e9173ffffffffffffffffffffffffffffffffffffffff8092166000928184526007602052806040852054168092856020527f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f60408720549660076020526040812094871694857fffffffffffffffffffffffff000000000000000000000000000000000000000082541617905580a45b919073ffffffffffffffffffffffffffffffffffffffff80821693168381141580611ce3575b611aa3575b50505050565b80611b23575b5082611ab6575b80611a9d565b7fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a72491611b05611b0a9273ffffffffffffffffffffffffffffffffffffffff166000526008602052604060002090565b611fdf565b60408051928352602083019190915290a2388080611ab0565b8060005260086020527fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7246040600020805480159182600014611cc057611b67611660565b6000815260006020820152915b611bc1611ba060208501517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1690565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1690565b92611bcc8985612864565b94159081611ca9575b5015611c4857611bfd611c3292600019611bee876125f1565b93019060005260206000200190565b9063ffffffff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000083549260201b169116179055565b604080519182526020820192909252a238611aa9565b50611ca490611c5643612707565b90611c9f611c63866125f1565b611c7a611c6e611660565b63ffffffff9095168552565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166020840152565b611d73565b611c32565b5163ffffffff16905063ffffffff16431438611bd5565b611cdd611cd860001984018360005260206000200190565b6116b4565b91611b74565b50821515611a98565b6009549068010000000000000000821015611198576001820180600955821015611685576009600052805160209182015190911b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000001663ffffffff91909116177f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af90910155565b80546801000000000000000081101561119857611d959160018201815561166d565b611dd757815160209283015190921b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000001663ffffffff92909216919091179055565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b60095490918115918215611f1d57611e1c611660565b60008152600060208201525b611e5e611e57611ba060208401517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1690565b9586612871565b93159081611f06575b5015611eac5761141e90611bfd600019611e80866125f1565b920160096000527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0190565b5061141e611eb943612707565b611f01611ec5856125f1565b611edc611ed0611660565b63ffffffff9094168452565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166020830152565b611cec565b5163ffffffff16905063ffffffff16431438611e67565b6009600052611f4d7f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7ae82016116b4565b611e28565b60095490918115918215611faa57611f68611660565b60008152600060208201525b611e5e611fa3611ba060208401517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1690565b9586612864565b6009600052611fda7f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7ae82016116b4565b611f74565b90918154918215928360001461208057611ff7611660565b60008152600060208201525b612039612032611ba060208401517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1690565b9687612871565b94159081612069575b501561205b57611bfd61141e92600019611bee876125f1565b5061141e90611c5643612707565b5163ffffffff16905063ffffffff16431438612042565b612098611cd860001983018460005260206000200190565b612003565b916120b493916120ac9361222b565b9190916120f0565b90565b600511156120c157565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6120f9816120b7565b806121015750565b61210a816120b7565b600181036121575760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606490fd5b612160816120b7565b600281036121ad5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606490fd5b806121b96003926120b7565b146121c057565b60405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60448201527f75650000000000000000000000000000000000000000000000000000000000006064820152608490fd5b9291907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083116122bb5791608094939160ff602094604051948552168484015260408301526060820152600093849182805260015afa156122ae57815173ffffffffffffffffffffffffffffffffffffffff8116156122a8579190565b50600190565b50604051903d90823e3d90fd5b50505050600090600390565b73ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163014806123c5575b1561232f577f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101907f000000000000000000000000000000000000000000000000000000000000000082527f000000000000000000000000000000000000000000000000000000000000000060408201527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260a081526123bf8161119d565b51902090565b507f00000000000000000000000000000000000000000000000000000000000000004614612306565b6123f66122c7565b906040519060208201927f1901000000000000000000000000000000000000000000000000000000000000845260228301526042820152604281526080810181811067ffffffffffffffff8211176111985760405251902090565b811561245b570490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b90808216911860011c81018091116105995790565b80156125d9578061257261256b61256161255761254d61254361253961252f60016120b49a6000908b60801c806125cd575b508060401c806125c0575b508060201c806125b3575b508060101c806125a6575b508060081c80612599575b508060041c8061258c575b508060021c8061257f575b50821c612578575b811c1b612528818b612451565b0160011c90565b612528818a612451565b6125288189612451565b6125288188612451565b6125288187612451565b6125288186612451565b6125288185612451565b8092612451565b906125df565b810161251b565b6002915091019038612513565b6004915091019038612508565b60089150910190386124fd565b60109150910190386124f2565b60209150910190386124e7565b60409150910190386124dc565b915050608090386124d1565b50600090565b90808210156125ec575090565b905090565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff9081811161261a571690565b608460405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203260448201527f32342062697473000000000000000000000000000000000000000000000000006064820152fd5b6bffffffffffffffffffffffff9081811161269d571690565b608460405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203960448201527f36206269747300000000000000000000000000000000000000000000000000006064820152fd5b63ffffffff90818111612718571690565b608460405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201527f32206269747300000000000000000000000000000000000000000000000000006064820152fd5b1561278957565b608460405162461bcd60e51b815260206004820152603060248201527f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f60448201527f766572666c6f77696e6720766f746573000000000000000000000000000000006064820152fd5b156127fa57565b608460405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60448201527f63650000000000000000000000000000000000000000000000000000000000006064820152fd5b9081039081116105995790565b908101809111610599579056fea164736f6c6343000812000a",
    "sourceMap": "180:338:114:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;180:338:114;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;180:338:114;;;;;;;;;2240:5:39;180:338:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;2240:5:39;180:338:114;;;-1:-1:-1;180:338:114;;;;;;;;;;-1:-1:-1;;;180:338:114;;;-1:-1:-1;180:338:114;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;180:338:114;;;;;;;-1:-1:-1;180:338:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;-1:-1:-1;;180:338:114;;;;;4593:6:39;180:338:114;;:::i;:::-;;;719:10:51;;4593:6:39;:::i;:::-;180:338:114;;;4617:4:39;180:338:114;;;;;;;;-1:-1:-1;;180:338:114;;;;;;3329:12:39;180:338:114;;;;;;;;;;;;-1:-1:-1;;180:338:114;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;-1:-1:-1;180:338:114;4089:11:39;180:338:114;;4089:27:39;719:10:51;180:338:114;-1:-1:-1;180:338:114;;;;;;;;;;;;;4089:27:39;180:338:114;11351:37:39;-1:-1:-1;;11351:37:39;;11347:243;;180:338:114;5441:6:39;;;;:::i;:::-;180:338:114;;4089:11:39;180:338:114;;;;;11347:243:39;11412:26;;;180:338:114;;11539:25:39;180:338:114;5441:6:39;180:338:114;;719:10:51;11539:25:39;;:::i;:::-;11347:243;;180:338:114;;;;-1:-1:-1;;;180:338:114;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;180:338:114;;;;;;;;3173:2:39;180:338:114;;;;;;;;-1:-1:-1;;180:338:114;;;;;;2953:20:41;;:::i;:::-;180:338:114;;;;;;;;;;;-1:-1:-1;;180:338:114;;;;;;;:::i;:::-;719:10:51;-1:-1:-1;180:338:114;4089:11:39;180:338:114;;4089:27:39;180:338:114;;-1:-1:-1;180:338:114;;;;;;;;;;;;;4089:27:39;180:338:114;;;;;;;;;;6038:38:39;719:10:51;;6038:38:39;:::i;180:338:114:-;;:::i;:::-;;;;;-1:-1:-1;;180:338:114;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;-1:-1:-1;;180:338:114;;;;;;;:::i;:::-;;;;;;8650:21:39;;;180:338:114;;;9088:6:39;180:338:114;6986:55:42;180:338:114;8778:22:39;;180:338:114;8778:22:39;180:338:114;8778:22:39;:::i;:::-;;180:338:114;;8778:22:39;8946:18;;180:338:114;;8669:1:39;180:338:114;8669:1:39;180:338:114;;;8669:1:39;180:338:114;;;8946:18:39;180:338:114;;;;;;;;;;;-1:-1:-1;;8999:37:39;;180:338:114;;8999:37:39;9088:6;:::i;:::-;6885:90:42;2024:16:43;8778:22:39;180:338:114;6893:29:42;;6885:90;:::i;:::-;6986:55;:::i;:::-;180:338:114;;;;;-1:-1:-1;;;180:338:114;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;180:338:114;;;;;;;;;;:::i;:::-;;-1:-1:-1;180:338:114;2312:10:42;180:338:114;;;-1:-1:-1;180:338:114;;;;;;;;;;;;;;-1:-1:-1;;180:338:114;;;;;5801:9:42;180:338:114;;:::i;:::-;719:10:51;5801:9:42;:::i;180:338:114:-;;;;;-1:-1:-1;;180:338:114;;;;;;;;:::i;:::-;;-1:-1:-1;180:338:114;2088:12:42;180:338:114;;;2070:47:42;180:338:114;-1:-1:-1;180:338:114;;2070:47:42;:::i;:::-;180:338:114;;;;;;;;;;;;;-1:-1:-1;;180:338:114;;;;;;;;:::i;:::-;;-1:-1:-1;180:338:114;-1:-1:-1;180:338:114;;;;-1:-1:-1;180:338:114;;;;;;;;;;;;;-1:-1:-1;;180:338:114;;;;;;1755:53:43;1773:34;180:338:114;;:::i;1773:34:43:-;1755:53;:::i;:::-;180:338:114;;;;;;;;;;;;;-1:-1:-1;;180:338:114;;;;;;;;:::i;:::-;;-1:-1:-1;180:338:114;2712:7:41;180:338:114;;;;-1:-1:-1;180:338:114;;;;;;;;;;;;;-1:-1:-1;;180:338:114;;;;;;;3499:70:42;3521:12;3507:26;;3499:70;:::i;:::-;3605:23;180:338:114;4960:15:42;-1:-1:-1;4985:21:42;5030:1;5021:10;;5017:244;;180:338:114;5271:244:42;;5278:10;;;;;;5556:52;:9;;;:52;180:338:114;-1:-1:-1;5556:52:42;180:338:114;;;;;;;;5556:52:42;3605:23;10202:110;;180:338:114;;5572:36:42;;10202:110;;5572:30;180:338:114;;;;;5572:36:42;5556:52;;5271:244;5318:23;;;;;;:::i;:::-;3605;10202:110;;5359:25;;180:338:114;5359:35:42;10202:110;;;5359:25;180:338:114;;;;;5359:35:42;180:338:114;5359:49:42;;;;5428:10;5355:150;;5271:244;;;5355:150;5483:7;;;;;:::i;:::-;5355:150;;5017:244;5070:17;;5061:26;5070:17;;;;;:::i;:::-;5061:26;;:::i;:::-;3605:23;10202:110;;5105:25;;180:338:114;5105:35:42;10202:110;;;5105:25;10079:239;5105:35;180:338:114;5105:49:42;;;;5174:10;5101:150;;5017:244;;;5101:150;5229:7;;;;;:::i;:::-;5101:150;;180:338:114;;;;;;-1:-1:-1;;180:338:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;180:338:114;;;;;;;;;;-1:-1:-1;;;180:338:114;;;-1:-1:-1;180:338:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;180:338:114;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;-1:-1:-1;;180:338:114;;;;;;;:::i;:::-;;;;;;9505:21:39;;;180:338:114;;9660:18:39;;-1:-1:-1;7260:60:42;9660:18:39;;;10067:6;9660:18;180:338:114;;8669:1:39;180:338:114;8669:1:39;180:338:114;;;8669:1:39;180:338:114;;;9660:18:39;180:338:114;9688:71:39;9696:24;;;;9688:71;:::i;:::-;180:338:114;9793:18:39;;180:338:114;;8669:1:39;180:338:114;8669:1:39;180:338:114;;;8669:1:39;180:338:114;;;9793:18:39;180:338:114;9930:22:39;180:338:114;9930:22:39;180:338:114;;8778:22:39;180:338:114;;9930:22:39;180:338:114;;;;;9978:37:39;;180:338:114;;9978:37:39;10067:6;:::i;:::-;7260:60:42;:::i;180:338:114:-;;;;-1:-1:-1;;;180:338:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;180:338:114;;;;;;;:::i;:::-;;;719:10:51;;-1:-1:-1;180:338:114;4089:11:39;180:338:114;;4089:27:39;180:338:114;;-1:-1:-1;180:338:114;;;;;;;;;;;;;4089:27:39;180:338:114;6809:35:39;;;;180:338:114;;6945:34:39;180:338:114;;719:10:51;;6945:34:39;:::i;180:338:114:-;;;;-1:-1:-1;;;180:338:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;180:338:114;;;;;3881:6:39;180:338:114;;:::i;:::-;;;719:10:51;;3881:6:39;:::i;180:338:114:-;;;;;-1:-1:-1;;180:338:114;;;;;;1489:36:43;1507:17;180:338:114;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;-1:-1:-1;;180:338:114;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;6095:15:42;;;:25;180:338:114;;6181:169:42;6360:64;180:338:114;6452:9:42;180:338:114;;;6235:58:42;;;;180:338:114;6235:58:42;;;;;;1441:71;;;;;180:338:114;1441:71:42;;;180:338:114;1441:71:42;180:338:114;;;1441:71:42;;;180:338:114;1441:71:42;;;180:338:114;1441:71:42;180:338:114;1441:71:42;6235:58;;;;;;;;;:::i;:::-;6208:87;180:338:114;;;;;;;6225:69:42;;6208:87;:::i;:::-;6181:169;:::i;:::-;6377:17;;;180:338:114;;-1:-1:-1;180:338:114;3231:7:41;180:338:114;;;-1:-1:-1;180:338:114;;;;;1050:1:52;180:338:114;;;;3111:203:41;6377:17:42;6368:26;6360:64;:::i;:::-;6452:9;:::i;180:338:114:-;;;;-1:-1:-1;;;180:338:114;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;180:338:114;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;:::i;:::-;2146:15:41;;;:27;180:338:114;;2411:28:41;2449:58;2301:16;2249:79;2543:5;2301:16;2249:79;2301:16;;180:338:114;;-1:-1:-1;180:338:114;3231:7:41;180:338:114;;;-1:-1:-1;180:338:114;;;;;1050:1:52;180:338:114;;;;3111:203:41;2301:16;180:338:114;;;2249:79:41;;;180:338:114;2249:79:41;;;;;;;1125:95;;;;;;;;;;;180:338:114;1125:95:41;180:338:114;;;;;;1125:95:41;;;180:338:114;;1125:95:41;;;180:338:114;1125:95:41;;;180:338:114;1125:95:41;;;180:338:114;1125:95:41;180:338:114;1125:95:41;2249:79;2355:28;180:338:114;;;;;;;2239:90:41;;2355:28;:::i;2411:::-;180:338:114;;;;;;2457:15:41;2449:58;:::i;:::-;2543:5;:::i;180:338:114:-;;;;-1:-1:-1;;;180:338:114;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;180:338:114;;;;;;4089:27:39;180:338:114;;:::i;:::-;;;;:::i;:::-;;;-1:-1:-1;180:338:114;4089:11:39;180:338:114;;;-1:-1:-1;180:338:114;;;;;;;;;;;;;4089:27:39;180:338:114;;;;;;;;;;;;-1:-1:-1;;180:338:114;;;;;;;:::i;:::-;;;;;;;;;;;;;1867:26:42;180:338:114;;;;;-1:-1:-1;180:338:114;;;;;;:::i;:::-;;;;;;;-1:-1:-1;180:338:114;1867:12:42;180:338:114;;;-1:-1:-1;180:338:114;1867:26:42;:::i;:::-;180:338:114;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;5235:1:42;180:338:114;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;;-1:-1:-1;;;180:338:114;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;180:338:114;;;;;;;;;;;;;;;;;;;;;;;7473:818:39;;;180:338:114;;;;;7599:18:39;;180:338:114;;8277:6:39;180:338:114;;;7677:16:39;7669:64;7677:16;;;7669:64;:::i;:::-;7815:15;;;180:338:114;;8669:1:39;180:338:114;8669:1:39;180:338:114;;;8669:1:39;180:338:114;;;7815:15:39;180:338:114;7840:72:39;7848:21;;;;7840:72;:::i;:::-;180:338:114;7946:15:39;;180:338:114;;8669:1:39;180:338:114;8669:1:39;180:338:114;;;8669:1:39;180:338:114;;;7946:15:39;180:338:114;8161:13:39;;180:338:114;;8669:1:39;180:338:114;8669:1:39;180:338:114;;;8669:1:39;180:338:114;;;8161:13:39;180:338:114;;;;;;;;;;;8210:26:39;;180:338:114;;8210:26:39;8277:6;:::i;:::-;7473:818::o;180:338:114:-;;;;-1:-1:-1;;;180:338:114;;;;;;;;;;;;;;;;;;;;;;;10504:370:39;;180:338:114;;;;;10635:19:39;;;180:338:114;;;;10713:21:39;;;180:338:114;;10784:18:39;:27;10835:32;10784:18;;10835:32;10784:18;180:338:114;;;;10784:11:39;180:338:114;;;;;;;10784:18:39;180:338:114;;;;;;;;;;;;10784:27:39;180:338:114;;;;;;;;;;;;;;10835:32:39;;;;10504:370::o;180:338:114:-;;;;-1:-1:-1;;;180:338:114;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;180:338:114;;;;;;;;;;;;;;;;;;;;;;;1125:95:41;;;;:::o;:::-;;180:338:114;;-1:-1:-1;;;1125:95:41;;;;;;;;;;;180:338:114;1125:95:41;180:338:114;;;1125:95:41;;180:338:114;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;180:338:114;;-1:-1:-1;180:338:114;;;-1:-1:-1;180:338:114;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::o;2417:243:42:-;180:338:114;;-1:-1:-1;180:338:114;2523:12:42;180:338:114;;;-1:-1:-1;180:338:114;;;2592:8:42;;:51;:8;;;-1:-1:-1;;;2417:243:42;-1:-1:-1;2417:243:42:o;2592:51::-;180:338:114;;-1:-1:-1;;2607:30:42;180:338:114;;2607:30:42;;:::i;:::-;180:338:114;;;;;2417:243:42;:::o;180:338:114:-;;;;:::o;:::-;;;;-1:-1:-1;;;180:338:114;;;;;;;;;;;;;;;;;;2853:265:42;180:338:114;2853:265:42;2970:70;2992:12;2978:26;;2970:70;:::i;:::-;180:338:114;-1:-1:-1;180:338:114;3076:12:42;180:338:114;;;-1:-1:-1;180:338:114;;;4960:15:42;-1:-1:-1;4985:21:42;5030:1;5021:10;;5017:244;;2853:265;5271:244;;5278:10;;;;;;-1:-1:-1;;5556:9:42;;;-1:-1:-1;;;2853:265:42;-1:-1:-1;2853:265:42:o;5556:52::-;5572:30;:36;180:338:114;-1:-1:-1;;180:338:114;;;5572:30:42;10202:110;;;;;;10079:239;;5572:36;180:338:114;2853:265:42;:::o;5271:244::-;5318:23;;;;;;:::i;:::-;5359:25;;180:338:114;5359:35:42;:25;;;10202:110;;;;;;10079:239;;5359:35;180:338:114;5359:49:42;;;;5428:10;5355:150;;5271:244;;;5355:150;5483:7;;;;;:::i;:::-;5355:150;;5017:244;5070:17;;5061:26;5070:17;;;;;:::i;5061:26::-;5105:25;;180:338:114;5105:35:42;:25;;;10202:110;;;;;;10079:239;;5105:35;180:338:114;5105:49:42;;;;5174:10;5101:150;;5017:244;;;5101:150;5229:7;;;;;:::i;:::-;5101:150;;180:338:114;;;;;;;;;;:::o;1441:71:42:-;;;;:::o;:::-;;180:338:114;;-1:-1:-1;;;1441:71:42;;;;;;;;;;;180:338:114;1441:71:42;180:338:114;;;1441:71:42;;7467:254;2312:10;180:338:114;;;;;;;;;;;;;;;;7707:6:42;;7467:254;180:338:114;;;;;7707:6:42;:::i;7467:254::-;;7707:6;7467:254;180:338:114;;;;;;2312:10:42;180:338:114;;;;;;;;;;;;;;;;;7707:6:42;;:::i;7467:254::-;;7707:6;7467:254;;180:338:114;;;;-1:-1:-1;180:338:114;2312:10:42;180:338:114;;;;;-1:-1:-1;180:338:114;;;;;-1:-1:-1;180:338:114;;-1:-1:-1;180:338:114;;;7707:6:42;;:::i;7892:380::-;8248:16;7892:380;180:338:114;;;;-1:-1:-1;180:338:114;;;;2312:10:42;180:338:114;;;;;;;;;;;;;8138:54:42;180:338:114;;;;;2312:10:42;180:338:114;;;;;;;;;;;;;;;;;8138:54:42;;8278:627;;;180:338:114;;;;;;8398:10:42;;;;:24;;;8278:627;8394:505;;8278:627;;;;;:::o;8394:505::-;8442:17;8438:221;;8394:505;8677:17;;8673:216;;8394:505;;;;8673:216;8827:47;8772:17;;8755:49;8772:17;180:338:114;;;;8772:12:42;180:338:114;;;;;;;8772:17:42;8755:49;:::i;:::-;180:338:114;;;;;;;;;;;;;;8827:47:42;8673:216;;;;;8438:221;180:338:114;8457:1:42;180:338:114;8537:12:42;180:338:114;;8597:47:42;180:338:114;8457:1:42;180:338:114;;;9218:8:42;;:59;;;;;;180:338:114;;:::i;:::-;8457:1:42;180:338:114;;8457:1:42;180:338:114;9229:16:42;;180:338:114;9218:59:42;;9292:25;180:338:114;;9304:13:42;;180:338:114;;;;;;;;;;9292:25:42;9343:20;;;;;:::i;:::-;9382:7;;:44;;;;9218:59;-1:-1:-1;9378:333:42;;;9446:29;:67;9484:29;-1:-1:-1;;9484:29:42;;;:::i;:::-;180:338:114;;9446:29:42;10202:110;;;;;;10079:239;;9446:29;180:338:114;;;;;;;;;;;;;;;9446:67:42;180:338:114;;;;;;;;;;;;;8597:47:42;8438:221;;;9378:333;9625:12;9552:144;9625:12;9607:31;9625:12;9607:31;:::i;:::-;9647:29;9584:94;9647:29;;;:::i;:::-;9584:94;180:338:114;;:::i;:::-;;;;;;;;9584:94:42;180:338:114;;;9584:94:42;;180:338:114;;9584:94:42;9552:144;:::i;:::-;9378:333;;9382:44;180:338:114;;;;-1:-1:-1;180:338:114;;9414:12:42;9393:33;9382:44;;;9218:59;180:338:114;9248:29:42;-1:-1:-1;;180:338:114;;9248:29:42;10202:110;;;;;;10079:239;;9248:29;180:338:114;:::i;:::-;9218:59:42;;;8398:24;8412:10;;;;8398:24;;180:338:114;7003:23:42;180:338:114;;;;;;;;;;;;7003:23:42;180:338:114;;;;;;7003:23:42;-1:-1:-1;180:338:114;;;;;;;;;;;;;;;;;;;;;;;;7473:818:39:o;180:338:114:-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;7473:818:39:o;180:338:114:-;;;;;;;;;;8911:816:42;7003:23;180:338:114;8911:816:42;;9218:8;;;:59;;;;180:338:114;;:::i;:::-;9225:1:42;180:338:114;;9225:1:42;9229:16;;;180:338:114;9218:59:42;9343:20;9292:25;180:338:114;9304:13:42;;;180:338:114;;;;;9292:25:42;9343:20;;;:::i;:::-;9382:7;;:44;;;;9218:59;-1:-1:-1;9378:333:42;;;9446:67;9484:29;9446;-1:-1:-1;;9484:29:42;;;:::i;:::-;180:338:114;;3605:23:42;10202:110;;;;10079:239;;9378:333;9625:12;9552:144;9607:31;9625:12;9607:31;:::i;:::-;9584:94;9647:29;;;:::i;:::-;9584:94;180:338:114;;:::i;:::-;;;;;;;;9584:94:42;180:338:114;;9304:13:42;9584:94;;180:338:114;;9584:94:42;9552:144;:::i;9382:44::-;180:338:114;;;;-1:-1:-1;180:338:114;;9414:12:42;9393:33;9382:44;;;9218:59;3605:23;10202:110;;180:338:114;10202:110:42;;;180:338:114;:::i;:::-;9218:59:42;;8911:816;7277:23;180:338:114;8911:816:42;;9218:8;;;:59;;;;180:338:114;;:::i;:::-;9225:1:42;180:338:114;;9225:1:42;9229:16;;;180:338:114;9218:59:42;9343:20;9292:25;180:338:114;9304:13:42;;;180:338:114;;;;;9292:25:42;9343:20;;;:::i;9218:59::-;3605:23;10202:110;;180:338:114;10202:110:42;;;180:338:114;:::i;:::-;9218:59:42;;8911:816;;;180:338:114;;9218:8:42;;;:59;;;;;;180:338:114;;:::i;:::-;9225:1:42;180:338:114;;9225:1:42;9229:16;;;180:338:114;9218:59:42;9343:20;9292:25;180:338:114;9304:13:42;;;180:338:114;;;;;9292:25:42;9343:20;;;:::i;:::-;9382:7;;:44;;;;9218:59;-1:-1:-1;9378:333:42;;;9446:29;:67;9484:29;-1:-1:-1;;9484:29:42;;;:::i;9378:333::-;9625:12;9552:144;9625:12;9607:31;9625:12;9607:31;:::i;9382:44::-;180:338:114;;;;-1:-1:-1;180:338:114;;9414:12:42;9393:33;9382:44;;;9218:59;180:338:114;9248:29:42;-1:-1:-1;;180:338:114;;9248:29:42;10202:110;;;;;;10079:239;;180:338:114;9218:59:42;;6696:270:55;;6927:5;6696:270;;6880:25;6696:270;6880:25;:::i;:::-;6927:5;;;;:::i;:::-;6696:270;:::o;180:338:114:-;;-1:-1:-1;180:338:114;;;:::o;:::-;;;;;;;;;;570:511:55;180:338:114;;;:::i;:::-;638:29:55;;;683:7;:::o;634:441::-;180:338:114;;;:::i;:::-;743:29:55;734:38;;743:29;;180:338:114;;-1:-1:-1;;;788:34:55;;180:338:114;788:34:55;;;180:338:114;;;;;;;;;;;;;788:34:55;730:345;180:338:114;;;:::i;:::-;852:35:55;843:44;;852:35;;180:338:114;;-1:-1:-1;;;903:41:55;;180:338:114;903:41:55;;;180:338:114;;;;;;;;;;;;;788:34:55;839:236;180:338:114;;974:30:55;180:338:114;;:::i;:::-;965:39:55;961:114;;570:511::o;961:114::-;180:338:114;;-1:-1:-1;;;1020:44:55;;180:338:114;1020:44:55;;;180:338:114;;;;;;;;;;;;;;;;;;788:34:55;5069:1494;;;;6119:66;6106:79;;6102:161;;180:338:114;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6374:24:55;;;;;;;;;;;;;;180:338:114;;;6412:20:55;6408:101;;6519:37;5069:1494;:::o;6408:101::-;6448:50;6374:24;6448:50;:::o;6374:24::-;180:338:114;;;;;;;;;;;6102:161:55;6201:51;;;;6217:1;6201:51;6221:30;6201:51;:::o;3152:308:56:-;180:338:114;3245:12:56;180:338:114;3236:4:56;3228:29;:66;;;3152:308;3224:230;;;3317:24;3310:31;:::o;3224:230::-;180:338:114;;3642:73:56;;;3401:10;;180:338:114;;3413:12:56;180:338:114;;;;3427:15:56;180:338:114;;;;3686:13:56;180:338:114;;;;3236:4:56;180:338:114;;;;;3642:73:56;;;;;:::i;:::-;180:338:114;3632:84:56;;3372:71;:::o;3228:66::-;3278:16;;3261:13;:33;3228:66;;4348:165;4473:20;;:::i;:::-;180:338:114;;;8470:57:55;;;;180:338:114;;;;;;;;;;;;;8470:57:55;;180:338:114;;;;;;;;;;;;;;;8460:68:55;;4348:165:56;:::o;180:338:114:-;;;;;;;:::o;:::-;;;;;;;;;;805:153:59;;931:5;;;941;;180:338:114;;;;;;;;;805:153:59;:::o;6305:1642::-;6376:6;;6372:45;;7119:7;7919:10;7860:26;7811;7762;7713;7664;7615;7566;180:338:114;7907:23:59;7119:7;6381:1;180:338:114;;;;8535:16:59;8531:99;;6305:1642;180:338:114;;;;8647:15:59;8643:96;;6305:1642;180:338:114;;;;8756:15:59;8752:96;;6305:1642;180:338:114;;;;8865:15:59;8861:96;;6305:1642;180:338:114;;;;8974:14:59;8970:93;;6305:1642;180:338:114;;;;9080:14:59;9076:93;;6305:1642;180:338:114;;;;9186:14:59;9182:93;;6305:1642;180:338:114;;;9288:64:59;;6305:1642;180:338:114;;;7576:10:59;;;;:::i;:::-;180:338:114;;;;;7566:26:59;7625:10;;;;:::i;7615:26::-;7674:10;;;;:::i;7664:26::-;7723:10;;;;:::i;7713:26::-;7772:10;;;;:::i;7762:26::-;7821:10;;;;:::i;7811:26::-;7870:10;;;;:::i;7860:26::-;7919:10;;;:::i;:::-;7907:23;;:::i;9288:64::-;180:338:114;;9288:64:59;;9182:93;180:338:114;9220:11:59;;180:338:114;;9182:93:59;;;;9076;180:338:114;9114:11:59;;180:338:114;;9076:93:59;;;;8970;180:338:114;9008:11:59;;180:338:114;;8970:93:59;;;;8861:96;180:338:114;8900:12:59;;180:338:114;;8861:96:59;;;;8752;180:338:114;8791:12:59;;180:338:114;;8752:96:59;;;;8643;180:338:114;8682:12:59;;180:338:114;;8643:96:59;;;;8531:99;8571:13;;;180:338:114;8531:99:59;;;;6372:45;6398:8;6381:1;6398:8;:::o;588:104::-;;672:5;;;;;;:13;588:104;:::o;672:13::-;;;588:104;:::o;2836:192:60:-;180:338:114;2920:26:60;;;;180:338:114;;;2836:192:60;:::o;180:338:114:-;;;;-1:-1:-1;;;180:338:114;;;;;;;;;;;;;;;;;;;;;;;11168:187:60;180:338:114;11250:25:60;;;;180:338:114;;;11168:187:60;:::o;180:338:114:-;;;;-1:-1:-1;;;180:338:114;;;;;;;;;;;;;;;;;;;;;;;15264:187:60;180:338:114;15346:25:60;;;;180:338:114;;;15264:187:60;:::o;180:338:114:-;;;;-1:-1:-1;;;180:338:114;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;180:338:114;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;180:338:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o",
    "linkReferences": {},
    "immutableReferences": {
      "32060": [
        {
          "start": 8973,
          "length": 32
        }
      ],
      "32062": [
        {
          "start": 9160,
          "length": 32
        }
      ],
      "32064": [
        {
          "start": 8926,
          "length": 32
        }
      ],
      "32066": [
        {
          "start": 9052,
          "length": 32
        }
      ],
      "32068": [
        {
          "start": 9090,
          "length": 32
        }
      ],
      "32070": [
        {
          "start": 9017,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "DOMAIN_SEPARATOR()": "3644e515",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "burn(address,uint256)": "9dc29fac",
    "checkpoints(address,uint32)": "f1127ed8",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "delegate(address)": "5c19a95c",
    "delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": "c3cda520",
    "delegates(address)": "587cde1e",
    "getCurrentVotes(address)": "b4b5ea57",
    "getPastTotalSupply(uint256)": "8e539e8c",
    "getPastVotes(address,uint256)": "3a46b1a8",
    "getPriorVotes(address,uint256)": "782d6fe1",
    "getVotes(address)": "9ab24eb0",
    "increaseAllowance(address,uint256)": "39509351",
    "mint(address,uint256)": "40c10f19",
    "name()": "06fdde03",
    "nonces(address)": "7ecebe00",
    "numCheckpoints(address)": "6fcfff45",
    "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"pos\",\"type\":\"uint32\"}],\"name\":\"checkpoints\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"fromBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint224\",\"name\":\"votes\",\"type\":\"uint224\"}],\"internalType\":\"struct ERC20Votes.Checkpoint\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getCurrentVotes\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPriorVotes\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"numCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of votes.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"See {IERC20Permit-DOMAIN_SEPARATOR}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"checkpoints(address,uint32)\":{\"details\":\"Get the `pos`-th checkpoint for `account`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"delegate(address)\":{\"details\":\"Delegate votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`\"},\"delegates(address)\":{\"details\":\"Get the address `account` is currently delegating to.\"},\"getCurrentVotes(address)\":{\"details\":\"Comp version of the {getVotes} accessor, with `uint96` return type.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Retrieve the `totalSupply` at the end of `blockNumber`. Note, this value is the sum of all balances. It is NOT the sum of all the delegated votes! Requirements: - `blockNumber` must have been already mined\"},\"getPastVotes(address,uint256)\":{\"details\":\"Retrieve the number of votes for `account` at the end of `blockNumber`. Requirements: - `blockNumber` must have been already mined\"},\"getPriorVotes(address,uint256)\":{\"details\":\"Comp version of the {getPastVotes} accessor, with `uint96` return type.\"},\"getVotes(address)\":{\"details\":\"Gets the current votes balance for `account`\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC20Permit-nonces}.\"},\"numCheckpoints(address)\":{\"details\":\"Get number of checkpoints for `account`.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC20Permit-permit}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/mocks/CompToken.sol\":\"CompToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[\":@gnosis.pm/safe-contracts/=lib/safe-contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@prb/test/=lib/prb-test/src/\",\":@zodiac/=lib/zodiac/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":prb-test/=lib/prb-test/src/\",\":safe-contracts/=lib/safe-contracts/contracts/\",\":zodiac/=lib/zodiac/contracts/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0xf5324a55ee9c0b4a840ea57c055ac9d046f88986ceef567e1cf68113e46a79c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f41fe2bddc33c17ccccfc25379b1869354e9ee62d8b28d2acc95229eeba37a86\",\"dweb:/ipfs/Qmb6SF2XL2uSvH6k5JSjtx4Xoqz41ACkhdAhtbW1Yh3RiY\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xf84f1c4f09ba032cbcd0c2fa13517e94b1c1350837a0c47a51e7cde92704e0b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbc0cf8f8fda53daa8ed06bec221ac47449d6d85d14bc22c2b2ce4c49bd19fde\",\"dweb:/ipfs/QmRHYgHcWJq3gmLcy7BQijDahwv6wrzbkpThLxjDEDR8XR\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Votes.sol\":{\"keccak256\":\"0x8abe7259a724711a0862bd89e2b94c76dd0e8b75576b8cc1be4b2203345a3060\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b088508bc2f253037fbc877eed265474838b1a8a5bfcedcea42d083cc7c48acc\",\"dweb:/ipfs/QmUsfs7Y2JZMh683XmS8QEzyiph3S8uPjdBs9upTNUFmR7\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20VotesComp.sol\":{\"keccak256\":\"0x3e2cf78abe35170695b26fb9f820fe7bfeed607604f4d6c1261f811704c79f16\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3d677e79ed97d35fa1fa3df7b45df9de5947e0939bb7229bfb05bc00fef9ed45\",\"dweb:/ipfs/QmRiFfC3KJH6KX7hP5cdasrxvEVbB2Fy8UJDDbf2xNSax9\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x35e258421ae206f3db37281cea70871b4c3553914734aa76139a41af60ac1abb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ef94b6bc4ee356db612a1849c615f7dd4b15542d6c8584c86bb9243a7913cf0\",\"dweb:/ipfs/QmaxFj5NFpAjjitZtHPNS9PPtCuBATaRz9ktDDRCQCQ83y\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb\",\"dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x948d8b2d18f38141ec78c5229d770d950ebc781ed3f44cc9e3ccbb9fded5846a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7311ac950ed2d81f3ccf1784a926efbfc82a86dcb5c98d41eb3792c0cac63a2f\",\"dweb:/ipfs/QmRRwCUHewkPmehx8QRYENFoWyLNx8UEZGULxWYUeSZdTS\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xba1ae0497d71bf30f3710c38aba13a5b68c31d81ff04dd73e5dd55a05a9c903d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d77f4aee3f6534fe2dbc6583385fc123340f8ccb9bf3c8c04555e538a3d9a4b5\",\"dweb:/ipfs/QmVtP4Fz9tB2DFvMHJaSFbLxnEHE1NKDA92fviV7jDkEnL\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"test/mocks/CompToken.sol\":{\"keccak256\":\"0x7c17142c6f85b4a4c090985e73a352a26273c9d70be79d43834569e9f2906da4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80dada3942f690b07203332085fd22aaa38d3dfee056a27a2a4793d6b698a5c6\",\"dweb:/ipfs/QmapNmKwPRir2iu6G9uZMKj6Dd2mYWWP9wQa2vTgvxUQBY\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.18+commit.87f61d96"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "delegator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "fromDelegate",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "toDelegate",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "DelegateChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "delegate",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "previousBalance",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newBalance",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DelegateVotesChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DOMAIN_SEPARATOR",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "pos",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "checkpoints",
          "outputs": [
            {
              "internalType": "struct ERC20Votes.Checkpoint",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "fromBlock",
                  "type": "uint32"
                },
                {
                  "internalType": "uint224",
                  "name": "votes",
                  "type": "uint224"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "delegatee",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "delegate"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "delegatee",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expiry",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "delegateBySig"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "delegates",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getCurrentVotes",
          "outputs": [
            {
              "internalType": "uint96",
              "name": "",
              "type": "uint96"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "blockNumber",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPastTotalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "blockNumber",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPastVotes",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "blockNumber",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPriorVotes",
          "outputs": [
            {
              "internalType": "uint96",
              "name": "",
              "type": "uint96"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getVotes",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "nonces",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "numCheckpoints",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "permit"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "DOMAIN_SEPARATOR()": {
            "details": "See {IERC20Permit-DOMAIN_SEPARATOR}."
          },
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "checkpoints(address,uint32)": {
            "details": "Get the `pos`-th checkpoint for `account`."
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "delegate(address)": {
            "details": "Delegate votes from the sender to `delegatee`."
          },
          "delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": {
            "details": "Delegates votes from signer to `delegatee`"
          },
          "delegates(address)": {
            "details": "Get the address `account` is currently delegating to."
          },
          "getCurrentVotes(address)": {
            "details": "Comp version of the {getVotes} accessor, with `uint96` return type."
          },
          "getPastTotalSupply(uint256)": {
            "details": "Retrieve the `totalSupply` at the end of `blockNumber`. Note, this value is the sum of all balances. It is NOT the sum of all the delegated votes! Requirements: - `blockNumber` must have been already mined"
          },
          "getPastVotes(address,uint256)": {
            "details": "Retrieve the number of votes for `account` at the end of `blockNumber`. Requirements: - `blockNumber` must have been already mined"
          },
          "getPriorVotes(address,uint256)": {
            "details": "Comp version of the {getPastVotes} accessor, with `uint96` return type."
          },
          "getVotes(address)": {
            "details": "Gets the current votes balance for `account`"
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "nonces(address)": {
            "details": "See {IERC20Permit-nonces}."
          },
          "numCheckpoints(address)": {
            "details": "Get number of checkpoints for `account`."
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "details": "See {IERC20Permit-permit}."
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@gnosis.pm/safe-contracts/=lib/safe-contracts/",
        ":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        ":@prb/test/=lib/prb-test/src/",
        ":@zodiac/=lib/zodiac/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-gas-snapshot/=lib/forge-gas-snapshot/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":prb-test/=lib/prb-test/src/",
        ":safe-contracts/=lib/safe-contracts/contracts/",
        ":zodiac/=lib/zodiac/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 10000
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "test/mocks/CompToken.sol": "CompToken"
      },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/governance/utils/IVotes.sol": {
        "keccak256": "0xf5324a55ee9c0b4a840ea57c055ac9d046f88986ceef567e1cf68113e46a79c0",
        "urls": [
          "bzz-raw://f41fe2bddc33c17ccccfc25379b1869354e9ee62d8b28d2acc95229eeba37a86",
          "dweb:/ipfs/Qmb6SF2XL2uSvH6k5JSjtx4Xoqz41ACkhdAhtbW1Yh3RiY"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d",
        "urls": [
          "bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d",
          "dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol": {
        "keccak256": "0xf84f1c4f09ba032cbcd0c2fa13517e94b1c1350837a0c47a51e7cde92704e0b5",
        "urls": [
          "bzz-raw://dbc0cf8f8fda53daa8ed06bec221ac47449d6d85d14bc22c2b2ce4c49bd19fde",
          "dweb:/ipfs/QmRHYgHcWJq3gmLcy7BQijDahwv6wrzbkpThLxjDEDR8XR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Votes.sol": {
        "keccak256": "0x8abe7259a724711a0862bd89e2b94c76dd0e8b75576b8cc1be4b2203345a3060",
        "urls": [
          "bzz-raw://b088508bc2f253037fbc877eed265474838b1a8a5bfcedcea42d083cc7c48acc",
          "dweb:/ipfs/QmUsfs7Y2JZMh683XmS8QEzyiph3S8uPjdBs9upTNUFmR7"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20VotesComp.sol": {
        "keccak256": "0x3e2cf78abe35170695b26fb9f820fe7bfeed607604f4d6c1261f811704c79f16",
        "urls": [
          "bzz-raw://3d677e79ed97d35fa1fa3df7b45df9de5947e0939bb7229bfb05bc00fef9ed45",
          "dweb:/ipfs/QmRiFfC3KJH6KX7hP5cdasrxvEVbB2Fy8UJDDbf2xNSax9"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0x35e258421ae206f3db37281cea70871b4c3553914734aa76139a41af60ac1abb",
        "urls": [
          "bzz-raw://2ef94b6bc4ee356db612a1849c615f7dd4b15542d6c8584c86bb9243a7913cf0",
          "dweb:/ipfs/QmaxFj5NFpAjjitZtHPNS9PPtCuBATaRz9ktDDRCQCQ83y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Counters.sol": {
        "keccak256": "0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1",
        "urls": [
          "bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee",
          "dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a",
        "urls": [
          "bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634",
          "dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba",
        "urls": [
          "bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb",
          "dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol": {
        "keccak256": "0x948d8b2d18f38141ec78c5229d770d950ebc781ed3f44cc9e3ccbb9fded5846a",
        "urls": [
          "bzz-raw://7311ac950ed2d81f3ccf1784a926efbfc82a86dcb5c98d41eb3792c0cac63a2f",
          "dweb:/ipfs/QmRRwCUHewkPmehx8QRYENFoWyLNx8UEZGULxWYUeSZdTS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xba1ae0497d71bf30f3710c38aba13a5b68c31d81ff04dd73e5dd55a05a9c903d",
        "urls": [
          "bzz-raw://d77f4aee3f6534fe2dbc6583385fc123340f8ccb9bf3c8c04555e538a3d9a4b5",
          "dweb:/ipfs/QmVtP4Fz9tB2DFvMHJaSFbLxnEHE1NKDA92fviV7jDkEnL"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad",
        "urls": [
          "bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278",
          "dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH"
        ],
        "license": "MIT"
      },
      "test/mocks/CompToken.sol": {
        "keccak256": "0x7c17142c6f85b4a4c090985e73a352a26273c9d70be79d43834569e9f2906da4",
        "urls": [
          "bzz-raw://80dada3942f690b07203332085fd22aaa38d3dfee056a27a2a4793d6b698a5c6",
          "dweb:/ipfs/QmapNmKwPRir2iu6G9uZMKj6Dd2mYWWP9wQa2vTgvxUQBY"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/mocks/CompToken.sol",
    "id": 50814,
    "exportedSymbols": {
      "CompToken": [50813],
      "ERC20": [28858],
      "ERC20Permit": [29108],
      "ERC20VotesComp": [29865]
    },
    "nodeType": "SourceUnit",
    "src": "33:486:114",
    "nodes": [
      {
        "id": 50769,
        "nodeType": "PragmaDirective",
        "src": "33:24:114",
        "nodes": [],
        "literals": ["solidity", "^", "0.8", ".18"]
      },
      {
        "id": 50773,
        "nodeType": "ImportDirective",
        "src": "59:119:114",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20VotesComp.sol",
        "file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20VotesComp.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50814,
        "sourceUnit": 29866,
        "symbolAliases": [
          {
            "foreign": {
              "id": 50770,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 28858,
              "src": "68:5:114",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 50771,
              "name": "ERC20Permit",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 29108,
              "src": "75:11:114",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 50772,
              "name": "ERC20VotesComp",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 29865,
              "src": "88:14:114",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 50813,
        "nodeType": "ContractDefinition",
        "src": "180:338:114",
        "nodes": [
          {
            "id": 50786,
            "nodeType": "FunctionDefinition",
            "src": "272:58:114",
            "nodes": [],
            "body": {
              "id": 50785,
              "nodeType": "Block",
              "src": "328:2:114",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "54657374",
                    "id": 50778,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "292:6:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_85cc825a98ec217d960f113f5f80a95d7fd18e3725d37df428eb14f880bdfc12",
                      "typeString": "literal_string \"Test\""
                    },
                    "value": "Test"
                  },
                  {
                    "hexValue": "54455354",
                    "id": 50779,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "300:6:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_852daa74cc3c31fe64542bb9b8764cfb91cc30f9acf9389071ffb44a9eefde46",
                      "typeString": "literal_string \"TEST\""
                    },
                    "value": "TEST"
                  }
                ],
                "id": 50780,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 50777,
                  "name": "ERC20",
                  "nameLocations": ["286:5:114"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 28858,
                  "src": "286:5:114"
                },
                "nodeType": "ModifierInvocation",
                "src": "286:21:114"
              },
              {
                "arguments": [
                  {
                    "hexValue": "54657374",
                    "id": 50782,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "320:6:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_85cc825a98ec217d960f113f5f80a95d7fd18e3725d37df428eb14f880bdfc12",
                      "typeString": "literal_string \"Test\""
                    },
                    "value": "Test"
                  }
                ],
                "id": 50783,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 50781,
                  "name": "ERC20Permit",
                  "nameLocations": ["308:11:114"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29108,
                  "src": "308:11:114"
                },
                "nodeType": "ModifierInvocation",
                "src": "308:19:114"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 50776,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "283:2:114"
            },
            "returnParameters": {
              "id": 50784,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "328:0:114"
            },
            "scope": 50813,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 50799,
            "nodeType": "FunctionDefinition",
            "src": "336:85:114",
            "nodes": [],
            "body": {
              "id": 50798,
              "nodeType": "Block",
              "src": "387:34:114",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 50794,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50788,
                        "src": "403:2:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 50795,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50790,
                        "src": "407:6:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 50793,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [29501],
                      "referencedDeclaration": 29501,
                      "src": "397:5:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 50796,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "397:17:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50797,
                  "nodeType": "ExpressionStatement",
                  "src": "397:17:114"
                }
              ]
            },
            "functionSelector": "40c10f19",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "345:4:114",
            "parameters": {
              "id": 50791,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50788,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "358:2:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 50799,
                  "src": "350:10:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50787,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "350:7:114",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50790,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "370:6:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 50799,
                  "src": "362:14:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50789,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "362:7:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "349:28:114"
            },
            "returnParameters": {
              "id": 50792,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "387:0:114"
            },
            "scope": 50813,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 50812,
            "nodeType": "FunctionDefinition",
            "src": "427:89:114",
            "nodes": [],
            "body": {
              "id": 50811,
              "nodeType": "Block",
              "src": "480:36:114",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 50807,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50801,
                        "src": "496:4:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 50808,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50803,
                        "src": "502:6:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 50806,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [29524],
                      "referencedDeclaration": 29524,
                      "src": "490:5:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 50809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "490:19:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50810,
                  "nodeType": "ExpressionStatement",
                  "src": "490:19:114"
                }
              ]
            },
            "functionSelector": "9dc29fac",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "436:4:114",
            "parameters": {
              "id": 50804,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50801,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "449:4:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 50812,
                  "src": "441:12:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50800,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "441:7:114",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50803,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "463:6:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 50812,
                  "src": "455:14:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50802,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "455:7:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "440:30:114"
            },
            "returnParameters": {
              "id": 50805,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "480:0:114"
            },
            "scope": 50813,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 50774,
              "name": "ERC20VotesComp",
              "nameLocations": ["202:14:114"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 29865,
              "src": "202:14:114"
            },
            "id": 50775,
            "nodeType": "InheritanceSpecifier",
            "src": "202:14:114"
          }
        ],
        "canonicalName": "CompToken",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          50813, 29865, 29809, 29108, 32208, 29926, 28858, 29890, 28936, 31384, 26372
        ],
        "name": "CompToken",
        "nameLocation": "189:9:114",
        "scope": 50814,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 114
}
