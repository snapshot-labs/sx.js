{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "delegator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "fromDelegate",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "toDelegate",
          "type": "address"
        }
      ],
      "name": "DelegateChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "delegate",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "previousBalance",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newBalance",
          "type": "uint256"
        }
      ],
      "name": "DelegateVotesChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DOMAIN_SEPARATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "pos",
          "type": "uint32"
        }
      ],
      "name": "checkpoints",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "fromBlock",
              "type": "uint32"
            },
            {
              "internalType": "uint224",
              "name": "votes",
              "type": "uint224"
            }
          ],
          "internalType": "struct ERC20Votes.Checkpoint",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "delegatee",
          "type": "address"
        }
      ],
      "name": "delegate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "delegatee",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expiry",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "delegateBySig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "delegates",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getCurrentVotes",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "getPastTotalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "getPastVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "getPriorVotes",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "numCheckpoints",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "permit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x610140604081815234620003f8576200001882620003fd565b600491828152602091828201926315195cdd60e21b938481528251946200003f86620003fd565b868652828601528251906200005482620003fd565b86825263151154d560e21b838301528351946200007186620003fd565b6001808752603160f81b85880190815288516001600160401b03999195918a8211620003e3576003918254918583811c93168015620003d8575b8a841014620002da578190601f9384811162000382575b508a908483116001146200031b576000926200030f575b505060001982851b1c191690851b1782555b8251928b8411620002fa578c548581811c91168015620002ef575b8a821014620002da578281116200028f575b5088918411600114620002245793839491849260009562000218575b50501b92600019911b1c19161788555b51902093519020918360e052610100958387524660a0528151928301937f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f958686528385015260608401524660808401523060a084015260a0835260c0830195838710908711176200020357508490525190206080523060c0526101209081526126b99283620004308439608051836121cd015260a05183612288015260c0518361219e015260e0518361221c01525182612242015251816121f90152f35b604190634e487b7160e01b6000525260246000fd5b01519350388062000134565b9190601f198416928d600052848a6000209460005b8c898383106200027757505050106200025c575b50505050811b01885562000144565b01519060f884600019921b161c19169055388080806200024d565b86860151895590970196948501948893500162000239565b8d600052896000208380870160051c8201928c8810620002d0575b0160051c019086905b828110620002c357505062000118565b60008155018690620002b3565b92508192620002aa565b60228e634e487b7160e01b6000525260246000fd5b90607f169062000106565b60418d634e487b7160e01b6000525260246000fd5b015190503880620000d9565b60008681528c8120899550929190601f198516908e5b8282106200036a575050841162000351575b505050811b018255620000eb565b015160001983871b60f8161c1916905538808062000343565b8385015186558b979095019493840193018e62000331565b909150846000528a6000208480850160051c8201928d8610620003ce575b918991869594930160051c01915b828110620003be575050620000c2565b60008155859450899101620003ae565b92508192620003a0565b92607f1692620000ab565b60418c634e487b7160e01b6000525260246000fd5b600080fd5b604081019081106001600160401b038211176200041957604052565b634e487b7160e01b600052604160045260246000fdfe60806040526004361015610013575b600080fd5b60003560e01c806306fdde0314610207578063095ea7b3146101fe57806318160ddd146101f557806323b872dd146101ec578063313ce567146101e35780633644e515146101da57806339509351146101d15780633a46b1a8146101c857806340c10f19146101bf578063587cde1e146101b65780635c19a95c146101ad5780636fcfff45146101a457806370a082311461019b578063782d6fe1146101925780637ecebe00146101895780638e539e8c1461018057806395d89b41146101775780639ab24eb01461016e578063a457c2d714610165578063a9059cbb1461015c578063b4b5ea5714610153578063c3cda5201461014a578063d505accf14610141578063dd62ed3e146101385763f1127ed81461013057600080fd5b61000e610fcb565b5061000e610f53565b5061000e610de7565b5061000e610c7f565b5061000e610c3d565b5061000e610c16565b5061000e610b42565b5061000e610b1e565b5061000e610a5a565b5061000e6108d6565b5061000e61088e565b5061000e610851565b5061000e610809565b5061000e6107b3565b5061000e610790565b5061000e610747565b5061000e610626565b5061000e6105fe565b5061000e610597565b5061000e610573565b5061000e610556565b5061000e610461565b5061000e610442565b5061000e610410565b5061000e610286565b919091602080825283519081818401526000945b828610610270575050601f817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0926040959611610263575b0116010190565b600085828601015261025c565b8581018201518487016040015294810194610224565b503461000e576000806003193601126103c75760405190806003549060019180831c928082169283156103bd575b602092838610851461039057858852602088019490811561035157506001146102f8575b6102f4876102e8818903826110e5565b60405191829182610210565b0390f35b600360005294509192917fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b83861061034057505050910190506102e8826102f438806102d8565b805485870152948201948101610324565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001685525050505090151560051b0190506102e8826102f438806102d8565b6024827f4e487b710000000000000000000000000000000000000000000000000000000081526022600452fd5b93607f16936102b4565b80fd5b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361000e57565b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361000e57565b503461000e57604060031936011261000e5761043761042d6103ca565b60243590336113e2565b602060405160018152f35b503461000e57600060031936011261000e576020600254604051908152f35b503461000e57606060031936011261000e5761047b6103ca565b6104836103ed565b6044359073ffffffffffffffffffffffffffffffffffffffff831660005260016020526104d43360406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b549260001984036104f6575b6104ea935061127e565b60405160018152602090f35b8284106105125761050d836104ea950333836113e2565b6104e0565b606460405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b503461000e57600060031936011261000e57602060405160128152f35b503461000e57600060031936011261000e57602061058f612187565b604051908152f35b503461000e57604060031936011261000e576104376105b46103ca565b3360005260016020526105f76024356105f18360406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b54611190565b90336113e2565b503461000e57604060031936011261000e57602061058f61061d6103ca565b602435906116e9565b503461000e57604060031936011261000e576106406103ca565b60243573ffffffffffffffffffffffffffffffffffffffff821691821561070357816106e2916107019461067e61067984600254611190565b600255565b6106a88273ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b8054840190556040518381526000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602090a3611875565b6106fc6bffffffffffffffffffffffff600254111561263b565b611d53565b005b606460405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152fd5b503461000e57602060031936011261000e57602073ffffffffffffffffffffffffffffffffffffffff806107796103ca565b166000526007825260406000205416604051908152f35b503461000e57602060031936011261000e576107016107ad6103ca565b3361190e565b503461000e57602060031936011261000e5773ffffffffffffffffffffffffffffffffffffffff6107e26103ca565b16600052600860205260206107fb6040600020546125c0565b63ffffffff60405191168152f35b503461000e57602060031936011261000e5773ffffffffffffffffffffffffffffffffffffffff6108386103ca565b1660005260006020526020604060002054604051908152f35b503461000e57604060031936011261000e57602061087861087361061d6103ca565b61253d565b6bffffffffffffffffffffffff60405191168152f35b503461000e57602060031936011261000e5773ffffffffffffffffffffffffffffffffffffffff6108bd6103ca565b1660005260056020526020604060002054604051908152f35b503461000e57602060031936011261000e576004356108f643821061169e565b60095490600082600581116109ed575b50905b82821061097d5782806109425750602060005b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff60405191168152f35b6009600052602090610978907f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7ae015b5460201c90565b61091c565b909161099081841860011c828516611190565b6009600052908263ffffffff6109cd7f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af85015b5463ffffffff1690565b1611156109dd5750915b90610909565b92506109e890611156565b6109d7565b806109fd610a0392959395612358565b90611813565b6009600052908263ffffffff610a3a7f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af85016109c3565b161115610a4a5750915b38610906565b9250610a5590611156565b610a44565b503461000e576000806003193601126103c75760405190806004549060019180831c92808216928315610b14575b60209283861085146103905785885260208801949081156103515750600114610abb576102f4876102e8818903826110e5565b600460005294509192917f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b838610610b0357505050910190506102e8826102f438806102d8565b805485870152948201948101610ae7565b93607f1693610a88565b503461000e57602060031936011261000e57602061058f610b3d6103ca565b61162e565b503461000e57604060031936011261000e57610b5c6103ca565b60243590336000526001602052610b978160406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b5491808310610bac576104ea920390336113e2565b608460405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152fd5b503461000e57604060031936011261000e57610437610c336103ca565b602435903361127e565b503461000e57602060031936011261000e576020610878610873610b3d6103ca565b6064359060ff8216820361000e57565b6084359060ff8216820361000e57565b503461000e5760c060031936011261000e57610c996103ca565b60443590602435610ca8610c5f565b92804211610da357610d64610d9e916107019560405190610d4c82610d206020820195898b8860609194939273ffffffffffffffffffffffffffffffffffffffff60808301967fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf845216602083015260408201520152565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081018452836110e5565b610d5f60a43593608435935190206122ae565b611f5d565b91610d988373ffffffffffffffffffffffffffffffffffffffff166000526005602052604060002090815491600183019055565b1461182a565b61190e565b606460405162461bcd60e51b815260206004820152601d60248201527f4552433230566f7465733a207369676e617475726520657870697265640000006044820152fd5b503461000e5760e060031936011261000e57610e016103ca565b610e096103ed565b6044359060643592610e19610c6f565b93804211610f0f57610eea610f0a91610d2061070197610ed7610e658773ffffffffffffffffffffffffffffffffffffffff166000526005602052604060002090815491600183019055565b9360405193849160208301968c8c8c8a91959493909260a09360c08401977f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9855273ffffffffffffffffffffffffffffffffffffffff8092166020860152166040840152606083015260808201520152565b610d5f60c4359360a435935190206122ae565b73ffffffffffffffffffffffffffffffffffffffff80841691161461156d565b6113e2565b606460405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e650000006044820152fd5b503461000e57604060031936011261000e576020610fc2610f726103ca565b73ffffffffffffffffffffffffffffffffffffffff610f8f6103ed565b91166000526001835260406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b54604051908152f35b503461000e57604060031936011261000e57610fe56103ca565b63ffffffff602435818116810361000e57602061105e6110587bffffffffffffffffffffffffffffffffffffffffffffffffffffffff9373ffffffffffffffffffffffffffffffffffffffff6040976000868a51611042816110a0565b82815201521660005260088452866000206115c5565b5061160c565b84519381511684520151166020820152f35b507f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040810190811067ffffffffffffffff8211176110bc57604052565b6110c4611070565b604052565b60c0810190811067ffffffffffffffff8211176110bc57604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff8211176110bc57604052565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6001907ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe8111611184570190565b61118c611126565b0190565b81198111611184570190565b156111a357565b608460405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152fd5b1561121457565b608460405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152fd5b919073ffffffffffffffffffffffffffffffffffffffff92838116801561137857611376948316906112b182151561119c565b846112dc8473ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b546112e98282101561120d565b036113148473ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b5561133f8473ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b8054860190556040518581527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602090a36118cd565b565b608460405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152fd5b9073ffffffffffffffffffffffffffffffffffffffff9182811692831561150457821693841561149a57806114847f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259461145f6114959573ffffffffffffffffffffffffffffffffffffffff166000526001602052604060002090565b9073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b556040519081529081906020820190565b0390a3565b608460405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152fd5b608460405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152fd5b1561157457565b606460405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e617475726500006044820152fd5b60405190611376826110a0565b80548210156115dd5760005260206000200190600090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90604051611619816110a0565b602081935463ffffffff81168352811c910152565b73ffffffffffffffffffffffffffffffffffffffff1660005260086020526040600020546000811560001461166557506000919050565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff91600019604061169593209101906115c5565b505460201c1690565b156116a557565b606460405162461bcd60e51b815260206004820152601f60248201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e6564006044820152fd5b73ffffffffffffffffffffffffffffffffffffffff9061170a43841061169e565b1660005260086020526040600020805491600083600581116117c8575b50905b83821061177a5750508161174057506000919050565b610971611776916000197bffffffffffffffffffffffffffffffffffffffffffffffffffffffff94019060005260206000200190565b1690565b909261178d81851860011c828616611190565b908263ffffffff6117a86109c3858860005260206000200190565b1611156117b85750925b9061172a565b93506117c390611156565b6117b2565b806109fd6117d892969396612358565b908263ffffffff6117f36109c3858860005260206000200190565b1611156118035750925b38611727565b935061180e90611156565b6117fd565b81811061181e570390565b611826611126565b0390565b1561183157565b606460405162461bcd60e51b815260206004820152601960248201527f4552433230566f7465733a20696e76616c6964206e6f6e6365000000000000006044820152fd5b60076020527f6d5257204ebe7d88fd91ae87941cb2dd9d8062b64ae5a2bd2d28ec40b9fbf6df5473ffffffffffffffffffffffffffffffffffffffff91821660009081526040902054611376939290811691166119a3565b90611376929173ffffffffffffffffffffffffffffffffffffffff8091166000526007602052808060406000205416921660005260406000205416906119a3565b6113769173ffffffffffffffffffffffffffffffffffffffff8092166000928184526007602052806040852054168092856020527f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f60408720549660076020526040812094871694857fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055604051a45b919073ffffffffffffffffffffffffffffffffffffffff80821693168381141580611c14575b6119d4575b50505050565b80611a54575b50826119e7575b806119ce565b7fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a72491611a36611a3b9273ffffffffffffffffffffffffffffffffffffffff166000526008602052604060002090565b611e9f565b60408051928352602083019190915290a23880806119e1565b8060005260086020527fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7246040600020805480159182600014611bf157611a986115b8565b6000815260006020820152915b611af2611ad160208501517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1690565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1690565b92611afd8985611813565b94159081611bda575b5015611b7957611b2e611b6392600019611b1f876124aa565b93019060005260206000200190565b9063ffffffff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000083549260201b169116179055565b604080519182526020820192909252a2386119da565b50611bd590611b87436125c0565b90611bd0611b94866124aa565b611bab611b9f6115b8565b63ffffffff9095168552565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166020840152565b611cb2565b611b63565b5163ffffffff16905063ffffffff16431438611b06565b611c0e611c0960001984018360005260206000200190565b61160c565b91611aa5565b508215156119c9565b6009549068010000000000000000821015611ca5575b60018201806009558210156115dd576009600052805160209182015190911b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000001663ffffffff91909116177f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af90910155565b611cad611070565b611c33565b8054611cd59168010000000000000000821015611d46575b6001820181556115c5565b611d1757815160209283015190921b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000001663ffffffff92909216919091179055565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b611d4e611070565b611cca565b60095490918115918215611e6a57611d696115b8565b60008152600060208201525b611dab611da4611ad160208401517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1690565b9586611190565b93159081611e53575b5015611df95761137690611b2e600019611dcd866124aa565b920160096000527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0190565b50611376611e06436125c0565b611e4e611e12856124aa565b611e29611e1d6115b8565b63ffffffff9094168452565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166020830152565b611c1d565b5163ffffffff16905063ffffffff16431438611db4565b6009600052611e9a7f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7ae820161160c565b611d75565b909181549182159283600014611f4057611eb76115b8565b60008152600060208201525b611ef9611ef2611ad160208401517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1690565b9687611190565b94159081611f29575b5015611f1b57611b2e61137692600019611b1f876124aa565b5061137690611b87436125c0565b5163ffffffff16905063ffffffff16431438611f02565b611f58611c0960001983018460005260206000200190565b611ec3565b91611f749391611f6c936120eb565b919091611fb0565b90565b60051115611f8157565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b611fb981611f77565b80611fc15750565b611fca81611f77565b600181036120175760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606490fd5b61202081611f77565b6002810361206d5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606490fd5b80612079600392611f77565b1461208057565b60405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60448201527f75650000000000000000000000000000000000000000000000000000000000006064820152608490fd5b9291907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831161217b5791608094939160ff602094604051948552168484015260408301526060820152600093849182805260015afa1561216e57815173ffffffffffffffffffffffffffffffffffffffff811615612168579190565b50600190565b50604051903d90823e3d90fd5b50505050600090600390565b73ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016301480612285575b156121ef577f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101907f000000000000000000000000000000000000000000000000000000000000000082527f000000000000000000000000000000000000000000000000000000000000000060408201527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260a0815261227f816110c9565b51902090565b507f000000000000000000000000000000000000000000000000000000000000000046146121c6565b6122b6612187565b906040519060208201927f1901000000000000000000000000000000000000000000000000000000000000845260228301526042820152604281526080810181811067ffffffffffffffff821117612312575b60405251902090565b61231a611070565b612309565b8115612329570490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b8015612492578061242b61242461241a6124106124066123fc6123f26123e86001611f749a6000908b60801c80612486575b508060401c80612479575b508060201c8061246c575b508060101c8061245f575b508060081c80612452575b508060041c80612445575b508060021c80612438575b50821c612431575b811c1b6123e1818b61231f565b0160011c90565b6123e1818a61231f565b6123e1818961231f565b6123e1818861231f565b6123e1818761231f565b6123e1818661231f565b6123e1818561231f565b809261231f565b90612498565b81016123d4565b60029150910190386123cc565b60049150910190386123c1565b60089150910190386123b6565b60109150910190386123ab565b60209150910190386123a0565b6040915091019038612395565b9150506080903861238a565b50600090565b90808210156124a5575090565b905090565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff908181116124d3571690565b608460405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203260448201527f32342062697473000000000000000000000000000000000000000000000000006064820152fd5b6bffffffffffffffffffffffff90818111612556571690565b608460405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203960448201527f36206269747300000000000000000000000000000000000000000000000000006064820152fd5b63ffffffff908181116125d1571690565b608460405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201527f32206269747300000000000000000000000000000000000000000000000000006064820152fd5b1561264257565b608460405162461bcd60e51b815260206004820152603060248201527f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f60448201527f766572666c6f77696e6720766f746573000000000000000000000000000000006064820152fdfea164736f6c634300080f000a",
    "sourceMap": "180:194:72:-:0;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;180:194:72;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;180:194:72;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;180:194:72;;;;;;;;-1:-1:-1;;;;;180:194:72;;;;;;;;;2042:13:23;180:194:72;;;;;;;;;;;;;;-1:-1:-1;180:194:72;;;;;;;;;;;;;;;-1:-1:-1;180:194:72;;;;;;;;;;-1:-1:-1;180:194:72;;;;-1:-1:-1;;;;180:194:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;180:194:72;;;;;;;;;;;;;;;;;;;;2550:22:34;;180:194:72;;2606:25:34;;2787;;;;2822:31;;;;;2882:13;2863:32;;180:194:72;;3642:73:34;;;2660:117;;180:194:72;;;;;;;;;;;;2882:13:34;180:194:72;;;;3709:4:34;2863:32;180:194:72;;;2863:32:34;3642:73;;180:194:72;;;;;;;;;;;;;;;;;;3632:84:34;;180:194:72;2905:85:34;3709:4;180:194:72;3000:28:34;3038:21;;;;180:194:72;;;;;;;;;;;;2863:32:34;180:194:72;;;;;;;;;;;2787:25:34;180:194:72;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;180:194:72;;;-1:-1:-1;180:194:72;;;;;-1:-1:-1;180:194:72;;;;;;;;;;;;;-1:-1:-1;180:194:72;;;-1:-1:-1;180:194:72;;-1:-1:-1;180:194:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;180:194:72;;;;;-1:-1:-1;180:194:72;;-1:-1:-1;180:194:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;180:194:72;;;;;;;;;;;;;;;;;;;;-1:-1:-1;180:194:72;;;-1:-1:-1;180:194:72;;;;;;;;;;;;;;-1:-1:-1;180:194:72;;;-1:-1:-1;180:194:72;;;;;-1:-1:-1;180:194:72;;;;;-1:-1:-1;180:194:72;;;;;;;;-1:-1:-1;180:194:72;;;-1:-1:-1;;180:194:72;;;;;;;;;;;;;-1:-1:-1;180:194:72;;;;;;;;;;;;;;;;-1:-1:-1;;180:194:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;180:194:72;;-1:-1:-1;180:194:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;180:194:72;;;;-1:-1:-1;180:194:72;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;180:194:72;;;-1:-1:-1;180:194:72;;;;;;;;;;;;-1:-1:-1;;;;;180:194:72;;;;;;;:::o;:::-;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040526004361015610013575b600080fd5b60003560e01c806306fdde0314610207578063095ea7b3146101fe57806318160ddd146101f557806323b872dd146101ec578063313ce567146101e35780633644e515146101da57806339509351146101d15780633a46b1a8146101c857806340c10f19146101bf578063587cde1e146101b65780635c19a95c146101ad5780636fcfff45146101a457806370a082311461019b578063782d6fe1146101925780637ecebe00146101895780638e539e8c1461018057806395d89b41146101775780639ab24eb01461016e578063a457c2d714610165578063a9059cbb1461015c578063b4b5ea5714610153578063c3cda5201461014a578063d505accf14610141578063dd62ed3e146101385763f1127ed81461013057600080fd5b61000e610fcb565b5061000e610f53565b5061000e610de7565b5061000e610c7f565b5061000e610c3d565b5061000e610c16565b5061000e610b42565b5061000e610b1e565b5061000e610a5a565b5061000e6108d6565b5061000e61088e565b5061000e610851565b5061000e610809565b5061000e6107b3565b5061000e610790565b5061000e610747565b5061000e610626565b5061000e6105fe565b5061000e610597565b5061000e610573565b5061000e610556565b5061000e610461565b5061000e610442565b5061000e610410565b5061000e610286565b919091602080825283519081818401526000945b828610610270575050601f817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0926040959611610263575b0116010190565b600085828601015261025c565b8581018201518487016040015294810194610224565b503461000e576000806003193601126103c75760405190806003549060019180831c928082169283156103bd575b602092838610851461039057858852602088019490811561035157506001146102f8575b6102f4876102e8818903826110e5565b60405191829182610210565b0390f35b600360005294509192917fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b83861061034057505050910190506102e8826102f438806102d8565b805485870152948201948101610324565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001685525050505090151560051b0190506102e8826102f438806102d8565b6024827f4e487b710000000000000000000000000000000000000000000000000000000081526022600452fd5b93607f16936102b4565b80fd5b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361000e57565b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361000e57565b503461000e57604060031936011261000e5761043761042d6103ca565b60243590336113e2565b602060405160018152f35b503461000e57600060031936011261000e576020600254604051908152f35b503461000e57606060031936011261000e5761047b6103ca565b6104836103ed565b6044359073ffffffffffffffffffffffffffffffffffffffff831660005260016020526104d43360406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b549260001984036104f6575b6104ea935061127e565b60405160018152602090f35b8284106105125761050d836104ea950333836113e2565b6104e0565b606460405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b503461000e57600060031936011261000e57602060405160128152f35b503461000e57600060031936011261000e57602061058f612187565b604051908152f35b503461000e57604060031936011261000e576104376105b46103ca565b3360005260016020526105f76024356105f18360406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b54611190565b90336113e2565b503461000e57604060031936011261000e57602061058f61061d6103ca565b602435906116e9565b503461000e57604060031936011261000e576106406103ca565b60243573ffffffffffffffffffffffffffffffffffffffff821691821561070357816106e2916107019461067e61067984600254611190565b600255565b6106a88273ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b8054840190556040518381526000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602090a3611875565b6106fc6bffffffffffffffffffffffff600254111561263b565b611d53565b005b606460405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152fd5b503461000e57602060031936011261000e57602073ffffffffffffffffffffffffffffffffffffffff806107796103ca565b166000526007825260406000205416604051908152f35b503461000e57602060031936011261000e576107016107ad6103ca565b3361190e565b503461000e57602060031936011261000e5773ffffffffffffffffffffffffffffffffffffffff6107e26103ca565b16600052600860205260206107fb6040600020546125c0565b63ffffffff60405191168152f35b503461000e57602060031936011261000e5773ffffffffffffffffffffffffffffffffffffffff6108386103ca565b1660005260006020526020604060002054604051908152f35b503461000e57604060031936011261000e57602061087861087361061d6103ca565b61253d565b6bffffffffffffffffffffffff60405191168152f35b503461000e57602060031936011261000e5773ffffffffffffffffffffffffffffffffffffffff6108bd6103ca565b1660005260056020526020604060002054604051908152f35b503461000e57602060031936011261000e576004356108f643821061169e565b60095490600082600581116109ed575b50905b82821061097d5782806109425750602060005b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff60405191168152f35b6009600052602090610978907f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7ae015b5460201c90565b61091c565b909161099081841860011c828516611190565b6009600052908263ffffffff6109cd7f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af85015b5463ffffffff1690565b1611156109dd5750915b90610909565b92506109e890611156565b6109d7565b806109fd610a0392959395612358565b90611813565b6009600052908263ffffffff610a3a7f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af85016109c3565b161115610a4a5750915b38610906565b9250610a5590611156565b610a44565b503461000e576000806003193601126103c75760405190806004549060019180831c92808216928315610b14575b60209283861085146103905785885260208801949081156103515750600114610abb576102f4876102e8818903826110e5565b600460005294509192917f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b838610610b0357505050910190506102e8826102f438806102d8565b805485870152948201948101610ae7565b93607f1693610a88565b503461000e57602060031936011261000e57602061058f610b3d6103ca565b61162e565b503461000e57604060031936011261000e57610b5c6103ca565b60243590336000526001602052610b978160406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b5491808310610bac576104ea920390336113e2565b608460405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152fd5b503461000e57604060031936011261000e57610437610c336103ca565b602435903361127e565b503461000e57602060031936011261000e576020610878610873610b3d6103ca565b6064359060ff8216820361000e57565b6084359060ff8216820361000e57565b503461000e5760c060031936011261000e57610c996103ca565b60443590602435610ca8610c5f565b92804211610da357610d64610d9e916107019560405190610d4c82610d206020820195898b8860609194939273ffffffffffffffffffffffffffffffffffffffff60808301967fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf845216602083015260408201520152565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081018452836110e5565b610d5f60a43593608435935190206122ae565b611f5d565b91610d988373ffffffffffffffffffffffffffffffffffffffff166000526005602052604060002090815491600183019055565b1461182a565b61190e565b606460405162461bcd60e51b815260206004820152601d60248201527f4552433230566f7465733a207369676e617475726520657870697265640000006044820152fd5b503461000e5760e060031936011261000e57610e016103ca565b610e096103ed565b6044359060643592610e19610c6f565b93804211610f0f57610eea610f0a91610d2061070197610ed7610e658773ffffffffffffffffffffffffffffffffffffffff166000526005602052604060002090815491600183019055565b9360405193849160208301968c8c8c8a91959493909260a09360c08401977f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9855273ffffffffffffffffffffffffffffffffffffffff8092166020860152166040840152606083015260808201520152565b610d5f60c4359360a435935190206122ae565b73ffffffffffffffffffffffffffffffffffffffff80841691161461156d565b6113e2565b606460405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e650000006044820152fd5b503461000e57604060031936011261000e576020610fc2610f726103ca565b73ffffffffffffffffffffffffffffffffffffffff610f8f6103ed565b91166000526001835260406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b54604051908152f35b503461000e57604060031936011261000e57610fe56103ca565b63ffffffff602435818116810361000e57602061105e6110587bffffffffffffffffffffffffffffffffffffffffffffffffffffffff9373ffffffffffffffffffffffffffffffffffffffff6040976000868a51611042816110a0565b82815201521660005260088452866000206115c5565b5061160c565b84519381511684520151166020820152f35b507f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040810190811067ffffffffffffffff8211176110bc57604052565b6110c4611070565b604052565b60c0810190811067ffffffffffffffff8211176110bc57604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff8211176110bc57604052565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6001907ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe8111611184570190565b61118c611126565b0190565b81198111611184570190565b156111a357565b608460405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152fd5b1561121457565b608460405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152fd5b919073ffffffffffffffffffffffffffffffffffffffff92838116801561137857611376948316906112b182151561119c565b846112dc8473ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b546112e98282101561120d565b036113148473ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b5561133f8473ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b8054860190556040518581527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602090a36118cd565b565b608460405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152fd5b9073ffffffffffffffffffffffffffffffffffffffff9182811692831561150457821693841561149a57806114847f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259461145f6114959573ffffffffffffffffffffffffffffffffffffffff166000526001602052604060002090565b9073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b556040519081529081906020820190565b0390a3565b608460405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152fd5b608460405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152fd5b1561157457565b606460405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e617475726500006044820152fd5b60405190611376826110a0565b80548210156115dd5760005260206000200190600090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90604051611619816110a0565b602081935463ffffffff81168352811c910152565b73ffffffffffffffffffffffffffffffffffffffff1660005260086020526040600020546000811560001461166557506000919050565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff91600019604061169593209101906115c5565b505460201c1690565b156116a557565b606460405162461bcd60e51b815260206004820152601f60248201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e6564006044820152fd5b73ffffffffffffffffffffffffffffffffffffffff9061170a43841061169e565b1660005260086020526040600020805491600083600581116117c8575b50905b83821061177a5750508161174057506000919050565b610971611776916000197bffffffffffffffffffffffffffffffffffffffffffffffffffffffff94019060005260206000200190565b1690565b909261178d81851860011c828616611190565b908263ffffffff6117a86109c3858860005260206000200190565b1611156117b85750925b9061172a565b93506117c390611156565b6117b2565b806109fd6117d892969396612358565b908263ffffffff6117f36109c3858860005260206000200190565b1611156118035750925b38611727565b935061180e90611156565b6117fd565b81811061181e570390565b611826611126565b0390565b1561183157565b606460405162461bcd60e51b815260206004820152601960248201527f4552433230566f7465733a20696e76616c6964206e6f6e6365000000000000006044820152fd5b60076020527f6d5257204ebe7d88fd91ae87941cb2dd9d8062b64ae5a2bd2d28ec40b9fbf6df5473ffffffffffffffffffffffffffffffffffffffff91821660009081526040902054611376939290811691166119a3565b90611376929173ffffffffffffffffffffffffffffffffffffffff8091166000526007602052808060406000205416921660005260406000205416906119a3565b6113769173ffffffffffffffffffffffffffffffffffffffff8092166000928184526007602052806040852054168092856020527f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f60408720549660076020526040812094871694857fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055604051a45b919073ffffffffffffffffffffffffffffffffffffffff80821693168381141580611c14575b6119d4575b50505050565b80611a54575b50826119e7575b806119ce565b7fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a72491611a36611a3b9273ffffffffffffffffffffffffffffffffffffffff166000526008602052604060002090565b611e9f565b60408051928352602083019190915290a23880806119e1565b8060005260086020527fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7246040600020805480159182600014611bf157611a986115b8565b6000815260006020820152915b611af2611ad160208501517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1690565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1690565b92611afd8985611813565b94159081611bda575b5015611b7957611b2e611b6392600019611b1f876124aa565b93019060005260206000200190565b9063ffffffff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000083549260201b169116179055565b604080519182526020820192909252a2386119da565b50611bd590611b87436125c0565b90611bd0611b94866124aa565b611bab611b9f6115b8565b63ffffffff9095168552565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166020840152565b611cb2565b611b63565b5163ffffffff16905063ffffffff16431438611b06565b611c0e611c0960001984018360005260206000200190565b61160c565b91611aa5565b508215156119c9565b6009549068010000000000000000821015611ca5575b60018201806009558210156115dd576009600052805160209182015190911b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000001663ffffffff91909116177f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af90910155565b611cad611070565b611c33565b8054611cd59168010000000000000000821015611d46575b6001820181556115c5565b611d1757815160209283015190921b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000001663ffffffff92909216919091179055565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b611d4e611070565b611cca565b60095490918115918215611e6a57611d696115b8565b60008152600060208201525b611dab611da4611ad160208401517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1690565b9586611190565b93159081611e53575b5015611df95761137690611b2e600019611dcd866124aa565b920160096000527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0190565b50611376611e06436125c0565b611e4e611e12856124aa565b611e29611e1d6115b8565b63ffffffff9094168452565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166020830152565b611c1d565b5163ffffffff16905063ffffffff16431438611db4565b6009600052611e9a7f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7ae820161160c565b611d75565b909181549182159283600014611f4057611eb76115b8565b60008152600060208201525b611ef9611ef2611ad160208401517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1690565b9687611190565b94159081611f29575b5015611f1b57611b2e61137692600019611b1f876124aa565b5061137690611b87436125c0565b5163ffffffff16905063ffffffff16431438611f02565b611f58611c0960001983018460005260206000200190565b611ec3565b91611f749391611f6c936120eb565b919091611fb0565b90565b60051115611f8157565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b611fb981611f77565b80611fc15750565b611fca81611f77565b600181036120175760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606490fd5b61202081611f77565b6002810361206d5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606490fd5b80612079600392611f77565b1461208057565b60405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60448201527f75650000000000000000000000000000000000000000000000000000000000006064820152608490fd5b9291907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831161217b5791608094939160ff602094604051948552168484015260408301526060820152600093849182805260015afa1561216e57815173ffffffffffffffffffffffffffffffffffffffff811615612168579190565b50600190565b50604051903d90823e3d90fd5b50505050600090600390565b73ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016301480612285575b156121ef577f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101907f000000000000000000000000000000000000000000000000000000000000000082527f000000000000000000000000000000000000000000000000000000000000000060408201527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260a0815261227f816110c9565b51902090565b507f000000000000000000000000000000000000000000000000000000000000000046146121c6565b6122b6612187565b906040519060208201927f1901000000000000000000000000000000000000000000000000000000000000845260228301526042820152604281526080810181811067ffffffffffffffff821117612312575b60405251902090565b61231a611070565b612309565b8115612329570490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b8015612492578061242b61242461241a6124106124066123fc6123f26123e86001611f749a6000908b60801c80612486575b508060401c80612479575b508060201c8061246c575b508060101c8061245f575b508060081c80612452575b508060041c80612445575b508060021c80612438575b50821c612431575b811c1b6123e1818b61231f565b0160011c90565b6123e1818a61231f565b6123e1818961231f565b6123e1818861231f565b6123e1818761231f565b6123e1818661231f565b6123e1818561231f565b809261231f565b90612498565b81016123d4565b60029150910190386123cc565b60049150910190386123c1565b60089150910190386123b6565b60109150910190386123ab565b60209150910190386123a0565b6040915091019038612395565b9150506080903861238a565b50600090565b90808210156124a5575090565b905090565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff908181116124d3571690565b608460405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203260448201527f32342062697473000000000000000000000000000000000000000000000000006064820152fd5b6bffffffffffffffffffffffff90818111612556571690565b608460405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203960448201527f36206269747300000000000000000000000000000000000000000000000000006064820152fd5b63ffffffff908181116125d1571690565b608460405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201527f32206269747300000000000000000000000000000000000000000000000000006064820152fd5b1561264257565b608460405162461bcd60e51b815260206004820152603060248201527f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f60448201527f766572666c6f77696e6720766f746573000000000000000000000000000000006064820152fdfea164736f6c634300080f000a",
    "sourceMap": "180:194:72:-:0;;;;;;;;;-1:-1:-1;180:194:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;180:194:72;;;;;;;;;2240:5:23;180:194:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;2240:5:23;180:194:72;;;-1:-1:-1;180:194:72;;;;;;;;;;-1:-1:-1;;;180:194:72;;;-1:-1:-1;180:194:72;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;180:194:72;;;;;;;-1:-1:-1;180:194:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;;180:194:72;;;;;4593:6:23;180:194:72;;:::i;:::-;;;719:10:30;;4593:6:23;:::i;:::-;180:194:72;;;4617:4:23;180:194:72;;;;;;;;;-1:-1:-1;;180:194:72;;;;;;3329:12:23;180:194:72;;;;;;;;;;;;;-1:-1:-1;;180:194:72;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;-1:-1:-1;180:194:72;4089:11:23;180:194:72;;4089:27:23;719:10:30;180:194:72;-1:-1:-1;180:194:72;;;;;;;;;;;;;4089:27:23;180:194:72;11351:37:23;-1:-1:-1;;11351:37:23;;11347:243;;180:194:72;5441:6:23;;;;:::i;:::-;180:194:72;;4089:11:23;180:194:72;;;;;11347:243:23;11412:26;;;180:194:72;;11539:25:23;180:194:72;5441:6:23;180:194:72;;719:10:30;11539:25:23;;:::i;:::-;11347:243;;180:194:72;;;;-1:-1:-1;;;180:194:72;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;180:194:72;;;;;;;;3173:2:23;180:194:72;;;;;;;;;-1:-1:-1;;180:194:72;;;;;;2953:20:25;;:::i;:::-;180:194:72;;;;;;;;;;;;-1:-1:-1;;180:194:72;;;;;6038:38:23;180:194:72;;:::i;:::-;719:10:30;-1:-1:-1;180:194:72;4089:11:23;180:194:72;;6038:38:23;180:194:72;;4089:27:23;180:194:72;;-1:-1:-1;180:194:72;;;;;;;;;;;;;4089:27:23;180:194:72;6038:38:23;:::i;:::-;719:10:30;;6038:38:23;:::i;180:194:72:-;;;;;;-1:-1:-1;;180:194:72;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;-1:-1:-1;;180:194:72;;;;;;;:::i;:::-;;;;;;8650:21:23;;;180:194:72;;;9088:6:23;180:194:72;6986:55:26;180:194:72;8778:22:23;;180:194:72;8778:22:23;180:194:72;8778:22:23;:::i;:::-;;180:194:72;;8778:22:23;8946:18;;180:194:72;;8669:1:23;180:194:72;8669:1:23;180:194:72;;;8669:1:23;180:194:72;;;8946:18:23;180:194:72;;;;;;;;;;;-1:-1:-1;;8999:37:23;;180:194:72;;8999:37:23;9088:6;:::i;:::-;6885:90:26;2024:16:27;8778:22:23;180:194:72;6893:29:26;;6885:90;:::i;:::-;6986:55;:::i;:::-;-1:-1:-1;180:194:72;;;;-1:-1:-1;;;180:194:72;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;180:194:72;;;;;;;;;;:::i;:::-;;-1:-1:-1;180:194:72;2312:10:26;180:194:72;;;-1:-1:-1;180:194:72;;;;;;;;;;;;;;;-1:-1:-1;;180:194:72;;;;;5801:9:26;180:194:72;;:::i;:::-;719:10:30;5801:9:26;:::i;180:194:72:-;;;;;;-1:-1:-1;;180:194:72;;;;;;;;:::i;:::-;;-1:-1:-1;180:194:72;2088:12:26;180:194:72;;;2070:47:26;180:194:72;-1:-1:-1;180:194:72;;2070:47:26;:::i;:::-;180:194:72;;;;;;;;;;;;;;-1:-1:-1;;180:194:72;;;;;;;;:::i;:::-;;-1:-1:-1;180:194:72;-1:-1:-1;180:194:72;;;;-1:-1:-1;180:194:72;;;;;;;;;;;;;;-1:-1:-1;;180:194:72;;;;;;1755:53:27;1773:34;180:194:72;;:::i;1773:34:27:-;1755:53;:::i;:::-;180:194:72;;;;;;;;;;;;;;-1:-1:-1;;180:194:72;;;;;;;;:::i;:::-;;-1:-1:-1;180:194:72;2712:7:25;180:194:72;;;;-1:-1:-1;180:194:72;;;;;;;;;;;;;;-1:-1:-1;;180:194:72;;;;;;;3499:70:26;3521:12;3507:26;;3499:70;:::i;:::-;3605:23;180:194:72;4960:15:26;-1:-1:-1;4985:21:26;5030:1;5021:10;;5017:244;;180:194:72;5271:244:26;;5278:10;;;;;;5556:52;:9;;;:52;180:194:72;-1:-1:-1;5556:52:26;180:194:72;;;;;;;;5556:52:26;3605:23;10202:110;;180:194:72;;5572:36:26;;10202:110;;5572:30;180:194:72;;;;;5572:36:26;5556:52;;5271:244;941:5:36;;930:21;941:5;;;180:194:72;;931:5:36;;;930:21;:::i;:::-;3605:23:26;10202:110;;5359:25;;180:194:72;5359:35:26;10202:110;;;5359:25;180:194:72;;;;;5359:35:26;180:194:72;5359:49:26;;;;5428:10;5355:150;;5271:244;;;5355:150;5483:7;;;;;:::i;:::-;5355:150;;5017:244;5070:17;;5061:26;5070:17;;;;;:::i;:::-;5061:26;;:::i;:::-;3605:23;10202:110;;5105:25;;180:194:72;5105:35:26;10202:110;;;5105:25;10079:239;5105:35;180:194:72;5105:49:26;;;;5174:10;5101:150;;5017:244;;;5101:150;5229:7;;;;;:::i;:::-;5101:150;;180:194:72;;;;;;;-1:-1:-1;;180:194:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;180:194:72;;;;;;;;;;-1:-1:-1;;;180:194:72;;;-1:-1:-1;180:194:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;180:194:72;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;-1:-1:-1;;180:194:72;;;;;;;:::i;:::-;;;719:10:30;;-1:-1:-1;180:194:72;4089:11:23;180:194:72;;4089:27:23;180:194:72;;-1:-1:-1;180:194:72;;;;;;;;;;;;;4089:27:23;180:194:72;6809:35:23;;;;180:194:72;;6945:34:23;180:194:72;;719:10:30;;6945:34:23;:::i;180:194:72:-;;;;-1:-1:-1;;;180:194:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;180:194:72;;;;;3881:6:23;180:194:72;;:::i;:::-;;;719:10:30;;3881:6:23;:::i;180:194:72:-;;;;;;-1:-1:-1;;180:194:72;;;;;;1489:36:27;1507:17;180:194:72;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;;180:194:72;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;6095:15:26;;;:25;180:194:72;;6181:169:26;6360:64;180:194:72;6452:9:26;180:194:72;;;6235:58:26;;;;180:194:72;6235:58:26;;;;;;1441:71;;;;;180:194:72;1441:71:26;;;180:194:72;1441:71:26;180:194:72;;;1441:71:26;;;180:194:72;1441:71:26;;;180:194:72;1441:71:26;180:194:72;1441:71:26;6235:58;;;;;;;;;:::i;:::-;6208:87;180:194:72;;;;;;;6225:69:26;;6208:87;:::i;:::-;6181:169;:::i;:::-;6377:17;;;180:194:72;;-1:-1:-1;180:194:72;3231:7:25;180:194:72;;;-1:-1:-1;180:194:72;;;;;1050:1:31;180:194:72;;;;3111:203:25;6377:17:26;6368:26;6360:64;:::i;:::-;6452:9;:::i;180:194:72:-;;;;-1:-1:-1;;;180:194:72;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;180:194:72;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;:::i;:::-;2146:15:25;;;:27;180:194:72;;2411:28:25;2449:58;2301:16;2249:79;2543:5;2301:16;2249:79;2301:16;;180:194:72;;-1:-1:-1;180:194:72;3231:7:25;180:194:72;;;-1:-1:-1;180:194:72;;;;;1050:1:31;180:194:72;;;;3111:203:25;2301:16;180:194:72;;;2249:79:25;;;180:194:72;2249:79:25;;;;;;;1125:95;;;;;;;;;;;180:194:72;1125:95:25;180:194:72;;;;;;1125:95:25;;;180:194:72;;1125:95:25;;;180:194:72;1125:95:25;;;180:194:72;1125:95:25;;;180:194:72;1125:95:25;180:194:72;1125:95:25;2249:79;2355:28;180:194:72;;;;;;;2239:90:25;;2355:28;:::i;2411:::-;180:194:72;;;;;;2457:15:25;2449:58;:::i;:::-;2543:5;:::i;180:194:72:-;;;;-1:-1:-1;;;180:194:72;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;180:194:72;;;;;;4089:27:23;180:194:72;;:::i;:::-;;;;:::i;:::-;;;-1:-1:-1;180:194:72;4089:11:23;180:194:72;;;-1:-1:-1;180:194:72;;;;;;;;;;;;;4089:27:23;180:194:72;;;;;;;;;;;;;-1:-1:-1;;180:194:72;;;;;;;:::i;:::-;;;;;;;;;;;;;1867:26:26;180:194:72;;;;;-1:-1:-1;180:194:72;;;;;;:::i;:::-;;;;;;;-1:-1:-1;180:194:72;1867:12:26;180:194:72;;;-1:-1:-1;180:194:72;1867:26:26;:::i;:::-;180:194:72;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;5235:1:26;180:194:72;;;;;;;;:::o;:::-;;;:::i;:::-;;;:::o;:::-;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;;-1:-1:-1;;;180:194:72;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;180:194:72;;;;;;;;;;;;;;;;;;;;;;;7473:818:23;;;180:194:72;;;;;7599:18:23;;180:194:72;;8277:6:23;180:194:72;;;7677:16:23;7669:64;7677:16;;;7669:64;:::i;:::-;7815:15;;;180:194:72;;8669:1:23;180:194:72;8669:1:23;180:194:72;;;8669:1:23;180:194:72;;;7815:15:23;180:194:72;7840:72:23;7848:21;;;;7840:72;:::i;:::-;180:194:72;7946:15:23;;180:194:72;;8669:1:23;180:194:72;8669:1:23;180:194:72;;;8669:1:23;180:194:72;;;7946:15:23;180:194:72;8161:13:23;;180:194:72;;8669:1:23;180:194:72;8669:1:23;180:194:72;;;8669:1:23;180:194:72;;;8161:13:23;180:194:72;;;;;;;;;;;8210:26:23;;180:194:72;;8210:26:23;8277:6;:::i;:::-;7473:818::o;180:194:72:-;;;;-1:-1:-1;;;180:194:72;;;;;;;;;;;;;;;;;;;;;;;10504:370:23;;180:194:72;;;;;10635:19:23;;;180:194:72;;;;10713:21:23;;;180:194:72;;10784:18:23;:27;10835:32;10784:18;;10835:32;10784:18;180:194:72;;;;10784:11:23;180:194:72;;;;;;;10784:18:23;180:194:72;;;;;;;;;;;;10784:27:23;180:194:72;;;;;;;;;;;;;;10835:32:23;;;;10504:370::o;180:194:72:-;;;;-1:-1:-1;;;180:194:72;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;180:194:72;;;;;;;;;;;;;;;;;;;;;;;1125:95:25;;;;:::o;:::-;;180:194:72;;-1:-1:-1;;;1125:95:25;;;;;;;;;;;180:194:72;1125:95:25;180:194:72;;;1125:95:25;;180:194:72;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;180:194:72;;-1:-1:-1;180:194:72;;;-1:-1:-1;180:194:72;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::o;2417:243:26:-;180:194:72;;-1:-1:-1;180:194:72;2523:12:26;180:194:72;;;-1:-1:-1;180:194:72;;-1:-1:-1;2592:8:26;;:51;:8;;;-1:-1:-1;;;2417:243:26;-1:-1:-1;2417:243:26:o;2592:51::-;180:194:72;;-1:-1:-1;;180:194:72;2607:30:26;180:194:72;;;;2607:30:26;;:::i;:::-;180:194:72;;;;;2417:243:26;:::o;180:194:72:-;;;;:::o;:::-;;;;-1:-1:-1;;;180:194:72;;;;;;;;;;;;;;;;;;2853:265:26;180:194:72;2853:265:26;2970:70;2992:12;2978:26;;2970:70;:::i;:::-;180:194:72;-1:-1:-1;180:194:72;3076:12:26;180:194:72;;;-1:-1:-1;180:194:72;;;4960:15:26;-1:-1:-1;4985:21:26;5030:1;5021:10;;5017:244;;2853:265;5271:244;;5278:10;;;;;;-1:-1:-1;;5556:9:26;;;-1:-1:-1;;;2853:265:26;-1:-1:-1;2853:265:26:o;5556:52::-;5572:30;:36;180:194:72;-1:-1:-1;;180:194:72;;;5572:30:26;10202:110;;;;;;10079:239;;5572:36;180:194:72;2853:265:26;:::o;5271:244::-;941:5:36;;930:21;941:5;;;180:194:72;;931:5:36;;;930:21;:::i;:::-;5359:25:26;;180:194:72;5359:35:26;:25;;;10202:110;;;;;;10079:239;;5359:35;180:194:72;5359:49:26;;;;5428:10;5355:150;;5271:244;;;5355:150;5483:7;;;;;:::i;:::-;5355:150;;5017:244;5070:17;;5061:26;5070:17;;;;;:::i;5061:26::-;5105:25;;180:194:72;5105:35:26;:25;;;10202:110;;;;;;10079:239;;5105:35;180:194:72;5105:49:26;;;;5174:10;5101:150;;5017:244;;;5101:150;5229:7;;;;;:::i;:::-;5101:150;;180:194:72;;;;;;;;:::o;:::-;;;:::i;:::-;;;:::o;1441:71:26:-;;;;:::o;:::-;;180:194:72;;-1:-1:-1;;;1441:71:26;;;;;;;;;;;180:194:72;1441:71:26;180:194:72;;;1441:71:26;;7467:254;2312:10;180:194:72;;;;;;;;;;;;;;;;7707:6:26;;7467:254;180:194:72;;;;;7707:6:26;:::i;7467:254::-;;7707:6;7467:254;;180:194:72;;;;-1:-1:-1;180:194:72;2312:10:26;180:194:72;;;;;-1:-1:-1;180:194:72;;;;;-1:-1:-1;180:194:72;;-1:-1:-1;180:194:72;;;7707:6:26;;:::i;7892:380::-;8248:16;7892:380;180:194:72;;;;-1:-1:-1;180:194:72;;;;2312:10:26;180:194:72;;;;;;;;;;;;;8138:54:26;180:194:72;;;;;2312:10:26;180:194:72;;;;;;;;;;;;;;;;;;;8138:54:26;8278:627;;;180:194:72;;;;;;8398:10:26;;;;:24;;;8278:627;8394:505;;8278:627;;;;;:::o;8394:505::-;8442:17;8438:221;;8394:505;8677:17;;8673:216;;8394:505;;;;8673:216;8827:47;8772:17;;8755:49;8772:17;180:194:72;;;;8772:12:26;180:194:72;;;;;;;8772:17:26;8755:49;:::i;:::-;180:194:72;;;;;;;;;;;;;;8827:47:26;8673:216;;;;;8438:221;180:194:72;8457:1:26;180:194:72;8537:12:26;180:194:72;;8597:47:26;180:194:72;8457:1:26;180:194:72;;;9218:8:26;;:59;;;;;;180:194:72;;:::i;:::-;8457:1:26;180:194:72;;8457:1:26;180:194:72;9229:16:26;;180:194:72;9218:59:26;;9292:25;180:194:72;;9304:13:26;;180:194:72;;;;;;;;;;9292:25:26;9343:20;;;;;:::i;:::-;9382:7;;:44;;;;9218:59;-1:-1:-1;9378:333:26;;;9446:29;:67;9484:29;-1:-1:-1;;9484:29:26;;;:::i;:::-;180:194:72;;9446:29:26;10202:110;;;;;;10079:239;;9446:29;180:194:72;;;;;;;;;;;;;;;9446:67:26;180:194:72;;;;;;;;;;;;;8597:47:26;8438:221;;;9378:333;9625:12;9552:144;9625:12;9607:31;9625:12;9607:31;:::i;:::-;9647:29;9584:94;9647:29;;;:::i;:::-;9584:94;180:194:72;;:::i;:::-;;;;;;;;9584:94:26;180:194:72;;;9584:94:26;;180:194:72;;9584:94:26;9552:144;:::i;:::-;9378:333;;9382:44;180:194:72;;;;-1:-1:-1;180:194:72;;9414:12:26;9393:33;9382:44;;;9218:59;180:194:72;9248:29:26;-1:-1:-1;;180:194:72;;9248:29:26;10202:110;;;;;;10079:239;;9248:29;180:194:72;:::i;:::-;9218:59:26;;;8398:24;8412:10;;;;8398:24;;180:194:72;7003:23:26;180:194:72;;;;;;;;;;;;;7003:23:26;180:194:72;;;;;;7003:23:26;-1:-1:-1;180:194:72;;;;;;;;;;;;;;;;;;;;;;;;7473:818:23:o;180:194:72:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;7473:818:23:o;180:194:72:-;;;;;;;;;;;;;:::i;:::-;;;8911:816:26;7003:23;180:194:72;8911:816:26;;9218:8;;;:59;;;;180:194:72;;:::i;:::-;9225:1:26;180:194:72;;9225:1:26;9229:16;;;180:194:72;9218:59:26;9817:5;9292:25;180:194:72;9304:13:26;;;180:194:72;;;;;9292:25:26;9817:5;;;:::i;:::-;9382:7;;:44;;;;9218:59;-1:-1:-1;9378:333:26;;;9446:67;9484:29;9446;-1:-1:-1;;9484:29:26;;;:::i;:::-;180:194:72;;3605:23:26;10202:110;;;;10079:239;;9378:333;9625:12;9552:144;9607:31;9625:12;9607:31;:::i;:::-;9584:94;9647:29;;;:::i;:::-;9584:94;180:194:72;;:::i;:::-;;;;;;;;9584:94:26;180:194:72;;9304:13:26;9584:94;;180:194:72;;9584:94:26;9552:144;:::i;9382:44::-;180:194:72;;;;-1:-1:-1;180:194:72;;9414:12:26;9393:33;9382:44;;;9218:59;3605:23;10202:110;;180:194:72;10202:110:26;;;180:194:72;:::i;:::-;9218:59:26;;8911:816;;;180:194:72;;9218:8:26;;;:59;;;;;;180:194:72;;:::i;:::-;9225:1:26;180:194:72;;9225:1:26;9229:16;;;180:194:72;9218:59:26;9817:5;9292:25;180:194:72;9304:13:26;;;180:194:72;;;;;9292:25:26;9817:5;;;:::i;:::-;9382:7;;:44;;;;9218:59;-1:-1:-1;9378:333:26;;;9446:29;:67;9484:29;-1:-1:-1;;9484:29:26;;;:::i;9378:333::-;9625:12;9552:144;9625:12;9607:31;9625:12;9607:31;:::i;9382:44::-;180:194:72;;;;-1:-1:-1;180:194:72;;9414:12:26;9393:33;9382:44;;;9218:59;180:194:72;9248:29:26;-1:-1:-1;;180:194:72;;9248:29:26;10202:110;;;;;;10079:239;;180:194:72;9218:59:26;;6696:270:33;;6927:5;6696:270;;6880:25;6696:270;6880:25;:::i;:::-;6927:5;;;;:::i;:::-;6696:270;:::o;180:194:72:-;;-1:-1:-1;180:194:72;;;:::o;:::-;;;;;;;;;;570:511:33;180:194:72;;;:::i;:::-;638:29:33;;;683:7;:::o;634:441::-;180:194:72;;;:::i;:::-;743:29:33;734:38;;743:29;;180:194:72;;-1:-1:-1;;;788:34:33;;180:194:72;788:34:33;;;180:194:72;;;;;;;;;;;;;788:34:33;730:345;180:194:72;;;:::i;:::-;852:35:33;843:44;;852:35;;180:194:72;;-1:-1:-1;;;903:41:33;;180:194:72;903:41:33;;;180:194:72;;;;;;;;;;;;;788:34:33;839:236;180:194:72;;974:30:33;180:194:72;;:::i;:::-;965:39:33;961:114;;570:511::o;961:114::-;180:194:72;;-1:-1:-1;;;1020:44:33;;180:194:72;1020:44:33;;;180:194:72;;;;;;;;;;;;;;;;;;788:34:33;5069:1494;;;;6119:66;6106:79;;6102:161;;180:194:72;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6374:24:33;;;;;;;;;;;;;;180:194:72;;;6412:20:33;6408:101;;6519:37;5069:1494;:::o;6408:101::-;6448:50;6374:24;6448:50;:::o;6374:24::-;180:194:72;;;;;;;;;;;6102:161:33;6201:51;;;;6217:1;6201:51;6221:30;6201:51;:::o;3152:308:34:-;180:194:72;3245:12:34;180:194:72;3236:4:34;3228:29;:66;;;3152:308;3224:230;;;3317:24;3310:31;:::o;3224:230::-;180:194:72;;3642:73:34;;;3401:10;;180:194:72;;3413:12:34;180:194:72;;;;3427:15:34;180:194:72;;;;3686:13:34;180:194:72;;;;3236:4:34;180:194:72;;;;;3642:73:34;;;;;:::i;:::-;180:194:72;3632:84:34;;3372:71;:::o;3228:66::-;3278:16;;3261:13;:33;3228:66;;4348:165;4473:20;;:::i;:::-;180:194:72;;;8470:57:33;;;;180:194:72;;;;;;;;;;;;;8470:57:33;;180:194:72;;;;;;;;;;;;4348:165:34;180:194:72;;;8460:68:33;;4348:165:34;:::o;180:194:72:-;;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;6305:1642:36;6376:6;;6372:45;;7119:7;7919:10;7860:26;7811;7762;7713;7664;7615;7566;180:194:72;7907:23:36;7119:7;6381:1;180:194:72;;;;8535:16:36;8531:99;;6305:1642;180:194:72;;;;8647:15:36;8643:96;;6305:1642;180:194:72;;;;8756:15:36;8752:96;;6305:1642;180:194:72;;;;8865:15:36;8861:96;;6305:1642;180:194:72;;;;8974:14:36;8970:93;;6305:1642;180:194:72;;;;9080:14:36;9076:93;;6305:1642;180:194:72;;;;9186:14:36;9182:93;;6305:1642;180:194:72;;;9288:64:36;;6305:1642;180:194:72;;;7576:10:36;;;;:::i;:::-;180:194:72;;;;;7566:26:36;7625:10;;;;:::i;7615:26::-;7674:10;;;;:::i;7664:26::-;7723:10;;;;:::i;7713:26::-;7772:10;;;;:::i;7762:26::-;7821:10;;;;:::i;7811:26::-;7870:10;;;;:::i;7860:26::-;7919:10;;;:::i;:::-;7907:23;;:::i;9288:64::-;180:194:72;;9288:64:36;;9182:93;180:194:72;9220:11:36;;180:194:72;;9182:93:36;;;;9076;180:194:72;9114:11:36;;180:194:72;;9076:93:36;;;;8970;180:194:72;9008:11:36;;180:194:72;;8970:93:36;;;;8861:96;180:194:72;8900:12:36;;180:194:72;;8861:96:36;;;;8752;180:194:72;8791:12:36;;180:194:72;;8752:96:36;;;;8643;180:194:72;8682:12:36;;180:194:72;;8643:96:36;;;;8531:99;8571:13;;;180:194:72;8531:99:36;;;;6372:45;6398:8;6381:1;6398:8;:::o;588:104::-;;672:5;;;;;;:13;588:104;:::o;672:13::-;;;588:104;:::o;2836:192:37:-;180:194:72;2920:26:37;;;;180:194:72;;;2836:192:37;:::o;180:194:72:-;;;;-1:-1:-1;;;180:194:72;;;;;;;;;;;;;;;;;;;;;;;11168:187:37;180:194:72;11250:25:37;;;;180:194:72;;;11168:187:37;:::o;180:194:72:-;;;;-1:-1:-1;;;180:194:72;;;;;;;;;;;;;;;;;;;;;;;15264:187:37;180:194:72;15346:25:37;;;;180:194:72;;;15264:187:37;:::o;180:194:72:-;;;;-1:-1:-1;;;180:194:72;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;180:194:72;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {},
    "immutableReferences": {
      "28193": [
        {
          "start": 8653,
          "length": 32
        }
      ],
      "28195": [
        {
          "start": 8840,
          "length": 32
        }
      ],
      "28197": [
        {
          "start": 8606,
          "length": 32
        }
      ],
      "28199": [
        {
          "start": 8732,
          "length": 32
        }
      ],
      "28201": [
        {
          "start": 8770,
          "length": 32
        }
      ],
      "28203": [
        {
          "start": 8697,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "DOMAIN_SEPARATOR()": "3644e515",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "checkpoints(address,uint32)": "f1127ed8",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "delegate(address)": "5c19a95c",
    "delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": "c3cda520",
    "delegates(address)": "587cde1e",
    "getCurrentVotes(address)": "b4b5ea57",
    "getPastTotalSupply(uint256)": "8e539e8c",
    "getPastVotes(address,uint256)": "3a46b1a8",
    "getPriorVotes(address,uint256)": "782d6fe1",
    "getVotes(address)": "9ab24eb0",
    "increaseAllowance(address,uint256)": "39509351",
    "mint(address,uint256)": "40c10f19",
    "name()": "06fdde03",
    "nonces(address)": "7ecebe00",
    "numCheckpoints(address)": "6fcfff45",
    "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"pos\",\"type\":\"uint32\"}],\"name\":\"checkpoints\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"fromBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint224\",\"name\":\"votes\",\"type\":\"uint224\"}],\"internalType\":\"struct ERC20Votes.Checkpoint\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getCurrentVotes\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPriorVotes\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"numCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"See {IERC20Permit-DOMAIN_SEPARATOR}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"checkpoints(address,uint32)\":{\"details\":\"Get the `pos`-th checkpoint for `account`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"delegate(address)\":{\"details\":\"Delegate votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`\"},\"delegates(address)\":{\"details\":\"Get the address `account` is currently delegating to.\"},\"getCurrentVotes(address)\":{\"details\":\"Comp version of the {getVotes} accessor, with `uint96` return type.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Retrieve the `totalSupply` at the end of `blockNumber`. Note, this value is the sum of all balances. It is NOT the sum of all the delegated votes! Requirements: - `blockNumber` must have been already mined\"},\"getPastVotes(address,uint256)\":{\"details\":\"Retrieve the number of votes for `account` at the end of `blockNumber`. Requirements: - `blockNumber` must have been already mined\"},\"getPriorVotes(address,uint256)\":{\"details\":\"Comp version of the {getPastVotes} accessor, with `uint96` return type.\"},\"getVotes(address)\":{\"details\":\"Gets the current votes balance for `account`\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC20Permit-nonces}.\"},\"numCheckpoints(address)\":{\"details\":\"Get number of checkpoints for `account`.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC20Permit-permit}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/mocks/CompToken.sol\":\"CompToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[\":@gnosis.pm/safe-contracts/=lib/safe-contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@prb/test/=lib/prb-test/src/\",\":@solidity-bytes-utils/contracts/=lib/solidity-bytes-utils/contracts/\",\":@zodiac/=lib/zodiac/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":prb-test/=lib/prb-test/src/\",\":safe-contracts/=lib/safe-contracts/contracts/\",\":solidity-bytes-utils/=lib/solidity-bytes-utils/contracts/\",\":zodiac/=lib/zodiac/contracts/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0xf5324a55ee9c0b4a840ea57c055ac9d046f88986ceef567e1cf68113e46a79c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f41fe2bddc33c17ccccfc25379b1869354e9ee62d8b28d2acc95229eeba37a86\",\"dweb:/ipfs/Qmb6SF2XL2uSvH6k5JSjtx4Xoqz41ACkhdAhtbW1Yh3RiY\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xf84f1c4f09ba032cbcd0c2fa13517e94b1c1350837a0c47a51e7cde92704e0b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbc0cf8f8fda53daa8ed06bec221ac47449d6d85d14bc22c2b2ce4c49bd19fde\",\"dweb:/ipfs/QmRHYgHcWJq3gmLcy7BQijDahwv6wrzbkpThLxjDEDR8XR\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Votes.sol\":{\"keccak256\":\"0x8abe7259a724711a0862bd89e2b94c76dd0e8b75576b8cc1be4b2203345a3060\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b088508bc2f253037fbc877eed265474838b1a8a5bfcedcea42d083cc7c48acc\",\"dweb:/ipfs/QmUsfs7Y2JZMh683XmS8QEzyiph3S8uPjdBs9upTNUFmR7\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20VotesComp.sol\":{\"keccak256\":\"0x3e2cf78abe35170695b26fb9f820fe7bfeed607604f4d6c1261f811704c79f16\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3d677e79ed97d35fa1fa3df7b45df9de5947e0939bb7229bfb05bc00fef9ed45\",\"dweb:/ipfs/QmRiFfC3KJH6KX7hP5cdasrxvEVbB2Fy8UJDDbf2xNSax9\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x35e258421ae206f3db37281cea70871b4c3553914734aa76139a41af60ac1abb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ef94b6bc4ee356db612a1849c615f7dd4b15542d6c8584c86bb9243a7913cf0\",\"dweb:/ipfs/QmaxFj5NFpAjjitZtHPNS9PPtCuBATaRz9ktDDRCQCQ83y\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb\",\"dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x948d8b2d18f38141ec78c5229d770d950ebc781ed3f44cc9e3ccbb9fded5846a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7311ac950ed2d81f3ccf1784a926efbfc82a86dcb5c98d41eb3792c0cac63a2f\",\"dweb:/ipfs/QmRRwCUHewkPmehx8QRYENFoWyLNx8UEZGULxWYUeSZdTS\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xba1ae0497d71bf30f3710c38aba13a5b68c31d81ff04dd73e5dd55a05a9c903d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d77f4aee3f6534fe2dbc6583385fc123340f8ccb9bf3c8c04555e538a3d9a4b5\",\"dweb:/ipfs/QmVtP4Fz9tB2DFvMHJaSFbLxnEHE1NKDA92fviV7jDkEnL\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"test/mocks/CompToken.sol\":{\"keccak256\":\"0xa6788a81e00bc8a9b493a1fa93b2d228a97f9dcb754690ec8fcf5ebe31ba08da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f188c08b79023b6eef4bcb0fe5583f2c9a4d2bb489b3458d8ed1afe7380dd043\",\"dweb:/ipfs/QmNfsRmzu3Zsq3XRpCTFFxRWPsg1iM1fUzUXHjFMdPp2re\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "delegator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "fromDelegate",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "toDelegate",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "DelegateChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "delegate",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "previousBalance",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newBalance",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DelegateVotesChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DOMAIN_SEPARATOR",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "pos",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "checkpoints",
          "outputs": [
            {
              "internalType": "struct ERC20Votes.Checkpoint",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "fromBlock",
                  "type": "uint32"
                },
                {
                  "internalType": "uint224",
                  "name": "votes",
                  "type": "uint224"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "delegatee",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "delegate"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "delegatee",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expiry",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "delegateBySig"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "delegates",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getCurrentVotes",
          "outputs": [
            {
              "internalType": "uint96",
              "name": "",
              "type": "uint96"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "blockNumber",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPastTotalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "blockNumber",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPastVotes",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "blockNumber",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPriorVotes",
          "outputs": [
            {
              "internalType": "uint96",
              "name": "",
              "type": "uint96"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getVotes",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "nonces",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "numCheckpoints",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "permit"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "DOMAIN_SEPARATOR()": {
            "details": "See {IERC20Permit-DOMAIN_SEPARATOR}."
          },
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "checkpoints(address,uint32)": {
            "details": "Get the `pos`-th checkpoint for `account`."
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "delegate(address)": {
            "details": "Delegate votes from the sender to `delegatee`."
          },
          "delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": {
            "details": "Delegates votes from signer to `delegatee`"
          },
          "delegates(address)": {
            "details": "Get the address `account` is currently delegating to."
          },
          "getCurrentVotes(address)": {
            "details": "Comp version of the {getVotes} accessor, with `uint96` return type."
          },
          "getPastTotalSupply(uint256)": {
            "details": "Retrieve the `totalSupply` at the end of `blockNumber`. Note, this value is the sum of all balances. It is NOT the sum of all the delegated votes! Requirements: - `blockNumber` must have been already mined"
          },
          "getPastVotes(address,uint256)": {
            "details": "Retrieve the number of votes for `account` at the end of `blockNumber`. Requirements: - `blockNumber` must have been already mined"
          },
          "getPriorVotes(address,uint256)": {
            "details": "Comp version of the {getPastVotes} accessor, with `uint96` return type."
          },
          "getVotes(address)": {
            "details": "Gets the current votes balance for `account`"
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "nonces(address)": {
            "details": "See {IERC20Permit-nonces}."
          },
          "numCheckpoints(address)": {
            "details": "Get number of checkpoints for `account`."
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "details": "See {IERC20Permit-permit}."
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@gnosis.pm/safe-contracts/=lib/safe-contracts/",
        ":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        ":@prb/test/=lib/prb-test/src/",
        ":@solidity-bytes-utils/contracts/=lib/solidity-bytes-utils/contracts/",
        ":@zodiac/=lib/zodiac/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-gas-snapshot/=lib/forge-gas-snapshot/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":prb-test/=lib/prb-test/src/",
        ":safe-contracts/=lib/safe-contracts/contracts/",
        ":solidity-bytes-utils/=lib/solidity-bytes-utils/contracts/",
        ":zodiac/=lib/zodiac/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 10000
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "test/mocks/CompToken.sol": "CompToken"
      },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/governance/utils/IVotes.sol": {
        "keccak256": "0xf5324a55ee9c0b4a840ea57c055ac9d046f88986ceef567e1cf68113e46a79c0",
        "urls": [
          "bzz-raw://f41fe2bddc33c17ccccfc25379b1869354e9ee62d8b28d2acc95229eeba37a86",
          "dweb:/ipfs/Qmb6SF2XL2uSvH6k5JSjtx4Xoqz41ACkhdAhtbW1Yh3RiY"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d",
        "urls": [
          "bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d",
          "dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol": {
        "keccak256": "0xf84f1c4f09ba032cbcd0c2fa13517e94b1c1350837a0c47a51e7cde92704e0b5",
        "urls": [
          "bzz-raw://dbc0cf8f8fda53daa8ed06bec221ac47449d6d85d14bc22c2b2ce4c49bd19fde",
          "dweb:/ipfs/QmRHYgHcWJq3gmLcy7BQijDahwv6wrzbkpThLxjDEDR8XR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Votes.sol": {
        "keccak256": "0x8abe7259a724711a0862bd89e2b94c76dd0e8b75576b8cc1be4b2203345a3060",
        "urls": [
          "bzz-raw://b088508bc2f253037fbc877eed265474838b1a8a5bfcedcea42d083cc7c48acc",
          "dweb:/ipfs/QmUsfs7Y2JZMh683XmS8QEzyiph3S8uPjdBs9upTNUFmR7"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20VotesComp.sol": {
        "keccak256": "0x3e2cf78abe35170695b26fb9f820fe7bfeed607604f4d6c1261f811704c79f16",
        "urls": [
          "bzz-raw://3d677e79ed97d35fa1fa3df7b45df9de5947e0939bb7229bfb05bc00fef9ed45",
          "dweb:/ipfs/QmRiFfC3KJH6KX7hP5cdasrxvEVbB2Fy8UJDDbf2xNSax9"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0x35e258421ae206f3db37281cea70871b4c3553914734aa76139a41af60ac1abb",
        "urls": [
          "bzz-raw://2ef94b6bc4ee356db612a1849c615f7dd4b15542d6c8584c86bb9243a7913cf0",
          "dweb:/ipfs/QmaxFj5NFpAjjitZtHPNS9PPtCuBATaRz9ktDDRCQCQ83y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Counters.sol": {
        "keccak256": "0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1",
        "urls": [
          "bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee",
          "dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a",
        "urls": [
          "bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634",
          "dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba",
        "urls": [
          "bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb",
          "dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol": {
        "keccak256": "0x948d8b2d18f38141ec78c5229d770d950ebc781ed3f44cc9e3ccbb9fded5846a",
        "urls": [
          "bzz-raw://7311ac950ed2d81f3ccf1784a926efbfc82a86dcb5c98d41eb3792c0cac63a2f",
          "dweb:/ipfs/QmRRwCUHewkPmehx8QRYENFoWyLNx8UEZGULxWYUeSZdTS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xba1ae0497d71bf30f3710c38aba13a5b68c31d81ff04dd73e5dd55a05a9c903d",
        "urls": [
          "bzz-raw://d77f4aee3f6534fe2dbc6583385fc123340f8ccb9bf3c8c04555e538a3d9a4b5",
          "dweb:/ipfs/QmVtP4Fz9tB2DFvMHJaSFbLxnEHE1NKDA92fviV7jDkEnL"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad",
        "urls": [
          "bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278",
          "dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH"
        ],
        "license": "MIT"
      },
      "test/mocks/CompToken.sol": {
        "keccak256": "0xa6788a81e00bc8a9b493a1fa93b2d228a97f9dcb754690ec8fcf5ebe31ba08da",
        "urls": [
          "bzz-raw://f188c08b79023b6eef4bcb0fe5583f2c9a4d2bb489b3458d8ed1afe7380dd043",
          "dweb:/ipfs/QmNfsRmzu3Zsq3XRpCTFFxRWPsg1iM1fUzUXHjFMdPp2re"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/mocks/CompToken.sol",
    "id": 37137,
    "exportedSymbols": {
      "CompToken": [
        37136
      ],
      "ERC20": [
        26487
      ],
      "ERC20Permit": [
        26737
      ],
      "ERC20VotesComp": [
        27494
      ]
    },
    "nodeType": "SourceUnit",
    "src": "33:342:72",
    "nodes": [
      {
        "id": 37105,
        "nodeType": "PragmaDirective",
        "src": "33:24:72",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 37109,
        "nodeType": "ImportDirective",
        "src": "59:119:72",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20VotesComp.sol",
        "file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20VotesComp.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 37137,
        "sourceUnit": 27495,
        "symbolAliases": [
          {
            "foreign": {
              "id": 37106,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 26487,
              "src": "68:5:72",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 37107,
              "name": "ERC20Permit",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 26737,
              "src": "75:11:72",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 37108,
              "name": "ERC20VotesComp",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 27494,
              "src": "88:14:72",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 37136,
        "nodeType": "ContractDefinition",
        "src": "180:194:72",
        "nodes": [
          {
            "id": 37122,
            "nodeType": "FunctionDefinition",
            "src": "223:58:72",
            "nodes": [],
            "body": {
              "id": 37121,
              "nodeType": "Block",
              "src": "279:2:72",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "54657374",
                    "id": 37114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "243:6:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_85cc825a98ec217d960f113f5f80a95d7fd18e3725d37df428eb14f880bdfc12",
                      "typeString": "literal_string \"Test\""
                    },
                    "value": "Test"
                  },
                  {
                    "hexValue": "54455354",
                    "id": 37115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "251:6:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_852daa74cc3c31fe64542bb9b8764cfb91cc30f9acf9389071ffb44a9eefde46",
                      "typeString": "literal_string \"TEST\""
                    },
                    "value": "TEST"
                  }
                ],
                "id": 37116,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 37113,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 26487,
                  "src": "237:5:72"
                },
                "nodeType": "ModifierInvocation",
                "src": "237:21:72"
              },
              {
                "arguments": [
                  {
                    "hexValue": "54657374",
                    "id": 37118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "271:6:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_85cc825a98ec217d960f113f5f80a95d7fd18e3725d37df428eb14f880bdfc12",
                      "typeString": "literal_string \"Test\""
                    },
                    "value": "Test"
                  }
                ],
                "id": 37119,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 37117,
                  "name": "ERC20Permit",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 26737,
                  "src": "259:11:72"
                },
                "nodeType": "ModifierInvocation",
                "src": "259:19:72"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 37112,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "234:2:72"
            },
            "returnParameters": {
              "id": 37120,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "279:0:72"
            },
            "scope": 37136,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 37135,
            "nodeType": "FunctionDefinition",
            "src": "287:85:72",
            "nodes": [],
            "body": {
              "id": 37134,
              "nodeType": "Block",
              "src": "338:34:72",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 37130,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37124,
                        "src": "354:2:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 37131,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37126,
                        "src": "358:6:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 37129,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        27130
                      ],
                      "referencedDeclaration": 27130,
                      "src": "348:5:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 37132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "348:17:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37133,
                  "nodeType": "ExpressionStatement",
                  "src": "348:17:72"
                }
              ]
            },
            "functionSelector": "40c10f19",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "296:4:72",
            "parameters": {
              "id": 37127,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37124,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "309:2:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 37135,
                  "src": "301:10:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37123,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "301:7:72",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37126,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "321:6:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 37135,
                  "src": "313:14:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37125,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "313:7:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "300:28:72"
            },
            "returnParameters": {
              "id": 37128,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "338:0:72"
            },
            "scope": 37136,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 37110,
              "name": "ERC20VotesComp",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 27494,
              "src": "202:14:72"
            },
            "id": 37111,
            "nodeType": "InheritanceSpecifier",
            "src": "202:14:72"
          }
        ],
        "canonicalName": "CompToken",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          37136,
          27494,
          27438,
          26737,
          28341,
          27555,
          26487,
          27519,
          26565,
          27577,
          25900
        ],
        "name": "CompToken",
        "nameLocation": "189:9:72",
        "scope": 37137,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 72
}