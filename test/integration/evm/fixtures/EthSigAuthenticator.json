{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "version",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "InvalidFunctionSelector",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidSignature",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SaltAlreadyUsed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "salt",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "internalType": "bytes4",
          "name": "functionSelector",
          "type": "bytes4"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "authenticate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x61014080604052346200014e576200136b803803809162000021828562000153565b83398101906040818303126200014e5780516001600160401b0391908281116200014e57836200005391830162000177565b9260208201518381116200014e576200006d920162000177565b91602081519101209160208151910120918060e052610100928084524660a05260405160208101917f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f93848452604083015260608201524660808201523060a082015260a0815260c0810193818510908511176200013857836040525190206080523060c05261012090815261117c9283620001ef843960805183610b94015260a05183610c49015260c05183610b65015260e05183610be301525182610c0901525181610bc00152f35b634e487b7160e01b600052604160045260246000fd5b600080fd5b601f909101601f19168101906001600160401b038211908210176200013857604052565b919080601f840112156200014e578251906001600160401b038211620001385760405191602091620001b3601f8301601f191684018562000153565b8184528282870101116200014e5760005b818110620001da57508260009394955001015290565b8581018301518482018401528201620001c456fe6080604052600436101561001257600080fd5b6000803560e01c6390bec9b81461002857600080fd5b346100f45760e07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100f45761005f6100f7565b60843561006b8161011a565b60a435917fffffffff00000000000000000000000000000000000000000000000000000000831683036100f05760c4359267ffffffffffffffff928385116100ec57366023860112156100ec5784600401359384116100ec5736602485870101116100ec5760246100e9950192606435906044359060243590610272565b80f35b8580fd5b8380fd5b80fd5b6004359060ff8216820361010757565b600080fd5b359060ff8216820361010757565b73ffffffffffffffffffffffffffffffffffffffff81160361010757565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040810190811067ffffffffffffffff82111761018357604052565b610138565b6080810190811067ffffffffffffffff82111761018357604052565b60c0810190811067ffffffffffffffff82111761018357604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761018357604052565b67ffffffffffffffff811161018357601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b92919261024782610201565b9161025560405193846101c0565b829481845281830111610107578281602093846000960137010152565b959693959291907fffffffff0000000000000000000000000000000000000000000000000000000086167faad83f3b0000000000000000000000000000000000000000000000000000000081036102f4575092866102ec95936102e5936102f29a966102df36888a61023b565b94610741565b369161023b565b916105a4565b565b9193909290917fbc7e56f000000000000000000000000000000000000000000000000000000000810361033e5750508387876102f299956102ec979561033995610d79565b6102e5565b7f0b515570000000000000000000000000000000000000000000000000000000009098949295939198146000146105575761038c61037d36858761023b565b6020808251830101910161112f565b94919293909773ffffffffffffffffffffffffffffffffffffffff809516986103e88d6103d98c73ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b90600052602052604060002090565b5461052d578b6104c0956104b38f6104878e9b918c9261040a6104bb98610c6f565b90602081519101209060405196879560208701998a9260c09491979695929760e08501987fd4da3505dd8ebafecaa0a60cd43a495d9cd5145325732986b7139a443821d0f9865273ffffffffffffffffffffffffffffffffffffffff80921660208701521660408501526060840152608083015260a08201520152565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081018352826101c0565b519020610afc565b610882565b1603610503576103396104fd6102f2976103d96102ec9673ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b60019055565b60046040517f8baa579f000000000000000000000000000000000000000000000000000000008152fd5b60046040517f0ced3043000000000000000000000000000000000000000000000000000000008152fd5b60046040517f42868c9b000000000000000000000000000000000000000000000000000000008152fd5b60005b8381106105945750506000910152565b8181015183820152602001610584565b916105fb602460405180937fffffffff0000000000000000000000000000000000000000000000000000000060208301961686526105eb8151809260208686019101610581565b81010360048101845201826101c0565b600092839283809351925af13d1561063f573d61061781610201565b9061062560405192836101c0565b81528260203d92013e5b156106375750565b3d908181803efd5b61062f565b81601f8201121561010757805161065a81610201565b9261066860405194856101c0565b81845260208284010111610107576106869160208085019101610581565b90565b919060408382031261010757604051906106a282610167565b819380516106af8161011a565b835260208101519167ffffffffffffffff8311610107576020926106d39201610644565b910152565b6080818303126101075780516106ed8161011a565b9260208201519167ffffffffffffffff928381116101075784610711918301610644565b936040820151848111610107578161072a918401610689565b936060830151908111610107576106869201610644565b929461075990929192602080825183010191016106d8565b9392949173ffffffffffffffffffffffffffffffffffffffff969196809616976107a78a6103d98b73ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b5461052d5788976104b3896104878d61084b9a6107ce8860206104bb9a5191012096610c6f565b90602081519101209060405196879560208701998a9260c09491979695929760e08501987f3f4f5d2d7bbe0d480b081f84c9bdb18ba843152e969645ed6dc8a9d90c83188c865273ffffffffffffffffffffffffffffffffffffffff80921660208701521660408501526060840152608083015260a08201520152565b1603610503576102f2916103d96104fd9273ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b91610686939161089193610a60565b9190916108d7565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600511156108d257565b610899565b6108e0816108c8565b806108e85750565b6108f1816108c8565b60018103610958576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606490fd5b610961816108c8565b600281036109c8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606490fd5b806109d46003926108c8565b146109db57565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60448201527f75650000000000000000000000000000000000000000000000000000000000006064820152608490fd5b9291907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311610af05791608094939160ff602094604051948552168484015260408301526060820152600093849182805260015afa15610ae357815173ffffffffffffffffffffffffffffffffffffffff811615610add579190565b50600190565b50604051903d90823e3d90fd5b50505050600090600390565b610b04610b4e565b906040519060208201927f190100000000000000000000000000000000000000000000000000000000000084526022830152604282015260428152610b4881610188565b51902090565b73ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016301480610c46575b15610bb6577f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101907f000000000000000000000000000000000000000000000000000000000000000082527f000000000000000000000000000000000000000000000000000000000000000060408201527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260a08152610b48816101a4565b507f00000000000000000000000000000000000000000000000000000000000000004614610b8d565b602073ffffffffffffffffffffffffffffffffffffffff825116910151602081519101206040519060208201927fcaed499d02be902df50ad9112a126ad2688628af4ffd9da0c3a70bdbc9979d6d84526040830152606082015260608152610b4881610188565b67ffffffffffffffff81116101835760051b60200190565b9080601f83011215610107578160206106869335910161023b565b7f1c5fa0cfd607be7fe6c84e8a90f68e5bd72c81571290a8e28eac25434346c9f2815273ffffffffffffffffffffffffffffffffffffffff918216602082015291166040820152606081019190915260e0810194939260038310156108d25760c092608083015260a08201520152565b9492939460a086858101031261010757610d93863561011a565b6003604087013510156101075760608601359367ffffffffffffffff851161010757808701601f8689010112156101075784870135610dd181610cd6565b95610ddf60405197886101c0565b8187526020870190838a0160208460051b838d01010111610107576020818b0101915b60208460051b838d0101018310610e9b575050505060808701359467ffffffffffffffff861161010757876104b3610e48610e93986104bb95610e6e9c01908401610cee565b9861048773ffffffffffffffffffffffffffffffffffffffff9a8b8535169c8d96611070565b906020815191012090604051958694602086019860206040840135930135918a610d09565b160361050357565b823567ffffffffffffffff8111610107576040838d018201878e01037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00112610107578060408d9285825194610ef086610167565b610f00602084848401010161010c565b8652010101359067ffffffffffffffff821161010757848e010101868d01603f82011215610107576020928392610f448f938a86950190604086820135910161023b565b838201528152019301929050610e02565b90610f5f82610cd6565b610f6c60405191826101c0565b8281527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0610f9a8294610cd6565b0190602036910137565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610fd15760010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b80518210156110145760209160051b010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b805160208092019160005b82811061105c575050505090565b83518552938101939281019260010161104e565b9061107b8251610f55565b60005b835181101561111657806110a06110986111119387611000565b515160ff1690565b60206110fe816110b0858a611000565b510151805190830120604080517f0e7fde7bf0920f058ac1e42e7e8d2907921fbba6044b8ebd3be400b0ea539ccb94810194855260ff90951660208501528301529091908160608401610487565b51902061110b8285611000565b52610fa4565b61107e565b50909150604051610b4881610487602082018095611043565b906080828203126101075781516111458161011a565b9260208301519260408101519267ffffffffffffffff93848111610107578161072a91840161068956fea164736f6c6343000812000a",
    "sourceMap": "225:1362:71:-:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;225:1362:71;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;2550:22:57;225:1362:71;;;;;;2606:25:57;2787;;;;2822:31;;;;;2882:13;2863:32;;225:1362:71;;;3642:73:57;;2660:117;;225:1362:71;;;;;;;;;;;;2882:13:57;225:1362:71;;;;3709:4:57;2863:32;225:1362:71;;;2863:32:57;3642:73;;225:1362:71;;;;;;;;;;;;;;;;;3632:84:57;;225:1362:71;2905:85:57;3709:4;225:1362:71;3000:28:57;3038:21;;;;225:1362:71;;;;;;;;;;;;2863:32:57;225:1362:71;;;;;;;;;;;2787:25:57;225:1362:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;225:1362:71;;;;;;;-1:-1:-1;;225:1362:71;;;;-1:-1:-1;;;;;225:1362:71;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;225:1362:71;;;;;;;;;;;;;-1:-1:-1;;225:1362:71;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;225:1362:71;;;;;;;;-1:-1:-1;225:1362:71;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436101561001257600080fd5b6000803560e01c6390bec9b81461002857600080fd5b346100f45760e07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100f45761005f6100f7565b60843561006b8161011a565b60a435917fffffffff00000000000000000000000000000000000000000000000000000000831683036100f05760c4359267ffffffffffffffff928385116100ec57366023860112156100ec5784600401359384116100ec5736602485870101116100ec5760246100e9950192606435906044359060243590610272565b80f35b8580fd5b8380fd5b80fd5b6004359060ff8216820361010757565b600080fd5b359060ff8216820361010757565b73ffffffffffffffffffffffffffffffffffffffff81160361010757565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040810190811067ffffffffffffffff82111761018357604052565b610138565b6080810190811067ffffffffffffffff82111761018357604052565b60c0810190811067ffffffffffffffff82111761018357604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761018357604052565b67ffffffffffffffff811161018357601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b92919261024782610201565b9161025560405193846101c0565b829481845281830111610107578281602093846000960137010152565b959693959291907fffffffff0000000000000000000000000000000000000000000000000000000086167faad83f3b0000000000000000000000000000000000000000000000000000000081036102f4575092866102ec95936102e5936102f29a966102df36888a61023b565b94610741565b369161023b565b916105a4565b565b9193909290917fbc7e56f000000000000000000000000000000000000000000000000000000000810361033e5750508387876102f299956102ec979561033995610d79565b6102e5565b7f0b515570000000000000000000000000000000000000000000000000000000009098949295939198146000146105575761038c61037d36858761023b565b6020808251830101910161112f565b94919293909773ffffffffffffffffffffffffffffffffffffffff809516986103e88d6103d98c73ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b90600052602052604060002090565b5461052d578b6104c0956104b38f6104878e9b918c9261040a6104bb98610c6f565b90602081519101209060405196879560208701998a9260c09491979695929760e08501987fd4da3505dd8ebafecaa0a60cd43a495d9cd5145325732986b7139a443821d0f9865273ffffffffffffffffffffffffffffffffffffffff80921660208701521660408501526060840152608083015260a08201520152565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081018352826101c0565b519020610afc565b610882565b1603610503576103396104fd6102f2976103d96102ec9673ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b60019055565b60046040517f8baa579f000000000000000000000000000000000000000000000000000000008152fd5b60046040517f0ced3043000000000000000000000000000000000000000000000000000000008152fd5b60046040517f42868c9b000000000000000000000000000000000000000000000000000000008152fd5b60005b8381106105945750506000910152565b8181015183820152602001610584565b916105fb602460405180937fffffffff0000000000000000000000000000000000000000000000000000000060208301961686526105eb8151809260208686019101610581565b81010360048101845201826101c0565b600092839283809351925af13d1561063f573d61061781610201565b9061062560405192836101c0565b81528260203d92013e5b156106375750565b3d908181803efd5b61062f565b81601f8201121561010757805161065a81610201565b9261066860405194856101c0565b81845260208284010111610107576106869160208085019101610581565b90565b919060408382031261010757604051906106a282610167565b819380516106af8161011a565b835260208101519167ffffffffffffffff8311610107576020926106d39201610644565b910152565b6080818303126101075780516106ed8161011a565b9260208201519167ffffffffffffffff928381116101075784610711918301610644565b936040820151848111610107578161072a918401610689565b936060830151908111610107576106869201610644565b929461075990929192602080825183010191016106d8565b9392949173ffffffffffffffffffffffffffffffffffffffff969196809616976107a78a6103d98b73ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b5461052d5788976104b3896104878d61084b9a6107ce8860206104bb9a5191012096610c6f565b90602081519101209060405196879560208701998a9260c09491979695929760e08501987f3f4f5d2d7bbe0d480b081f84c9bdb18ba843152e969645ed6dc8a9d90c83188c865273ffffffffffffffffffffffffffffffffffffffff80921660208701521660408501526060840152608083015260a08201520152565b1603610503576102f2916103d96104fd9273ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b91610686939161089193610a60565b9190916108d7565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600511156108d257565b610899565b6108e0816108c8565b806108e85750565b6108f1816108c8565b60018103610958576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606490fd5b610961816108c8565b600281036109c8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606490fd5b806109d46003926108c8565b146109db57565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60448201527f75650000000000000000000000000000000000000000000000000000000000006064820152608490fd5b9291907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311610af05791608094939160ff602094604051948552168484015260408301526060820152600093849182805260015afa15610ae357815173ffffffffffffffffffffffffffffffffffffffff811615610add579190565b50600190565b50604051903d90823e3d90fd5b50505050600090600390565b610b04610b4e565b906040519060208201927f190100000000000000000000000000000000000000000000000000000000000084526022830152604282015260428152610b4881610188565b51902090565b73ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016301480610c46575b15610bb6577f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101907f000000000000000000000000000000000000000000000000000000000000000082527f000000000000000000000000000000000000000000000000000000000000000060408201527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260a08152610b48816101a4565b507f00000000000000000000000000000000000000000000000000000000000000004614610b8d565b602073ffffffffffffffffffffffffffffffffffffffff825116910151602081519101206040519060208201927fcaed499d02be902df50ad9112a126ad2688628af4ffd9da0c3a70bdbc9979d6d84526040830152606082015260608152610b4881610188565b67ffffffffffffffff81116101835760051b60200190565b9080601f83011215610107578160206106869335910161023b565b7f1c5fa0cfd607be7fe6c84e8a90f68e5bd72c81571290a8e28eac25434346c9f2815273ffffffffffffffffffffffffffffffffffffffff918216602082015291166040820152606081019190915260e0810194939260038310156108d25760c092608083015260a08201520152565b9492939460a086858101031261010757610d93863561011a565b6003604087013510156101075760608601359367ffffffffffffffff851161010757808701601f8689010112156101075784870135610dd181610cd6565b95610ddf60405197886101c0565b8187526020870190838a0160208460051b838d01010111610107576020818b0101915b60208460051b838d0101018310610e9b575050505060808701359467ffffffffffffffff861161010757876104b3610e48610e93986104bb95610e6e9c01908401610cee565b9861048773ffffffffffffffffffffffffffffffffffffffff9a8b8535169c8d96611070565b906020815191012090604051958694602086019860206040840135930135918a610d09565b160361050357565b823567ffffffffffffffff8111610107576040838d018201878e01037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00112610107578060408d9285825194610ef086610167565b610f00602084848401010161010c565b8652010101359067ffffffffffffffff821161010757848e010101868d01603f82011215610107576020928392610f448f938a86950190604086820135910161023b565b838201528152019301929050610e02565b90610f5f82610cd6565b610f6c60405191826101c0565b8281527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0610f9a8294610cd6565b0190602036910137565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610fd15760010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b80518210156110145760209160051b010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b805160208092019160005b82811061105c575050505090565b83518552938101939281019260010161104e565b9061107b8251610f55565b60005b835181101561111657806110a06110986111119387611000565b515160ff1690565b60206110fe816110b0858a611000565b510151805190830120604080517f0e7fde7bf0920f058ac1e42e7e8d2907921fbba6044b8ebd3be400b0ea539ccb94810194855260ff90951660208501528301529091908160608401610487565b51902061110b8285611000565b52610fa4565b61107e565b50909150604051610b4881610487602082018095611043565b906080828203126101075781516111458161011a565b9260208301519260408101519267ffffffffffffffff93848111610107578161072a91840161068956fea164736f6c6343000812000a",
    "sourceMap": "225:1362:71:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::o;439:75:70:-;;;;;;;;;;;225:1362:71;439:75:70;;;;;;;;;;;225:1362:71;439:75:70;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;225:1362:71;439:75:70;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;225:1362:71;439:75:70;225:1362:71;;439:75:70;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;439:75:70;;;;;;:::o;905:680:71:-;;;;;;;;225:1362;;;;1119:36;;225:1362;;439:75:70;;;;;;1171:46:71;439:75:70;1541:37:71;439:75:70;;;;;;;:::i;:::-;1171:46:71;;:::i;:::-;439:75:70;;;:::i;:::-;1541:37:71;;:::i;:::-;905:680::o;1115:417::-;1238:33;;;;;;225:1362;1238:33;;225:1362;;1319:4;;;;;1541:37;1319:4;;439:75:70;1319:4:71;;;;;:::i;:::-;1115:417;;1234:298;225:1362;1345:44;;;;;;;;;1341:191;225:1362;;;4748:88:109;439:75:70;;;;;:::i;:::-;4748:88:109;225:1362:71;;;4748:88:109;;;;;;:::i;:::-;225:1362:71;;;;;;;;;;4851:17:109;:23;:17;;;225:1362:71;;2440:9:109;225:1362:71;2440:9:109;225:1362:71;;;2440:9:109;225:1362:71;;;4851:17:109;225:1362:71;;;;;;;;;;4851:23:109;225:1362:71;4847:62:109;;5224:24;4947:495;5224:24;5039:316;5224:24;5039:316;5224:24;;;;;;4974:413;5224:24;;:::i;:::-;225:1362:71;4748:88:109;225:1362:71;;861:231:109;;5274:29;225:1362:71;;;5039:316:109;;;4748:88;5039:316;;;;1446:222;;;;;;;;;;;;861:231;1446:222;861:231;;225:1362:71;;;;1446:222:109;;;861:231;225:1362:71;1446:222:109;;;861:231;1446:222;;;861:231;1446:222;;;861:231;1446:222;;;861:231;1446:222;861:231;1446:222;5039:316;;;;;;;;;:::i;:::-;225:1362:71;5008:365:109;;4974:413;:::i;:::-;4947:495;:::i;:::-;225:1362:71;5457:26:109;5453:57;;5577:30;:23;1541:37:71;5577:17:109;;439:75:70;5577:17:109;225:1362:71;;2440:9:109;225:1362:71;2440:9:109;225:1362:71;;;2440:9:109;225:1362:71;;;5577:23:109;319:1:103;;;;5453:57:109;5492:18;225:1362:71;;5492:18:109;;;;4847:62;4892:17;225:1362:71;;4892:17:109;;;;1341:191:71;1496:25;225:1362;;1496:25;;;;225:1362;;;;;;;;-1:-1:-1;;225:1362:71;;;;:::o;:::-;;;;;;;;;;;;;574:593:70;;758:40;225:1362:71;;;758:40:70;;225:1362:71;758:40:70;;;225:1362:71;;;;;;;;;758:40:70;225:1362:71;;;;;;:::i;:::-;;;758:40:70;;;;;;;;;:::i;:::-;-1:-1:-1;746:53:70;;;;;;;;;;225:1362:71;;;;;;;;:::i;:::-;;439:75:70;225:1362:71;;439:75:70;;;:::i;:::-;225:1362:71;;;758:40:70;225:1362:71;;;;;813:8:70;809:352;;574:593;:::o;809:352::-;977:174;;;;;;;225:1362:71;;;;;;;;;;;;;;;;;:::i;:::-;;439:75:70;225:1362:71;;439:75:70;;;:::i;:::-;225:1362:71;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;439:75:70;;;;:::i;:::-;225:1362:71;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;2066:1158:109:-;;;2373:52;2066:1158;;;;2373:52;225:1362:71;;;2373:52:109;;;;;;:::i;:::-;225:1362:71;;;;;;;;;;;2440:17:109;:23;:17;;;225:1362:71;;2440:9:109;225:1362:71;2440:9:109;225:1362:71;;;2440:9:109;225:1362:71;;;2440:23:109;225:1362:71;2436:62:109;;225:1362:71;;2628:337:109;225:1362:71;2628:337:109;225:1362:71;2536:516:109;225:1362:71;2824:24:109;225:1362:71;2373:52:109;2563:434;225:1362:71;;861:231:109;;2769:29;2824:24;;:::i;:::-;225:1362:71;2373:52:109;225:1362:71;;861:231:109;;2874:39;225:1362:71;;;2628:337:109;;;2373:52;2628:337;;;;861:231;;;;;;;;;;;;;;;;225:1362:71;;;;861:231:109;;;;225:1362:71;861:231:109;;;;;;;;;;;;;;;;;;;2536:516;225:1362:71;3067:26:109;3063:57;;3187:30;:17;;:23;:17;225:1362:71;;2440:9:109;225:1362:71;2440:9:109;225:1362:71;;;2440:9:109;225:1362:71;;;6696:270:56;;6927:5;6696:270;;6880:25;6696:270;6880:25;:::i;:::-;6927:5;;;;:::i;225:1362:71:-;;;;;;;;;;;;-1:-1:-1;225:1362:71;;;:::o;:::-;;:::i;570:511:56:-;225:1362:71;;;:::i;:::-;638:29:56;;;683:7;:::o;634:441::-;225:1362:71;;;:::i;:::-;743:29:56;734:38;;743:29;;225:1362:71;;788:34:56;;;225:1362:71;788:34:56;;;225:1362:71;;;;;;;;;;;;;788:34:56;730:345;225:1362:71;;;:::i;:::-;852:35:56;843:44;;852:35;;225:1362:71;;903:41:56;;;225:1362:71;903:41:56;;;225:1362:71;;;;;;;;;;;;;788:34:56;839:236;225:1362:71;;974:30:56;225:1362:71;;:::i;:::-;965:39:56;961:114;;570:511::o;961:114::-;225:1362:71;;1020:44:56;;;225:1362:71;1020:44:56;;;225:1362:71;;;;;;;;;;;;;;;;;;788:34:56;5069:1494;;;;6119:66;6106:79;;6102:161;;225:1362:71;;;;;;;;;;861:231:109;;;225:1362:71;;;;;;;;861:231:109;225:1362:71;;;861:231:109;-1:-1:-1;6374:24:56;;;;;;;;;;;;;;225:1362:71;;;6412:20:56;6408:101;;6519:37;5069:1494;:::o;6408:101::-;6448:50;6374:24;6448:50;:::o;6374:24::-;225:1362:71;;;;;;;;;;;6102:161:56;6201:51;;;;6217:1;6201:51;6221:30;6201:51;:::o;4348:165:57:-;4473:20;;:::i;:::-;225:1362:71;;;8470:57:56;;;;225:1362:71;;;;;;;861:231:109;225:1362:71;;;861:231:109;225:1362:71;8470:57:56;;;;;:::i;:::-;225:1362:71;8460:68:56;;4348:165:57;:::o;3152:308::-;225:1362:71;3245:12:57;225:1362:71;3236:4:57;3228:29;:66;;;3152:308;3224:230;;;3317:24;3310:31;:::o;3224:230::-;225:1362:71;;3642:73:57;;;3401:10;;861:231:109;;3413:12:57;225:1362:71;;;861:231:109;3427:15:57;225:1362:71;;;861:231:109;3686:13:57;225:1362:71;;;861:231:109;3236:4:57;225:1362:71;;;861:231:109;225:1362:71;3642:73:57;;;;;:::i;3228:66::-;3278:16;;3261:13;:33;3228:66;;476:179:107;630:15;225:1362:71;271:48:107;;225:1362:71;630:15:107;;;;225:1362:71;;861:231:109;;620:26:107;225:1362:71;;575:72:107;630:15;575:72;;861:231:109;271:48:107;861:231:109;;225:1362:71;271:48:107;;861:231:109;271:48:107;;;861:231:109;271:48:107;575:72;;;;;:::i;225:1362:71:-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::i;1147:233:109:-;;861:231;;225:1362:71;;;;1147:233:109;;;861:231;225:1362:71;;1147:233:109;;;861:231;1147:233;;;861:231;;;;1147:233;;;;;;;;;;;;;;;;;;;;;861:231;1147:233;861:231;1147:233::o;3289:989::-;;;;;225:1362:71;3604:71:109;;;;225:1362:71;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;3604:71:109;;;225:1362:71;;;;;;;;;;;;;;;;:::i;:::-;;439:75:70;225:1362:71;;439:75:70;;;:::i;:::-;225:1362:71;;;;;;3604:71:109;;;;225:1362:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3604:71:109;3805:312;225:1362:71;3713:491:109;3604:71;3740:409;3604:71;4009:27;3604:71;;225:1362:71;;;;:::i;:::-;;3805:312:109;225:1362:71;;;;;;4009:27:109;;;;:::i;:::-;225:1362:71;;;;861:231:109;;4062:33;225:1362:71;;;3805:312:109;;;225:1362:71;3805:312:109;;225:1362:71;;;;;;;;;3805:312:109;;;:::i;3713:491::-;225:1362:71;4219:25:109;4215:56;;3289:989::o;225:1362:71:-;;;;;;;;;;;;;;3604:71:109;;;225:1362:71;;;;;;;;;;;;;439:75:70;;;;:::i;:::-;225:1362:71;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3604:71:109;;;225:1362:71;;;;;;;;3604:71:109;;;225:1362:71;3604:71:109;;;;;;225:1362:71;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;439:75:70;225:1362:71;;439:75:70;;;:::i;:::-;225:1362:71;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;;;:::o;:::-;;;;;;;;;;378:54:107;225:1362:71;;378:54:107;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;225:1362:71;;861:231:109;;;;378:54:107;;;;;;;;;;;;;:::o;:::-;;;861:231:109;;378:54:107;;;;;;;;;;;;716:594;;857:39;225:1362:71;;857:39:107;:::i;:::-;923:1;956:3;225:1362:71;;926:28:107;;;;;1108:20;:26;:20;956:3;1108:20;;;:::i;:::-;;378:54;225:1362:71;;;378:54:107;1108:26;1166:27;1029:183;1166:20;;;;;:::i;:::-;;:27;;225:1362:71;;861:231:109;;;1156:38:107;225:1362:71;;;378:54:107;1029:183;;;861:231:109;;;225:1362:71;;;;378:54:107;;;225:1362:71;378:54:107;;861:231:109;1029:183:107;;225:1362:71;;378:54:107;;;1029:183;378:54;1029:183;225:1362:71;1002:224:107;;975:251;;;;:::i;:::-;378:54;956:3;:::i;:::-;911:13;;926:28;;;;;225:1362:71;;1263:39:107;;378:54;1166:27;1263:39;;378:54;;;:::i;225:1362:71:-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i",
    "linkReferences": {},
    "immutableReferences": {
      "32063": [
        {
          "start": 2964,
          "length": 32
        }
      ],
      "32065": [
        {
          "start": 3145,
          "length": 32
        }
      ],
      "32067": [
        {
          "start": 2917,
          "length": 32
        }
      ],
      "32069": [
        {
          "start": 3043,
          "length": 32
        }
      ],
      "32071": [
        {
          "start": 3081,
          "length": 32
        }
      ],
      "32073": [
        {
          "start": 3008,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "authenticate(uint8,bytes32,bytes32,uint256,address,bytes4,bytes)": "90bec9b8"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InvalidFunctionSelector\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SaltAlreadyUsed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"functionSelector\",\"type\":\"bytes4\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"authenticate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"authenticate(uint8,bytes32,bytes32,uint256,address,bytes4,bytes)\":{\"params\":{\"functionSelector\":\"The function selector of the function to be called.\",\"r\":\"The r component of the signature.\",\"s\":\"The s component of the signature.\",\"salt\":\"The salt used to generate the signature.\",\"target\":\"The target Space contract address.\",\"v\":\"The v component of the signature.\"}}},\"title\":\"Ethereum Signature Authenticator\",\"version\":1},\"userdoc\":{\"errors\":{\"InvalidSignature()\":[{\"notice\":\"Thrown if a signature is invalid.\"}],\"SaltAlreadyUsed()\":[{\"notice\":\"Thrown if a user has already used a specific salt.\"}]},\"kind\":\"user\",\"methods\":{\"authenticate(uint8,bytes32,bytes32,uint256,address,bytes4,bytes)\":{\"notice\":\"Authenticates a user by verifying an EIP712 signature.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/authenticators/EthSigAuthenticator.sol\":\"EthSigAuthenticator\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[\":@gnosis.pm/safe-contracts/=lib/safe-contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@prb/test/=lib/prb-test/src/\",\":@zodiac/=lib/zodiac/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":prb-test/=lib/prb-test/src/\",\":safe-contracts/=lib/safe-contracts/contracts/\",\":zodiac/=lib/zodiac/contracts/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb\",\"dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x948d8b2d18f38141ec78c5229d770d950ebc781ed3f44cc9e3ccbb9fded5846a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7311ac950ed2d81f3ccf1784a926efbfc82a86dcb5c98d41eb3792c0cac63a2f\",\"dweb:/ipfs/QmRRwCUHewkPmehx8QRYENFoWyLNx8UEZGULxWYUeSZdTS\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xba1ae0497d71bf30f3710c38aba13a5b68c31d81ff04dd73e5dd55a05a9c903d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d77f4aee3f6534fe2dbc6583385fc123340f8ccb9bf3c8c04555e538a3d9a4b5\",\"dweb:/ipfs/QmVtP4Fz9tB2DFvMHJaSFbLxnEHE1NKDA92fviV7jDkEnL\"]},\"lib/safe-contracts/contracts/common/Enum.sol\":{\"keccak256\":\"0x473e45b1a5cc47be494b0e123c9127f0c11c1e0992a321ae5a644c0bfdb2c14f\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://948e6d5a8bd7377f7795b6e28584eab9be5c0a8db240bf5e606744a175238c3d\",\"dweb:/ipfs/QmQQaUmQfpuejV41jbxKSTgEBYYCcVTjCsDMgf2htgz6ej\"]},\"src/authenticators/Authenticator.sol\":{\"keccak256\":\"0xe5f349d2ea0dd4a2021ed4a27756f02560be9d87270e17eda282b550ae8643cb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://56fcb6ebf2056afe719d65b489b17199d88d115cd8d27d088df43bade6275a22\",\"dweb:/ipfs/QmT51FxoiDBStZC1RnQBcVtuM5QTL2vT4aXetjf1m22bpF\"]},\"src/authenticators/EthSigAuthenticator.sol\":{\"keccak256\":\"0xa57f02331c1d024deb134b6bd97b648d623e6d415a323db90f45539f28c296ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dda013197372f65a7d81203733f77e73200b0784c42d81accb1e4085a812911c\",\"dweb:/ipfs/QmNR97c3rCjtuE6zQrh3wY6P53d3QzFNK33JGGMPJSGFuQ\"]},\"src/interfaces/IExecutionStrategy.sol\":{\"keccak256\":\"0x8caef430ce09dd42c4b90ff62b18090c12bcb2dcf19294e4316bd2cc2bfffef9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d20584f72310a2607990eb5c6f307e81c606d38b4a95b91d2f9427b068e51050\",\"dweb:/ipfs/QmZaDzFnBq7qXy45YmBbqcay7DQZo8xfvTLriMEKocesK8\"]},\"src/interfaces/execution-strategies/IExecutionStrategyErrors.sol\":{\"keccak256\":\"0x8a1c904a4f3573013dbe8b55e3322dc929c9d6e56dc4cfe7a8e7866834661430\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://358d063db15582f772bd49400a90b5087fa6768068581494f87a5ba1eb9ef20a\",\"dweb:/ipfs/QmSovbYrxxMXvyhWTfAuZYcUDhJ1VRZca4XjiE1e8vv9Yb\"]},\"src/types.sol\":{\"keccak256\":\"0xcdc5465d75fd7bdbde15892a0ef01f16fb8ab48907e4183acb860af91c93fee4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc76c16a6ecc59eb6dc5c53d032d691f8bc08b417d41ef87960a54713bbd2e7f\",\"dweb:/ipfs/QmZbvxxmZEyus5hX5ThYD6qDuaTjpWR8FLZLGTEDKKBDsb\"]},\"src/utils/SXHash.sol\":{\"keccak256\":\"0xc3b685243b391284cf983c6c77be9fd70c00a9c182ce87fb0dc1b71098ca2f19\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95801a8a9cc3ed9f9c1fa34fff1ddbb80ab84fa70d9ece96a3c8269bc809f8bd\",\"dweb:/ipfs/QmTGignCkjMCnMZWZxWcgSUgmoQGQnXaZP2MHJ7oAkBBSK\"]},\"src/utils/SignatureVerifier.sol\":{\"keccak256\":\"0x115c6c5487c563993010e058c4d4384013562e16983bcf9995245f9ffd1ee9e9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9bc2b7266a74fd94f68f12d82ee4575d9cf680bae6fa79418400d9fcdb13a2b7\",\"dweb:/ipfs/QmaRhXECrKmBMooVsaAK477PGiig9TnPSH2xcVZQmJ9akj\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.18+commit.87f61d96"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "version",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidFunctionSelector"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidSignature"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SaltAlreadyUsed"
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            },
            {
              "internalType": "bytes4",
              "name": "functionSelector",
              "type": "bytes4"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "authenticate"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "authenticate(uint8,bytes32,bytes32,uint256,address,bytes4,bytes)": {
            "params": {
              "functionSelector": "The function selector of the function to be called.",
              "r": "The r component of the signature.",
              "s": "The s component of the signature.",
              "salt": "The salt used to generate the signature.",
              "target": "The target Space contract address.",
              "v": "The v component of the signature."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "authenticate(uint8,bytes32,bytes32,uint256,address,bytes4,bytes)": {
            "notice": "Authenticates a user by verifying an EIP712 signature."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@gnosis.pm/safe-contracts/=lib/safe-contracts/",
        ":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        ":@prb/test/=lib/prb-test/src/",
        ":@zodiac/=lib/zodiac/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-gas-snapshot/=lib/forge-gas-snapshot/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":prb-test/=lib/prb-test/src/",
        ":safe-contracts/=lib/safe-contracts/contracts/",
        ":zodiac/=lib/zodiac/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 10000
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "src/authenticators/EthSigAuthenticator.sol": "EthSigAuthenticator"
      },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a",
        "urls": [
          "bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634",
          "dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba",
        "urls": [
          "bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb",
          "dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol": {
        "keccak256": "0x948d8b2d18f38141ec78c5229d770d950ebc781ed3f44cc9e3ccbb9fded5846a",
        "urls": [
          "bzz-raw://7311ac950ed2d81f3ccf1784a926efbfc82a86dcb5c98d41eb3792c0cac63a2f",
          "dweb:/ipfs/QmRRwCUHewkPmehx8QRYENFoWyLNx8UEZGULxWYUeSZdTS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xba1ae0497d71bf30f3710c38aba13a5b68c31d81ff04dd73e5dd55a05a9c903d",
        "urls": [
          "bzz-raw://d77f4aee3f6534fe2dbc6583385fc123340f8ccb9bf3c8c04555e538a3d9a4b5",
          "dweb:/ipfs/QmVtP4Fz9tB2DFvMHJaSFbLxnEHE1NKDA92fviV7jDkEnL"
        ],
        "license": "MIT"
      },
      "lib/safe-contracts/contracts/common/Enum.sol": {
        "keccak256": "0x473e45b1a5cc47be494b0e123c9127f0c11c1e0992a321ae5a644c0bfdb2c14f",
        "urls": [
          "bzz-raw://948e6d5a8bd7377f7795b6e28584eab9be5c0a8db240bf5e606744a175238c3d",
          "dweb:/ipfs/QmQQaUmQfpuejV41jbxKSTgEBYYCcVTjCsDMgf2htgz6ej"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/authenticators/Authenticator.sol": {
        "keccak256": "0xe5f349d2ea0dd4a2021ed4a27756f02560be9d87270e17eda282b550ae8643cb",
        "urls": [
          "bzz-raw://56fcb6ebf2056afe719d65b489b17199d88d115cd8d27d088df43bade6275a22",
          "dweb:/ipfs/QmT51FxoiDBStZC1RnQBcVtuM5QTL2vT4aXetjf1m22bpF"
        ],
        "license": "MIT"
      },
      "src/authenticators/EthSigAuthenticator.sol": {
        "keccak256": "0xa57f02331c1d024deb134b6bd97b648d623e6d415a323db90f45539f28c296ea",
        "urls": [
          "bzz-raw://dda013197372f65a7d81203733f77e73200b0784c42d81accb1e4085a812911c",
          "dweb:/ipfs/QmNR97c3rCjtuE6zQrh3wY6P53d3QzFNK33JGGMPJSGFuQ"
        ],
        "license": "MIT"
      },
      "src/interfaces/IExecutionStrategy.sol": {
        "keccak256": "0x8caef430ce09dd42c4b90ff62b18090c12bcb2dcf19294e4316bd2cc2bfffef9",
        "urls": [
          "bzz-raw://d20584f72310a2607990eb5c6f307e81c606d38b4a95b91d2f9427b068e51050",
          "dweb:/ipfs/QmZaDzFnBq7qXy45YmBbqcay7DQZo8xfvTLriMEKocesK8"
        ],
        "license": "MIT"
      },
      "src/interfaces/execution-strategies/IExecutionStrategyErrors.sol": {
        "keccak256": "0x8a1c904a4f3573013dbe8b55e3322dc929c9d6e56dc4cfe7a8e7866834661430",
        "urls": [
          "bzz-raw://358d063db15582f772bd49400a90b5087fa6768068581494f87a5ba1eb9ef20a",
          "dweb:/ipfs/QmSovbYrxxMXvyhWTfAuZYcUDhJ1VRZca4XjiE1e8vv9Yb"
        ],
        "license": "MIT"
      },
      "src/types.sol": {
        "keccak256": "0xcdc5465d75fd7bdbde15892a0ef01f16fb8ab48907e4183acb860af91c93fee4",
        "urls": [
          "bzz-raw://bc76c16a6ecc59eb6dc5c53d032d691f8bc08b417d41ef87960a54713bbd2e7f",
          "dweb:/ipfs/QmZbvxxmZEyus5hX5ThYD6qDuaTjpWR8FLZLGTEDKKBDsb"
        ],
        "license": "MIT"
      },
      "src/utils/SXHash.sol": {
        "keccak256": "0xc3b685243b391284cf983c6c77be9fd70c00a9c182ce87fb0dc1b71098ca2f19",
        "urls": [
          "bzz-raw://95801a8a9cc3ed9f9c1fa34fff1ddbb80ab84fa70d9ece96a3c8269bc809f8bd",
          "dweb:/ipfs/QmTGignCkjMCnMZWZxWcgSUgmoQGQnXaZP2MHJ7oAkBBSK"
        ],
        "license": "MIT"
      },
      "src/utils/SignatureVerifier.sol": {
        "keccak256": "0x115c6c5487c563993010e058c4d4384013562e16983bcf9995245f9ffd1ee9e9",
        "urls": [
          "bzz-raw://9bc2b7266a74fd94f68f12d82ee4575d9cf680bae6fa79418400d9fcdb13a2b7",
          "dweb:/ipfs/QmaRhXECrKmBMooVsaAK477PGiig9TnPSH2xcVZQmJ9akj"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/authenticators/EthSigAuthenticator.sol",
    "id": 37822,
    "exportedSymbols": {
      "Authenticator": [37725],
      "EthSigAuthenticator": [37821],
      "SignatureVerifier": [43418]
    },
    "nodeType": "SourceUnit",
    "src": "33:1555:71",
    "nodes": [
      {
        "id": 37727,
        "nodeType": "PragmaDirective",
        "src": "33:24:71",
        "nodes": [],
        "literals": ["solidity", "^", "0.8", ".18"]
      },
      {
        "id": 37729,
        "nodeType": "ImportDirective",
        "src": "59:52:71",
        "nodes": [],
        "absolutePath": "src/authenticators/Authenticator.sol",
        "file": "./Authenticator.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 37822,
        "sourceUnit": 37726,
        "symbolAliases": [
          {
            "foreign": {
              "id": 37728,
              "name": "Authenticator",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 37725,
              "src": "68:13:71",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 37731,
        "nodeType": "ImportDirective",
        "src": "112:67:71",
        "nodes": [],
        "absolutePath": "src/utils/SignatureVerifier.sol",
        "file": "../utils/SignatureVerifier.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 37822,
        "sourceUnit": 43419,
        "symbolAliases": [
          {
            "foreign": {
              "id": 37730,
              "name": "SignatureVerifier",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 43418,
              "src": "121:17:71",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 37821,
        "nodeType": "ContractDefinition",
        "src": "225:1362:71",
        "nodes": [
          {
            "id": 37738,
            "nodeType": "ErrorDefinition",
            "src": "296:32:71",
            "nodes": [],
            "errorSelector": "42868c9b",
            "name": "InvalidFunctionSelector",
            "nameLocation": "302:23:71",
            "parameters": {
              "id": 37737,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "325:2:71"
            }
          },
          {
            "id": 37750,
            "nodeType": "FunctionDefinition",
            "src": "383:90:71",
            "nodes": [],
            "body": {
              "id": 37749,
              "nodeType": "Block",
              "src": "471:2:71",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 37745,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 37740,
                    "src": "456:4:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 37746,
                    "name": "version",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 37742,
                    "src": "462:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 37747,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 37744,
                  "name": "SignatureVerifier",
                  "nameLocations": ["438:17:71"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 43418,
                  "src": "438:17:71"
                },
                "nodeType": "ModifierInvocation",
                "src": "438:32:71"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 37743,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37740,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "409:4:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 37750,
                  "src": "395:18:71",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 37739,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "395:6:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37742,
                  "mutability": "mutable",
                  "name": "version",
                  "nameLocation": "429:7:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 37750,
                  "src": "415:21:71",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 37741,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "415:6:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "394:43:71"
            },
            "returnParameters": {
              "id": 37748,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "471:0:71"
            },
            "scope": 37821,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 37820,
            "nodeType": "FunctionDefinition",
            "src": "905:680:71",
            "nodes": [],
            "body": {
              "id": 37819,
              "nodeType": "Block",
              "src": "1105:480:71",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    },
                    "id": 37770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 37768,
                      "name": "functionSelector",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37763,
                      "src": "1119:16:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 37769,
                      "name": "PROPOSE_SELECTOR",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37681,
                      "src": "1139:16:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "1119:36:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 37783,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 37781,
                        "name": "functionSelector",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37763,
                        "src": "1238:16:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 37782,
                        "name": "VOTE_SELECTOR",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37689,
                        "src": "1258:13:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "1238:33:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 37795,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 37793,
                          "name": "functionSelector",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37763,
                          "src": "1345:16:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 37794,
                          "name": "UPDATE_PROPOSAL_SELECTOR",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37697,
                          "src": "1365:24:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "1345:44:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 37809,
                        "nodeType": "Block",
                        "src": "1475:57:71",
                        "statements": [
                          {
                            "errorCall": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 37806,
                                "name": "InvalidFunctionSelector",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37738,
                                "src": "1496:23:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 37807,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1496:25:71",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 37808,
                            "nodeType": "RevertStatement",
                            "src": "1489:32:71"
                          }
                        ]
                      },
                      "id": 37810,
                      "nodeType": "IfStatement",
                      "src": "1341:191:71",
                      "trueBody": {
                        "id": 37805,
                        "nodeType": "Block",
                        "src": "1391:78:71",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 37797,
                                  "name": "v",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 37753,
                                  "src": "1430:1:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                {
                                  "id": 37798,
                                  "name": "r",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 37755,
                                  "src": "1433:1:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "id": 37799,
                                  "name": "s",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 37757,
                                  "src": "1436:1:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "id": 37800,
                                  "name": "salt",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 37759,
                                  "src": "1439:4:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 37801,
                                  "name": "target",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 37761,
                                  "src": "1445:6:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 37802,
                                  "name": "data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 37765,
                                  "src": "1453:4:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_calldata_ptr",
                                    "typeString": "bytes calldata"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_calldata_ptr",
                                    "typeString": "bytes calldata"
                                  }
                                ],
                                "id": 37796,
                                "name": "_verifyUpdateProposalSig",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 43417,
                                "src": "1405:24:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_uint8_$_t_bytes32_$_t_bytes32_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                                  "typeString": "function (uint8,bytes32,bytes32,uint256,address,bytes memory)"
                                }
                              },
                              "id": 37803,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1405:53:71",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 37804,
                            "nodeType": "ExpressionStatement",
                            "src": "1405:53:71"
                          }
                        ]
                      }
                    },
                    "id": 37811,
                    "nodeType": "IfStatement",
                    "src": "1234:298:71",
                    "trueBody": {
                      "id": 37792,
                      "nodeType": "Block",
                      "src": "1273:62:71",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 37785,
                                "name": "v",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37753,
                                "src": "1302:1:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              {
                                "id": 37786,
                                "name": "r",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37755,
                                "src": "1305:1:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 37787,
                                "name": "s",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37757,
                                "src": "1308:1:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 37788,
                                "name": "target",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37761,
                                "src": "1311:6:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 37789,
                                "name": "data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37765,
                                "src": "1319:4:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                }
                              ],
                              "id": 37784,
                              "name": "_verifyVoteSig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 43322,
                              "src": "1287:14:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint8_$_t_bytes32_$_t_bytes32_$_t_address_$_t_bytes_calldata_ptr_$returns$__$",
                                "typeString": "function (uint8,bytes32,bytes32,address,bytes calldata) view"
                              }
                            },
                            "id": 37790,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1287:37:71",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 37791,
                          "nodeType": "ExpressionStatement",
                          "src": "1287:37:71"
                        }
                      ]
                    }
                  },
                  "id": 37812,
                  "nodeType": "IfStatement",
                  "src": "1115:417:71",
                  "trueBody": {
                    "id": 37780,
                    "nodeType": "Block",
                    "src": "1157:71:71",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 37772,
                              "name": "v",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37753,
                              "src": "1189:1:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            {
                              "id": 37773,
                              "name": "r",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37755,
                              "src": "1192:1:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 37774,
                              "name": "s",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37757,
                              "src": "1195:1:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 37775,
                              "name": "salt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37759,
                              "src": "1198:4:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 37776,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37761,
                              "src": "1204:6:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 37777,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37765,
                              "src": "1212:4:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            ],
                            "id": 37771,
                            "name": "_verifyProposeSig",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43242,
                            "src": "1171:17:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint8_$_t_bytes32_$_t_bytes32_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (uint8,bytes32,bytes32,uint256,address,bytes memory)"
                            }
                          },
                          "id": 37778,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1171:46:71",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 37779,
                        "nodeType": "ExpressionStatement",
                        "src": "1171:46:71"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 37814,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37761,
                        "src": "1547:6:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 37815,
                        "name": "functionSelector",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37763,
                        "src": "1555:16:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "id": 37816,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37765,
                        "src": "1573:4:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 37813,
                      "name": "_call",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37724,
                      "src": "1541:5:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes4_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes4,bytes memory)"
                      }
                    },
                    "id": 37817,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1541:37:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37818,
                  "nodeType": "ExpressionStatement",
                  "src": "1541:37:71"
                }
              ]
            },
            "documentation": {
              "id": 37751,
              "nodeType": "StructuredDocumentation",
              "src": "479:421:71",
              "text": "@notice Authenticates a user by verifying an EIP712 signature.\n @param v The v component of the signature.\n @param r The r component of the signature.\n @param s The s component of the signature.\n @param salt The salt used to generate the signature.\n @param target The target Space contract address.\n @param functionSelector The function selector of the function to be called."
            },
            "functionSelector": "90bec9b8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "authenticate",
            "nameLocation": "914:12:71",
            "parameters": {
              "id": 37766,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37753,
                  "mutability": "mutable",
                  "name": "v",
                  "nameLocation": "942:1:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 37820,
                  "src": "936:7:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 37752,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "936:5:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37755,
                  "mutability": "mutable",
                  "name": "r",
                  "nameLocation": "961:1:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 37820,
                  "src": "953:9:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 37754,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "953:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37757,
                  "mutability": "mutable",
                  "name": "s",
                  "nameLocation": "980:1:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 37820,
                  "src": "972:9:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 37756,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "972:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37759,
                  "mutability": "mutable",
                  "name": "salt",
                  "nameLocation": "999:4:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 37820,
                  "src": "991:12:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37758,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "991:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37761,
                  "mutability": "mutable",
                  "name": "target",
                  "nameLocation": "1021:6:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 37820,
                  "src": "1013:14:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37760,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1013:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37763,
                  "mutability": "mutable",
                  "name": "functionSelector",
                  "nameLocation": "1044:16:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 37820,
                  "src": "1037:23:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 37762,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1037:6:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37765,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "1085:4:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 37820,
                  "src": "1070:19:71",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 37764,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1070:5:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "926:169:71"
            },
            "returnParameters": {
              "id": 37767,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1105:0:71"
            },
            "scope": 37821,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 37733,
              "name": "Authenticator",
              "nameLocations": ["257:13:71"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 37725,
              "src": "257:13:71"
            },
            "id": 37734,
            "nodeType": "InheritanceSpecifier",
            "src": "257:13:71"
          },
          {
            "baseName": {
              "id": 37735,
              "name": "SignatureVerifier",
              "nameLocations": ["272:17:71"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 43418,
              "src": "272:17:71"
            },
            "id": 37736,
            "nodeType": "InheritanceSpecifier",
            "src": "272:17:71"
          }
        ],
        "canonicalName": "EthSigAuthenticator",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 37732,
          "nodeType": "StructuredDocumentation",
          "src": "181:44:71",
          "text": "@title Ethereum Signature Authenticator"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [37821, 43418, 32211, 37725],
        "name": "EthSigAuthenticator",
        "nameLocation": "234:19:71",
        "scope": 37822,
        "usedErrors": [37738, 43109, 43112]
      }
    ],
    "license": "MIT"
  },
  "id": 71
}
