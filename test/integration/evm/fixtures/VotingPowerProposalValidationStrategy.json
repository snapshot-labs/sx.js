{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "index",
          "type": "uint8"
        }
      ],
      "name": "DuplicateFound",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "InvalidStrategyIndex",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "author",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "params",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "userParams",
          "type": "bytes"
        }
      ],
      "name": "validate",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6080806040523461001657610805908161001c8239f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c63072160951461002757600080fd5b3461034a5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261034a5760043573ffffffffffffffffffffffffffffffffffffffff8116810361034a57602490813567ffffffffffffffff811161034a57610098903690600401610526565b60449291923567ffffffffffffffff811161034a576100bb903690600401610526565b604085848196949601031261034a5760208501359267ffffffffffffffff841161034a57808601601f85880101121561034a57838601356100fb816105e0565b94610109604051968761059f565b8186526020860183890160208460051b848c0101011161034a576020828a0101905b60208460051b848c010101821061046457505050505083019260208185031261034a5780359067ffffffffffffffff821161034a57019280601f8501121561034a57833593610179856105e0565b94610187604051968761059f565b80865260208087019160051b8301019183831161034a5760208101915b8383106103d057505050505063ffffffff42166101c08461076a565b600093845b81518610156103c1578760ff6101db88856106c9565b5151168651811015610393576101f181886106c9565b519073ffffffffffffffffffffffffffffffffffffffff82511615610363575073ffffffffffffffffffffffffffffffffffffffff81876000886102c5896102958f61024960209a918b8b819451169a0151946106c9565b510151916040519a8b998a9889977f871d81b70000000000000000000000000000000000000000000000000000000089526004890152169086015260806044860152608485019061070c565b907ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc84830301606485015261070c565b03925af190811561035757600091610320575b5081018091116102f2576102ec909561066d565b946101c5565b877f4e487b710000000000000000000000000000000000000000000000000000000060005260116004526000fd5b90506020813d60201161034f575b8161033b6020938361059f565b8101031261034a5751386102d8565b600080fd5b3d915061032e565b6040513d6000823e3d90fd5b9050604051907ff3e4f1b40000000000000000000000000000000000000000000000000000000082526004820152fd5b604051907ff3e4f1b40000000000000000000000000000000000000000000000000000000082526004820152fd5b86602091604051913511158152f35b823567ffffffffffffffff811161034a5782019060407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0838803011261034a576040519061041d82610554565b602083013560ff8116810361034a57825260408301359167ffffffffffffffff831161034a57610455886020809695819601016105f8565b838201528152019201916101a4565b813567ffffffffffffffff811161034a576040848c018201878d01037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0011261034a57604051916104b483610554565b848c0182016020013573ffffffffffffffffffffffffffffffffffffffff8116900361034a578b8501820160208101358452604001359067ffffffffffffffff821161034a576020936105158e8680969581968b8e850194010101016105f8565b83820152815201920191905061012b565b9181601f8401121561034a5782359167ffffffffffffffff831161034a576020838186019501011161034a57565b6040810190811067ffffffffffffffff82111761057057604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761057057604052565b67ffffffffffffffff81116105705760051b60200190565b81601f8201121561034a5780359067ffffffffffffffff8211610570576040519261064b60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f860116018561059f565b8284526020838301011161034a57816000926020809301838601378301015290565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461069a5760010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b80518210156106dd5760209160051b010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b919082519283825260005b8481106107565750507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8460006020809697860101520116010190565b602081830181015184830182015201610717565b9060028251106107f457600091825b81518410156107ee5760ff9060018261079287866106c9565b5151161b918282166107b0575017926107aa9061066d565b92610779565b6024906107bd87866106c9565b515116604051907f1ed4de830000000000000000000000000000000000000000000000000000000082526004820152fd5b50509050565b905056fea164736f6c6343000812000a",
    "sourceMap": "332:1066:81:-:0;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436101561001257600080fd5b60003560e01c63072160951461002757600080fd5b3461034a5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261034a5760043573ffffffffffffffffffffffffffffffffffffffff8116810361034a57602490813567ffffffffffffffff811161034a57610098903690600401610526565b60449291923567ffffffffffffffff811161034a576100bb903690600401610526565b604085848196949601031261034a5760208501359267ffffffffffffffff841161034a57808601601f85880101121561034a57838601356100fb816105e0565b94610109604051968761059f565b8186526020860183890160208460051b848c0101011161034a576020828a0101905b60208460051b848c010101821061046457505050505083019260208185031261034a5780359067ffffffffffffffff821161034a57019280601f8501121561034a57833593610179856105e0565b94610187604051968761059f565b80865260208087019160051b8301019183831161034a5760208101915b8383106103d057505050505063ffffffff42166101c08461076a565b600093845b81518610156103c1578760ff6101db88856106c9565b5151168651811015610393576101f181886106c9565b519073ffffffffffffffffffffffffffffffffffffffff82511615610363575073ffffffffffffffffffffffffffffffffffffffff81876000886102c5896102958f61024960209a918b8b819451169a0151946106c9565b510151916040519a8b998a9889977f871d81b70000000000000000000000000000000000000000000000000000000089526004890152169086015260806044860152608485019061070c565b907ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc84830301606485015261070c565b03925af190811561035757600091610320575b5081018091116102f2576102ec909561066d565b946101c5565b877f4e487b710000000000000000000000000000000000000000000000000000000060005260116004526000fd5b90506020813d60201161034f575b8161033b6020938361059f565b8101031261034a5751386102d8565b600080fd5b3d915061032e565b6040513d6000823e3d90fd5b9050604051907ff3e4f1b40000000000000000000000000000000000000000000000000000000082526004820152fd5b604051907ff3e4f1b40000000000000000000000000000000000000000000000000000000082526004820152fd5b86602091604051913511158152f35b823567ffffffffffffffff811161034a5782019060407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0838803011261034a576040519061041d82610554565b602083013560ff8116810361034a57825260408301359167ffffffffffffffff831161034a57610455886020809695819601016105f8565b838201528152019201916101a4565b813567ffffffffffffffff811161034a576040848c018201878d01037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0011261034a57604051916104b483610554565b848c0182016020013573ffffffffffffffffffffffffffffffffffffffff8116900361034a578b8501820160208101358452604001359067ffffffffffffffff821161034a576020936105158e8680969581968b8e850194010101016105f8565b83820152815201920191905061012b565b9181601f8401121561034a5782359167ffffffffffffffff831161034a576020838186019501011161034a57565b6040810190811067ffffffffffffffff82111761057057604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761057057604052565b67ffffffffffffffff81116105705760051b60200190565b81601f8201121561034a5780359067ffffffffffffffff8211610570576040519261064b60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f860116018561059f565b8284526020838301011161034a57816000926020809301838601378301015290565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461069a5760010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b80518210156106dd5760209160051b010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b919082519283825260005b8481106107565750507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8460006020809697860101520116010190565b602081830181015184830182015201610717565b9060028251106107f457600091825b81518410156107ee5760ff9060018261079287866106c9565b5151161b918282166107b0575017926107aa9061066d565b92610779565b6024906107bd87866106c9565b515116604051907f1ed4de830000000000000000000000000000000000000000000000000000000082526004820152fd5b50509050565b905056fea164736f6c6343000812000a",
    "sourceMap": "332:1066:81:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;1083:41;;;;;;;332:1066;;;;;;;;;;;;;;1083:41;;;332:1066;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;1083:41;;;332:1066;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1176:43;;;;;;;332:1066;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1285:15;;;;;332:1066;1285:15;332:1066;1915:14:83;;;:::i;:::-;332:1066:81;;;2022:3:83;332:1066:81;;1995:25:83;;;;;2065:17;332:1066:81;2065:17:83;;;;:::i;:::-;;332:1066:81;;;;2106:41:83;;;2102:89;;2232:32;;;;:::i;:::-;;332:1066:81;;;;;2466:27:83;2462:75;;332:1066:81;;;;;;;;;;2724:17:83;332:1066:81;;;;;;;;;2691:15:83;;;2724:17;;:::i;:::-;;:24;;332:1066:81;;;2572:190:83;;;;;;;332:1066:81;2572:190:83;;332:1066:81;2572:190:83;;332:1066:81;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;2572:190:83;;;;;;;;;332:1066:81;2572:190:83;;;2022:3;332:1066:81;;;;;;;;2022:3:83;2552:210;2022:3;;:::i;:::-;1980:13;;;332:1066:81;;;;;;;;;;2572:190:83;;;332:1066:81;2572:190:83;;332:1066:81;2572:190:83;;;;;;332:1066:81;2572:190:83;;;:::i;:::-;;;332:1066:81;;;;;2572:190:83;;;332:1066:81;;;;2572:190:83;;;-1:-1:-1;2572:190:83;;;332:1066:81;;;;;;;;;2462:75:83;332:1066:81;;;;2502:35:83;;;;332:1066:81;2502:35:83;;332:1066:81;2502:35:83;2102:89;332:1066:81;;2156:35:83;;;;332:1066:81;2156:35:83;;332:1066:81;2156:35:83;1995:25;;332:1066:81;1995:25:83;332:1066:81;;;;-1:-1:-1;1356:32:81;332:1066;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;1083:41;;;332:1066;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1083:41;332:1066;1083:41;;;;;;;;;;;332:1066;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;332:1066:81;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;332:1066:81;;;;;;;;;;;-1:-1:-1;332:1066:81;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;604:438:83;;703:1;332:1066:81;;687:17:83;683:46;;-1:-1:-1;760:13:83;;794:3;332:1066:81;;775:17:83;;;;;332:1066:81;890:9:83;885:1;890:9;;;;;:::i;:::-;;332:1066:81;;;919:10:83;;;;915:59;;-1:-1:-1;1022:11:83;;794:3;;;:::i;:::-;760:13;;;915:59;332:1066:81;958:9:83;;;;;:::i;:::-;;332:1066:81;;;;943:31:83;;;;;;;332:1066:81;943:31:83;775:17;;;;;604:438::o;683:46::-;716:7;;:::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "validate(address,bytes,bytes)": "07216095"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"index\",\"type\":\"uint8\"}],\"name\":\"DuplicateFound\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"InvalidStrategyIndex\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"userParams\",\"type\":\"bytes\"}],\"name\":\"validate\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"validate(address,bytes,bytes)\":{\"params\":{\"author\":\"Author of the proposal\",\"params\":\"Bytes that should decode to proposalThreshold and allowedStrategies\",\"userParams\":\"User provided parameters for the voting strategies\"},\"returns\":{\"_0\":\"bool  Whether the proposal should be validated or not\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"validate(address,bytes,bytes)\":{\"notice\":\"Validates a proposal using the voting strategies to compute the proposal power.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/proposal-validation-strategies/VotingPowerProposalValidationStrategy.sol\":\"VotingPowerProposalValidationStrategy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[\":@gnosis.pm/safe-contracts/=lib/safe-contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@prb/test/=lib/prb-test/src/\",\":@zodiac/=lib/zodiac/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":prb-test/=lib/prb-test/src/\",\":safe-contracts/=lib/safe-contracts/contracts/\",\":zodiac/=lib/zodiac/contracts/\"],\"viaIR\":true},\"sources\":{\"lib/safe-contracts/contracts/common/Enum.sol\":{\"keccak256\":\"0x473e45b1a5cc47be494b0e123c9127f0c11c1e0992a321ae5a644c0bfdb2c14f\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://948e6d5a8bd7377f7795b6e28584eab9be5c0a8db240bf5e606744a175238c3d\",\"dweb:/ipfs/QmQQaUmQfpuejV41jbxKSTgEBYYCcVTjCsDMgf2htgz6ej\"]},\"src/interfaces/IExecutionStrategy.sol\":{\"keccak256\":\"0x641b22408afae2225f451724a25536b7237ca0be5bb4eed6fa4049cfdbee4f47\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8de2ce3c2d23b4302594a6584a2b679f574e03182ae63547533cb519a8127ce1\",\"dweb:/ipfs/Qma22mCuJreVqGLY3BPSb1gVkMQ3bzPZRPghUFoeBQrtb1\"]},\"src/interfaces/IProposalValidationStrategy.sol\":{\"keccak256\":\"0x34d0f7ab219de781b8416c7e01433fd3f73b047c67ad2ed22fee977da1b60a97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58d5fdd6547db317888d26834acab262d2645166127fce4f5c0799df0208276d\",\"dweb:/ipfs/QmQf4bergX91ahoUuFUnCNJtnq1b6A4Hjm8QN6pgrXUqdS\"]},\"src/interfaces/ISpace.sol\":{\"keccak256\":\"0xd6eb7040d9ca4160ee83aa1e77c98d0d9c3cc92a6de41627941fe2e727f8c634\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3824b03590e99530c8d49066fc2f40affd12e9e611b0437dc0827134ae87ac7\",\"dweb:/ipfs/QmNbuKjHD5dXaEbuQRZsZcYvDgPHRE75qTt1xXQhM5Dr3D\"]},\"src/interfaces/IVotingStrategy.sol\":{\"keccak256\":\"0xa9e7d741382ea175910a09207767e0ac86796c88b1563fb64b522ceafd157641\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://14820b0986a1aabf47259504cf15bc1f46b2256c119e358ee9b34a0ae7ce6b4f\",\"dweb:/ipfs/QmSJp51oJHEFj7PJxiXTfG7bSm9w9kG3DYAjjd5B5q1prH\"]},\"src/interfaces/execution-strategies/IExecutionStrategyErrors.sol\":{\"keccak256\":\"0x50e9d34682598a16c623476385a1d10e62b69c46ac07258d5d4de55a918e2eb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://64f878026d6eba929754257bdf8224ad60dde00b84a33b72609b1b038e2ac62e\",\"dweb:/ipfs/QmYWaLHaUBMfQeiVKyrSAi1GKMYJS9aT3YrvjVsG4uPfYo\"]},\"src/interfaces/space/ISpaceActions.sol\":{\"keccak256\":\"0x4cb1f835e3c272ef2f792217aff5dfc5cc24a6dc7545bf5e79255b40dc189f7e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ee305dcc82a539242c5d30cb2e055438e1660a250905f529e1176fa8ba8cc0d\",\"dweb:/ipfs/Qmbr3LW2FSYLBPW7FVqUsRBeRtYzUbr5pSSYCKvAQiseLV\"]},\"src/interfaces/space/ISpaceErrors.sol\":{\"keccak256\":\"0x98de3448f2b2f607cb2efdf2007ec1599d18956faf0eb0eaef9c6bb2cde58623\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://beeeee1917b1cafac8f428d02ba84a9c5ab9d7e7a1c904723601c45287453089\",\"dweb:/ipfs/QmPPLznTjJCDozXGhTrh7u6uihvYwh4fKTttJQEdemBeE9\"]},\"src/interfaces/space/ISpaceEvents.sol\":{\"keccak256\":\"0xcac295a6952a3bdd59207107c3f2ad9715b9797c55ff8a78ae031f0645bf3123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3791d4d901f65c959f00bf8c62fd9ea54b3894209e8acbe6c9732c3c18d0bf12\",\"dweb:/ipfs/QmYgwqJ66xeDQMYnjs4vxQuS6E9v9VTo1cJxHpdtHBi24S\"]},\"src/interfaces/space/ISpaceOwnerActions.sol\":{\"keccak256\":\"0x1d4a279316830d3eeea66942969234ac8fd75301751408faeaf5c3f5380e069f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15b45a1f2ee308c669c8561b7be8feedd066e91591effbcc3862e6307ee70f58\",\"dweb:/ipfs/Qmde6DFXgUczm1mxkv8LRGfRKoLrnmGy1CBgMTeqBAm3GW\"]},\"src/interfaces/space/ISpaceState.sol\":{\"keccak256\":\"0x62779642b4df2318d9abf971e579f39a2972da591e8068b91b74793ba6c6cb05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d3ab021a6a9974db7adc9d764f6fc79013dd948339afa1a19445b0baf16f8c8\",\"dweb:/ipfs/QmS9yVBQ89TeE7s39W4qjSxfGZbbRkzQnNPrKtUZMTRoqV\"]},\"src/proposal-validation-strategies/VotingPowerProposalValidationStrategy.sol\":{\"keccak256\":\"0x600e924b0a837441afae8e67d62a5a6e22b333b1caf02dda5e971328067b159f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2214810fe6c0b96c0f62ebf56bdc16cd8bb3ef808bbc4b081131021c59885b0\",\"dweb:/ipfs/QmUtgxDwBJiZYhgQfdGgmmJuYEeDAd3gGhgbKn2ioJUfez\"]},\"src/types.sol\":{\"keccak256\":\"0x4db6bacf59f40bf43521951fb930802f81d391b7fa304b6b5342a6065b8bbfe6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed8c66625a98c8a5e4f914a96d74c0b5c2b981d42e6be8512f79bc3f5e3813da\",\"dweb:/ipfs/QmSkVP5zenpp4LQVPE2WebCndkhC6AiojsYPep2y4vmT3B\"]},\"src/utils/GetCumulativePower.sol\":{\"keccak256\":\"0x3d9a96739993a3f9f6a79ad9f2e217a5cfcceb54b5fdd94e265ce64eec86d575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc20d254917261817fcf1af5d7c0a42379ad0f43f33edb072d2bcbb1aaef14ac\",\"dweb:/ipfs/QmcaUmcu52AKQ9ay9AccHH4keX1tbtEWDu48VtThEvxMNB\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.18+commit.87f61d96"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "index",
              "type": "uint8"
            }
          ],
          "type": "error",
          "name": "DuplicateFound"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "InvalidStrategyIndex"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "author",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "params",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "userParams",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "validate",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "validate(address,bytes,bytes)": {
            "params": {
              "author": "Author of the proposal",
              "params": "Bytes that should decode to proposalThreshold and allowedStrategies",
              "userParams": "User provided parameters for the voting strategies"
            },
            "returns": {
              "_0": "bool  Whether the proposal should be validated or not"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "validate(address,bytes,bytes)": {
            "notice": "Validates a proposal using the voting strategies to compute the proposal power."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@gnosis.pm/safe-contracts/=lib/safe-contracts/",
        ":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        ":@prb/test/=lib/prb-test/src/",
        ":@zodiac/=lib/zodiac/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-gas-snapshot/=lib/forge-gas-snapshot/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":prb-test/=lib/prb-test/src/",
        ":safe-contracts/=lib/safe-contracts/contracts/",
        ":zodiac/=lib/zodiac/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 10000
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "src/proposal-validation-strategies/VotingPowerProposalValidationStrategy.sol": "VotingPowerProposalValidationStrategy"
      },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "lib/safe-contracts/contracts/common/Enum.sol": {
        "keccak256": "0x473e45b1a5cc47be494b0e123c9127f0c11c1e0992a321ae5a644c0bfdb2c14f",
        "urls": [
          "bzz-raw://948e6d5a8bd7377f7795b6e28584eab9be5c0a8db240bf5e606744a175238c3d",
          "dweb:/ipfs/QmQQaUmQfpuejV41jbxKSTgEBYYCcVTjCsDMgf2htgz6ej"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/interfaces/IExecutionStrategy.sol": {
        "keccak256": "0x641b22408afae2225f451724a25536b7237ca0be5bb4eed6fa4049cfdbee4f47",
        "urls": [
          "bzz-raw://8de2ce3c2d23b4302594a6584a2b679f574e03182ae63547533cb519a8127ce1",
          "dweb:/ipfs/Qma22mCuJreVqGLY3BPSb1gVkMQ3bzPZRPghUFoeBQrtb1"
        ],
        "license": "MIT"
      },
      "src/interfaces/IProposalValidationStrategy.sol": {
        "keccak256": "0x34d0f7ab219de781b8416c7e01433fd3f73b047c67ad2ed22fee977da1b60a97",
        "urls": [
          "bzz-raw://58d5fdd6547db317888d26834acab262d2645166127fce4f5c0799df0208276d",
          "dweb:/ipfs/QmQf4bergX91ahoUuFUnCNJtnq1b6A4Hjm8QN6pgrXUqdS"
        ],
        "license": "MIT"
      },
      "src/interfaces/ISpace.sol": {
        "keccak256": "0xd6eb7040d9ca4160ee83aa1e77c98d0d9c3cc92a6de41627941fe2e727f8c634",
        "urls": [
          "bzz-raw://c3824b03590e99530c8d49066fc2f40affd12e9e611b0437dc0827134ae87ac7",
          "dweb:/ipfs/QmNbuKjHD5dXaEbuQRZsZcYvDgPHRE75qTt1xXQhM5Dr3D"
        ],
        "license": "MIT"
      },
      "src/interfaces/IVotingStrategy.sol": {
        "keccak256": "0xa9e7d741382ea175910a09207767e0ac86796c88b1563fb64b522ceafd157641",
        "urls": [
          "bzz-raw://14820b0986a1aabf47259504cf15bc1f46b2256c119e358ee9b34a0ae7ce6b4f",
          "dweb:/ipfs/QmSJp51oJHEFj7PJxiXTfG7bSm9w9kG3DYAjjd5B5q1prH"
        ],
        "license": "MIT"
      },
      "src/interfaces/execution-strategies/IExecutionStrategyErrors.sol": {
        "keccak256": "0x50e9d34682598a16c623476385a1d10e62b69c46ac07258d5d4de55a918e2eb2",
        "urls": [
          "bzz-raw://64f878026d6eba929754257bdf8224ad60dde00b84a33b72609b1b038e2ac62e",
          "dweb:/ipfs/QmYWaLHaUBMfQeiVKyrSAi1GKMYJS9aT3YrvjVsG4uPfYo"
        ],
        "license": "MIT"
      },
      "src/interfaces/space/ISpaceActions.sol": {
        "keccak256": "0x4cb1f835e3c272ef2f792217aff5dfc5cc24a6dc7545bf5e79255b40dc189f7e",
        "urls": [
          "bzz-raw://1ee305dcc82a539242c5d30cb2e055438e1660a250905f529e1176fa8ba8cc0d",
          "dweb:/ipfs/Qmbr3LW2FSYLBPW7FVqUsRBeRtYzUbr5pSSYCKvAQiseLV"
        ],
        "license": "MIT"
      },
      "src/interfaces/space/ISpaceErrors.sol": {
        "keccak256": "0x98de3448f2b2f607cb2efdf2007ec1599d18956faf0eb0eaef9c6bb2cde58623",
        "urls": [
          "bzz-raw://beeeee1917b1cafac8f428d02ba84a9c5ab9d7e7a1c904723601c45287453089",
          "dweb:/ipfs/QmPPLznTjJCDozXGhTrh7u6uihvYwh4fKTttJQEdemBeE9"
        ],
        "license": "UNLICENSED"
      },
      "src/interfaces/space/ISpaceEvents.sol": {
        "keccak256": "0xcac295a6952a3bdd59207107c3f2ad9715b9797c55ff8a78ae031f0645bf3123",
        "urls": [
          "bzz-raw://3791d4d901f65c959f00bf8c62fd9ea54b3894209e8acbe6c9732c3c18d0bf12",
          "dweb:/ipfs/QmYgwqJ66xeDQMYnjs4vxQuS6E9v9VTo1cJxHpdtHBi24S"
        ],
        "license": "MIT"
      },
      "src/interfaces/space/ISpaceOwnerActions.sol": {
        "keccak256": "0x1d4a279316830d3eeea66942969234ac8fd75301751408faeaf5c3f5380e069f",
        "urls": [
          "bzz-raw://15b45a1f2ee308c669c8561b7be8feedd066e91591effbcc3862e6307ee70f58",
          "dweb:/ipfs/Qmde6DFXgUczm1mxkv8LRGfRKoLrnmGy1CBgMTeqBAm3GW"
        ],
        "license": "MIT"
      },
      "src/interfaces/space/ISpaceState.sol": {
        "keccak256": "0x62779642b4df2318d9abf971e579f39a2972da591e8068b91b74793ba6c6cb05",
        "urls": [
          "bzz-raw://9d3ab021a6a9974db7adc9d764f6fc79013dd948339afa1a19445b0baf16f8c8",
          "dweb:/ipfs/QmS9yVBQ89TeE7s39W4qjSxfGZbbRkzQnNPrKtUZMTRoqV"
        ],
        "license": "MIT"
      },
      "src/proposal-validation-strategies/VotingPowerProposalValidationStrategy.sol": {
        "keccak256": "0x600e924b0a837441afae8e67d62a5a6e22b333b1caf02dda5e971328067b159f",
        "urls": [
          "bzz-raw://b2214810fe6c0b96c0f62ebf56bdc16cd8bb3ef808bbc4b081131021c59885b0",
          "dweb:/ipfs/QmUtgxDwBJiZYhgQfdGgmmJuYEeDAd3gGhgbKn2ioJUfez"
        ],
        "license": "MIT"
      },
      "src/types.sol": {
        "keccak256": "0x4db6bacf59f40bf43521951fb930802f81d391b7fa304b6b5342a6065b8bbfe6",
        "urls": [
          "bzz-raw://ed8c66625a98c8a5e4f914a96d74c0b5c2b981d42e6be8512f79bc3f5e3813da",
          "dweb:/ipfs/QmSkVP5zenpp4LQVPE2WebCndkhC6AiojsYPep2y4vmT3B"
        ],
        "license": "MIT"
      },
      "src/utils/GetCumulativePower.sol": {
        "keccak256": "0x3d9a96739993a3f9f6a79ad9f2e217a5cfcceb54b5fdd94e265ce64eec86d575",
        "urls": [
          "bzz-raw://fc20d254917261817fcf1af5d7c0a42379ad0f43f33edb072d2bcbb1aaef14ac",
          "dweb:/ipfs/QmcaUmcu52AKQ9ay9AccHH4keX1tbtEWDu48VtThEvxMNB"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/proposal-validation-strategies/VotingPowerProposalValidationStrategy.sol",
    "id": 36369,
    "exportedSymbols": {
      "GetCumulativePower": [36602],
      "IProposalValidationStrategy": [35601],
      "ISpace": [35653],
      "IndexedStrategy": [36407],
      "Strategy": [36402],
      "VotingPowerProposalValidationStrategy": [36368]
    },
    "nodeType": "SourceUnit",
    "src": "33:1366:81",
    "nodes": [
      {
        "id": 36292,
        "nodeType": "PragmaDirective",
        "src": "33:24:81",
        "nodes": [],
        "literals": ["solidity", "^", "0.8", ".18"]
      },
      {
        "id": 36294,
        "nodeType": "ImportDirective",
        "src": "59:92:81",
        "nodes": [],
        "absolutePath": "src/interfaces/IProposalValidationStrategy.sol",
        "file": "../interfaces/IProposalValidationStrategy.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 36369,
        "sourceUnit": 35602,
        "symbolAliases": [
          {
            "foreign": {
              "id": 36293,
              "name": "IProposalValidationStrategy",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 35601,
              "src": "68:27:81",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 36297,
        "nodeType": "ImportDirective",
        "src": "152:57:81",
        "nodes": [],
        "absolutePath": "src/types.sol",
        "file": "../types.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 36369,
        "sourceUnit": 36436,
        "symbolAliases": [
          {
            "foreign": {
              "id": 36295,
              "name": "IndexedStrategy",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36407,
              "src": "161:15:81",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 36296,
              "name": "Strategy",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36402,
              "src": "178:8:81",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 36299,
        "nodeType": "ImportDirective",
        "src": "210:50:81",
        "nodes": [],
        "absolutePath": "src/interfaces/ISpace.sol",
        "file": "../interfaces/ISpace.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 36369,
        "sourceUnit": 35654,
        "symbolAliases": [
          {
            "foreign": {
              "id": 36298,
              "name": "ISpace",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 35653,
              "src": "219:6:81",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 36301,
        "nodeType": "ImportDirective",
        "src": "261:69:81",
        "nodes": [],
        "absolutePath": "src/utils/GetCumulativePower.sol",
        "file": "../utils/GetCumulativePower.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 36369,
        "sourceUnit": 36603,
        "symbolAliases": [
          {
            "foreign": {
              "id": 36300,
              "name": "GetCumulativePower",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36602,
              "src": "270:18:81",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 36368,
        "nodeType": "ContractDefinition",
        "src": "332:1066:81",
        "nodes": [
          {
            "id": 36306,
            "nodeType": "UsingForDirective",
            "src": "416:37:81",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 36304,
              "name": "GetCumulativePower",
              "nameLocations": ["422:18:81"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 36602,
              "src": "422:18:81"
            },
            "typeName": {
              "id": 36305,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "445:7:81",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "id": 36367,
            "nodeType": "FunctionDefinition",
            "src": "859:537:81",
            "nodes": [],
            "body": {
              "id": 36366,
              "nodeType": "Block",
              "src": "1006:390:81",
              "nodes": [],
              "statements": [
                {
                  "assignments": [36320, 36324],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 36320,
                      "mutability": "mutable",
                      "name": "proposalThreshold",
                      "nameLocation": "1025:17:81",
                      "nodeType": "VariableDeclaration",
                      "scope": 36366,
                      "src": "1017:25:81",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 36319,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1017:7:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 36324,
                      "mutability": "mutable",
                      "name": "allowedStrategies",
                      "nameLocation": "1062:17:81",
                      "nodeType": "VariableDeclaration",
                      "scope": 36366,
                      "src": "1044:35:81",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Strategy_$36402_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct Strategy[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 36322,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 36321,
                            "name": "Strategy",
                            "nameLocations": ["1044:8:81"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 36402,
                            "src": "1044:8:81"
                          },
                          "referencedDeclaration": 36402,
                          "src": "1044:8:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Strategy_$36402_storage_ptr",
                            "typeString": "struct Strategy"
                          }
                        },
                        "id": 36323,
                        "nodeType": "ArrayTypeName",
                        "src": "1044:10:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Strategy_$36402_storage_$dyn_storage_ptr",
                          "typeString": "struct Strategy[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 36334,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 36327,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36311,
                        "src": "1094:6:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 36329,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1103:7:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 36328,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1103:7:81",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "baseExpression": {
                              "id": 36330,
                              "name": "Strategy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 36402,
                              "src": "1112:8:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_Strategy_$36402_storage_ptr_$",
                                "typeString": "type(struct Strategy storage pointer)"
                              }
                            },
                            "id": 36331,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1112:10:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_array$_t_struct$_Strategy_$36402_memory_ptr_$dyn_memory_ptr_$",
                              "typeString": "type(struct Strategy memory[] memory)"
                            }
                          }
                        ],
                        "id": 36332,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1102:21:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_type$_t_uint256_$_$_t_type$_t_array$_t_struct$_Strategy_$36402_memory_ptr_$dyn_memory_ptr_$_$",
                          "typeString": "tuple(type(uint256),type(struct Strategy memory[] memory))"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_tuple$_t_type$_t_uint256_$_$_t_type$_t_array$_t_struct$_Strategy_$36402_memory_ptr_$dyn_memory_ptr_$_$",
                          "typeString": "tuple(type(uint256),type(struct Strategy memory[] memory))"
                        }
                      ],
                      "expression": {
                        "id": 36325,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "1083:3:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 36326,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1087:6:81",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "1083:10:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 36333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1083:41:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_struct$_Strategy_$36402_memory_ptr_$dyn_memory_ptr_$",
                      "typeString": "tuple(uint256,struct Strategy memory[] memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1016:108:81"
                },
                {
                  "assignments": [36339],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 36339,
                      "mutability": "mutable",
                      "name": "userStrategies",
                      "nameLocation": "1159:14:81",
                      "nodeType": "VariableDeclaration",
                      "scope": 36366,
                      "src": "1134:39:81",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_IndexedStrategy_$36407_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct IndexedStrategy[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 36337,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 36336,
                            "name": "IndexedStrategy",
                            "nameLocations": ["1134:15:81"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 36407,
                            "src": "1134:15:81"
                          },
                          "referencedDeclaration": 36407,
                          "src": "1134:15:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IndexedStrategy_$36407_storage_ptr",
                            "typeString": "struct IndexedStrategy"
                          }
                        },
                        "id": 36338,
                        "nodeType": "ArrayTypeName",
                        "src": "1134:17:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_IndexedStrategy_$36407_storage_$dyn_storage_ptr",
                          "typeString": "struct IndexedStrategy[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 36347,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 36342,
                        "name": "userParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36313,
                        "src": "1187:10:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "components": [
                          {
                            "baseExpression": {
                              "id": 36343,
                              "name": "IndexedStrategy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 36407,
                              "src": "1200:15:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_IndexedStrategy_$36407_storage_ptr_$",
                                "typeString": "type(struct IndexedStrategy storage pointer)"
                              }
                            },
                            "id": 36344,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1200:17:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_array$_t_struct$_IndexedStrategy_$36407_memory_ptr_$dyn_memory_ptr_$",
                              "typeString": "type(struct IndexedStrategy memory[] memory)"
                            }
                          }
                        ],
                        "id": 36345,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1199:19:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_array$_t_struct$_IndexedStrategy_$36407_memory_ptr_$dyn_memory_ptr_$",
                          "typeString": "type(struct IndexedStrategy memory[] memory)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_type$_t_array$_t_struct$_IndexedStrategy_$36407_memory_ptr_$dyn_memory_ptr_$",
                          "typeString": "type(struct IndexedStrategy memory[] memory)"
                        }
                      ],
                      "expression": {
                        "id": 36340,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "1176:3:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 36341,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1180:6:81",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "1176:10:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 36346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1176:43:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_IndexedStrategy_$36407_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct IndexedStrategy memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1134:85:81"
                },
                {
                  "assignments": [36349],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 36349,
                      "mutability": "mutable",
                      "name": "votingPower",
                      "nameLocation": "1238:11:81",
                      "nodeType": "VariableDeclaration",
                      "scope": 36366,
                      "src": "1230:19:81",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 36348,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1230:7:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 36360,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 36354,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "1285:5:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 36355,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1291:9:81",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "1285:15:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 36353,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1278:6:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint32_$",
                            "typeString": "type(uint32)"
                          },
                          "typeName": {
                            "id": 36352,
                            "name": "uint32",
                            "nodeType": "ElementaryTypeName",
                            "src": "1278:6:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 36356,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1278:23:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 36357,
                        "name": "userStrategies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36339,
                        "src": "1303:14:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_IndexedStrategy_$36407_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct IndexedStrategy memory[] memory"
                        }
                      },
                      {
                        "id": 36358,
                        "name": "allowedStrategies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36324,
                        "src": "1319:17:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Strategy_$36402_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct Strategy memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_IndexedStrategy_$36407_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct IndexedStrategy memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_Strategy_$36402_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct Strategy memory[] memory"
                        }
                      ],
                      "expression": {
                        "id": 36350,
                        "name": "author",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36309,
                        "src": "1252:6:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 36351,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1259:18:81",
                      "memberName": "getCumulativePower",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36601,
                      "src": "1252:25:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint32_$_t_array$_t_struct$_IndexedStrategy_$36407_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_Strategy_$36402_memory_ptr_$dyn_memory_ptr_$returns$_t_uint256_$attached_to$_t_address_$",
                        "typeString": "function (address,uint32,struct IndexedStrategy memory[] memory,struct Strategy memory[] memory) returns (uint256)"
                      }
                    },
                    "id": 36359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1252:85:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1230:107:81"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 36363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 36361,
                          "name": "votingPower",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36349,
                          "src": "1356:11:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 36362,
                          "name": "proposalThreshold",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36320,
                          "src": "1371:17:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1356:32:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 36364,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1355:34:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 36318,
                  "id": 36365,
                  "nodeType": "Return",
                  "src": "1348:41:81"
                }
              ]
            },
            "baseFunctions": [35600],
            "documentation": {
              "id": 36307,
              "nodeType": "StructuredDocumentation",
              "src": "459:395:81",
              "text": " @notice  Validates a proposal using the voting strategies to compute the proposal power.\n @param   author  Author of the proposal\n @param   userParams  User provided parameters for the voting strategies\n @param   params  Bytes that should decode to proposalThreshold and allowedStrategies\n @return  bool  Whether the proposal should be validated or not"
            },
            "functionSelector": "07216095",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "validate",
            "nameLocation": "868:8:81",
            "overrides": {
              "id": 36315,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "982:8:81"
            },
            "parameters": {
              "id": 36314,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36309,
                  "mutability": "mutable",
                  "name": "author",
                  "nameLocation": "894:6:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 36367,
                  "src": "886:14:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 36308,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "886:7:81",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36311,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "925:6:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 36367,
                  "src": "910:21:81",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 36310,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "910:5:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36313,
                  "mutability": "mutable",
                  "name": "userParams",
                  "nameLocation": "956:10:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 36367,
                  "src": "941:25:81",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 36312,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "941:5:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "876:96:81"
            },
            "returnParameters": {
              "id": 36318,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36317,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 36367,
                  "src": "1000:4:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 36316,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1000:4:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "999:6:81"
            },
            "scope": 36368,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 36302,
              "name": "IProposalValidationStrategy",
              "nameLocations": ["382:27:81"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 35601,
              "src": "382:27:81"
            },
            "id": 36303,
            "nodeType": "InheritanceSpecifier",
            "src": "382:27:81"
          }
        ],
        "canonicalName": "VotingPowerProposalValidationStrategy",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [36368, 35601],
        "name": "VotingPowerProposalValidationStrategy",
        "nameLocation": "341:37:81",
        "scope": 36369,
        "usedErrors": [36446, 36450]
      }
    ],
    "license": "MIT"
  },
  "id": 81
}
